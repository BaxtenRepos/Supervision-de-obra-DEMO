/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-11-17 18:43:33 UTC)
 * on 2015-01-10 at 02:56:28 UTC 
 * Modify at your own risk.
 */

package com.csgit.cao.model.communicationchannel;

/**
 * Service definition for Communicationchannel (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CommunicationchannelRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Communicationchannel extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the communicationchannel library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://1-dot-superobra-adquem.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "communicationchannel/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Communicationchannel(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Communicationchannel(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "calculaAvance".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link CalculaAvance#execute()} method to invoke the remote
   * operation.
   *
   * @param idReferencia
   * @param tipoReferencia
   * @param tipoCalculo
   * @return the request
   */
  public CalculaAvance calculaAvance(java.lang.Long idReferencia, java.lang.Integer tipoReferencia, java.lang.Integer tipoCalculo) throws java.io.IOException {
    CalculaAvance result = new CalculaAvance(idReferencia, tipoReferencia, tipoCalculo);
    initialize(result);
    return result;
  }

  public class CalculaAvance extends CommunicationchannelRequest<java.lang.Object> {

    private static final String REST_PATH = "calculaAvance/{id_referencia}/{tipo_referencia}/{tipo_calculo}";

    /**
     * Create a request for the method "calculaAvance".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link CalculaAvance#execute()} method to invoke the remote
     * operation. <p> {@link CalculaAvance#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param idReferencia
     * @param tipoReferencia
     * @param tipoCalculo
     * @since 1.13
     */
    protected CalculaAvance(java.lang.Long idReferencia, java.lang.Integer tipoReferencia, java.lang.Integer tipoCalculo) {
      super(Communicationchannel.this, "POST", REST_PATH, null, java.lang.Object.class);
      this.idReferencia = com.google.api.client.util.Preconditions.checkNotNull(idReferencia, "Required parameter idReferencia must be specified.");
      this.tipoReferencia = com.google.api.client.util.Preconditions.checkNotNull(tipoReferencia, "Required parameter tipoReferencia must be specified.");
      this.tipoCalculo = com.google.api.client.util.Preconditions.checkNotNull(tipoCalculo, "Required parameter tipoCalculo must be specified.");
    }

    @Override
    public CalculaAvance setAlt(java.lang.String alt) {
      return (CalculaAvance) super.setAlt(alt);
    }

    @Override
    public CalculaAvance setFields(java.lang.String fields) {
      return (CalculaAvance) super.setFields(fields);
    }

    @Override
    public CalculaAvance setKey(java.lang.String key) {
      return (CalculaAvance) super.setKey(key);
    }

    @Override
    public CalculaAvance setOauthToken(java.lang.String oauthToken) {
      return (CalculaAvance) super.setOauthToken(oauthToken);
    }

    @Override
    public CalculaAvance setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CalculaAvance) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CalculaAvance setQuotaUser(java.lang.String quotaUser) {
      return (CalculaAvance) super.setQuotaUser(quotaUser);
    }

    @Override
    public CalculaAvance setUserIp(java.lang.String userIp) {
      return (CalculaAvance) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("id_referencia")
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public CalculaAvance setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key("tipo_referencia")
    private java.lang.Integer tipoReferencia;

    /**

     */
    public java.lang.Integer getTipoReferencia() {
      return tipoReferencia;
    }

    public CalculaAvance setTipoReferencia(java.lang.Integer tipoReferencia) {
      this.tipoReferencia = tipoReferencia;
      return this;
    }

    @com.google.api.client.util.Key("tipo_calculo")
    private java.lang.Integer tipoCalculo;

    /**

     */
    public java.lang.Integer getTipoCalculo() {
      return tipoCalculo;
    }

    public CalculaAvance setTipoCalculo(java.lang.Integer tipoCalculo) {
      this.tipoCalculo = tipoCalculo;
      return this;
    }

    @Override
    public CalculaAvance set(String parameterName, Object value) {
      return (CalculaAvance) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAditivas_Deductivas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetAditivasDeductivas#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetAditivasDeductivas getAditivasDeductivas(java.lang.Long id) throws java.io.IOException {
    GetAditivasDeductivas result = new GetAditivasDeductivas(id);
    initialize(result);
    return result;
  }

  public class GetAditivasDeductivas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AditivasDeductivas> {

    private static final String REST_PATH = "aditivas_deductivas/{id}";

    /**
     * Create a request for the method "getAditivas_Deductivas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetAditivasDeductivas#execute()} method to invoke the
     * remote operation. <p> {@link GetAditivasDeductivas#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetAditivasDeductivas(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.AditivasDeductivas.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAditivasDeductivas setAlt(java.lang.String alt) {
      return (GetAditivasDeductivas) super.setAlt(alt);
    }

    @Override
    public GetAditivasDeductivas setFields(java.lang.String fields) {
      return (GetAditivasDeductivas) super.setFields(fields);
    }

    @Override
    public GetAditivasDeductivas setKey(java.lang.String key) {
      return (GetAditivasDeductivas) super.setKey(key);
    }

    @Override
    public GetAditivasDeductivas setOauthToken(java.lang.String oauthToken) {
      return (GetAditivasDeductivas) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAditivasDeductivas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAditivasDeductivas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAditivasDeductivas setQuotaUser(java.lang.String quotaUser) {
      return (GetAditivasDeductivas) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAditivasDeductivas setUserIp(java.lang.String userIp) {
      return (GetAditivasDeductivas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetAditivasDeductivas setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetAditivasDeductivas set(String parameterName, Object value) {
      return (GetAditivasDeductivas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAvance_Financiero".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetAvanceFinanciero#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetAvanceFinanciero getAvanceFinanciero(java.lang.Long id) throws java.io.IOException {
    GetAvanceFinanciero result = new GetAvanceFinanciero(id);
    initialize(result);
    return result;
  }

  public class GetAvanceFinanciero extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AvanceFinanciero> {

    private static final String REST_PATH = "avance_financiero/{id}";

    /**
     * Create a request for the method "getAvance_Financiero".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetAvanceFinanciero#execute()} method to invoke the
     * remote operation. <p> {@link GetAvanceFinanciero#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetAvanceFinanciero(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.AvanceFinanciero.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAvanceFinanciero setAlt(java.lang.String alt) {
      return (GetAvanceFinanciero) super.setAlt(alt);
    }

    @Override
    public GetAvanceFinanciero setFields(java.lang.String fields) {
      return (GetAvanceFinanciero) super.setFields(fields);
    }

    @Override
    public GetAvanceFinanciero setKey(java.lang.String key) {
      return (GetAvanceFinanciero) super.setKey(key);
    }

    @Override
    public GetAvanceFinanciero setOauthToken(java.lang.String oauthToken) {
      return (GetAvanceFinanciero) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAvanceFinanciero setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAvanceFinanciero) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAvanceFinanciero setQuotaUser(java.lang.String quotaUser) {
      return (GetAvanceFinanciero) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAvanceFinanciero setUserIp(java.lang.String userIp) {
      return (GetAvanceFinanciero) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetAvanceFinanciero setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetAvanceFinanciero set(String parameterName, Object value) {
      return (GetAvanceFinanciero) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCat_Contactos".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetCatContactos#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetCatContactos getCatContactos(java.lang.Long id) throws java.io.IOException {
    GetCatContactos result = new GetCatContactos(id);
    initialize(result);
    return result;
  }

  public class GetCatContactos extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatContactos> {

    private static final String REST_PATH = "cat_contactos/{id}";

    /**
     * Create a request for the method "getCat_Contactos".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetCatContactos#execute()} method to invoke the remote
     * operation. <p> {@link GetCatContactos#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCatContactos(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CatContactos.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCatContactos setAlt(java.lang.String alt) {
      return (GetCatContactos) super.setAlt(alt);
    }

    @Override
    public GetCatContactos setFields(java.lang.String fields) {
      return (GetCatContactos) super.setFields(fields);
    }

    @Override
    public GetCatContactos setKey(java.lang.String key) {
      return (GetCatContactos) super.setKey(key);
    }

    @Override
    public GetCatContactos setOauthToken(java.lang.String oauthToken) {
      return (GetCatContactos) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCatContactos setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCatContactos) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCatContactos setQuotaUser(java.lang.String quotaUser) {
      return (GetCatContactos) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCatContactos setUserIp(java.lang.String userIp) {
      return (GetCatContactos) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCatContactos setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCatContactos set(String parameterName, Object value) {
      return (GetCatContactos) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCat_Personal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetCatPersonal#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetCatPersonal getCatPersonal(java.lang.Long id) throws java.io.IOException {
    GetCatPersonal result = new GetCatPersonal(id);
    initialize(result);
    return result;
  }

  public class GetCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatPersonal> {

    private static final String REST_PATH = "cat_personal/{id}";

    /**
     * Create a request for the method "getCat_Personal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetCatPersonal#execute()} method to invoke the remote
     * operation. <p> {@link GetCatPersonal#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCatPersonal(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CatPersonal.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCatPersonal setAlt(java.lang.String alt) {
      return (GetCatPersonal) super.setAlt(alt);
    }

    @Override
    public GetCatPersonal setFields(java.lang.String fields) {
      return (GetCatPersonal) super.setFields(fields);
    }

    @Override
    public GetCatPersonal setKey(java.lang.String key) {
      return (GetCatPersonal) super.setKey(key);
    }

    @Override
    public GetCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (GetCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (GetCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCatPersonal setUserIp(java.lang.String userIp) {
      return (GetCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCatPersonal setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCatPersonal set(String parameterName, Object value) {
      return (GetCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCat_Tipo_Empresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetCatTipoEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetCatTipoEmpresa getCatTipoEmpresa(java.lang.Long id) throws java.io.IOException {
    GetCatTipoEmpresa result = new GetCatTipoEmpresa(id);
    initialize(result);
    return result;
  }

  public class GetCatTipoEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa> {

    private static final String REST_PATH = "cat_tipo_empresa/{id}";

    /**
     * Create a request for the method "getCat_Tipo_Empresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetCatTipoEmpresa#execute()} method to invoke the
     * remote operation. <p> {@link GetCatTipoEmpresa#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCatTipoEmpresa(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCatTipoEmpresa setAlt(java.lang.String alt) {
      return (GetCatTipoEmpresa) super.setAlt(alt);
    }

    @Override
    public GetCatTipoEmpresa setFields(java.lang.String fields) {
      return (GetCatTipoEmpresa) super.setFields(fields);
    }

    @Override
    public GetCatTipoEmpresa setKey(java.lang.String key) {
      return (GetCatTipoEmpresa) super.setKey(key);
    }

    @Override
    public GetCatTipoEmpresa setOauthToken(java.lang.String oauthToken) {
      return (GetCatTipoEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCatTipoEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCatTipoEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCatTipoEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (GetCatTipoEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCatTipoEmpresa setUserIp(java.lang.String userIp) {
      return (GetCatTipoEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCatTipoEmpresa setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCatTipoEmpresa set(String parameterName, Object value) {
      return (GetCatTipoEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCat_Tipo_Maquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetCatTipoMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetCatTipoMaquinaria getCatTipoMaquinaria(java.lang.Long id) throws java.io.IOException {
    GetCatTipoMaquinaria result = new GetCatTipoMaquinaria(id);
    initialize(result);
    return result;
  }

  public class GetCatTipoMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria> {

    private static final String REST_PATH = "cat_tipo_maquinaria/{id}";

    /**
     * Create a request for the method "getCat_Tipo_Maquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetCatTipoMaquinaria#execute()} method to invoke the
     * remote operation. <p> {@link GetCatTipoMaquinaria#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCatTipoMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCatTipoMaquinaria setAlt(java.lang.String alt) {
      return (GetCatTipoMaquinaria) super.setAlt(alt);
    }

    @Override
    public GetCatTipoMaquinaria setFields(java.lang.String fields) {
      return (GetCatTipoMaquinaria) super.setFields(fields);
    }

    @Override
    public GetCatTipoMaquinaria setKey(java.lang.String key) {
      return (GetCatTipoMaquinaria) super.setKey(key);
    }

    @Override
    public GetCatTipoMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (GetCatTipoMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCatTipoMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCatTipoMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCatTipoMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (GetCatTipoMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCatTipoMaquinaria setUserIp(java.lang.String userIp) {
      return (GetCatTipoMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCatTipoMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCatTipoMaquinaria set(String parameterName, Object value) {
      return (GetCatTipoMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCat_Tipo_Presona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetCatTipoPresona#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetCatTipoPresona getCatTipoPresona(java.lang.Long id) throws java.io.IOException {
    GetCatTipoPresona result = new GetCatTipoPresona(id);
    initialize(result);
    return result;
  }

  public class GetCatTipoPresona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoPresona> {

    private static final String REST_PATH = "cat_tipo_presona/{id}";

    /**
     * Create a request for the method "getCat_Tipo_Presona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetCatTipoPresona#execute()} method to invoke the
     * remote operation. <p> {@link GetCatTipoPresona#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCatTipoPresona(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CatTipoPresona.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCatTipoPresona setAlt(java.lang.String alt) {
      return (GetCatTipoPresona) super.setAlt(alt);
    }

    @Override
    public GetCatTipoPresona setFields(java.lang.String fields) {
      return (GetCatTipoPresona) super.setFields(fields);
    }

    @Override
    public GetCatTipoPresona setKey(java.lang.String key) {
      return (GetCatTipoPresona) super.setKey(key);
    }

    @Override
    public GetCatTipoPresona setOauthToken(java.lang.String oauthToken) {
      return (GetCatTipoPresona) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCatTipoPresona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCatTipoPresona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCatTipoPresona setQuotaUser(java.lang.String quotaUser) {
      return (GetCatTipoPresona) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCatTipoPresona setUserIp(java.lang.String userIp) {
      return (GetCatTipoPresona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCatTipoPresona setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCatTipoPresona set(String parameterName, Object value) {
      return (GetCatTipoPresona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getConcepto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetConcepto#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetConcepto getConcepto(java.lang.Long id) throws java.io.IOException {
    GetConcepto result = new GetConcepto(id);
    initialize(result);
    return result;
  }

  public class GetConcepto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Concepto> {

    private static final String REST_PATH = "concepto/{id}";

    /**
     * Create a request for the method "getConcepto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetConcepto#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetConcepto#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetConcepto(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Concepto.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetConcepto setAlt(java.lang.String alt) {
      return (GetConcepto) super.setAlt(alt);
    }

    @Override
    public GetConcepto setFields(java.lang.String fields) {
      return (GetConcepto) super.setFields(fields);
    }

    @Override
    public GetConcepto setKey(java.lang.String key) {
      return (GetConcepto) super.setKey(key);
    }

    @Override
    public GetConcepto setOauthToken(java.lang.String oauthToken) {
      return (GetConcepto) super.setOauthToken(oauthToken);
    }

    @Override
    public GetConcepto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetConcepto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetConcepto setQuotaUser(java.lang.String quotaUser) {
      return (GetConcepto) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetConcepto setUserIp(java.lang.String userIp) {
      return (GetConcepto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetConcepto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetConcepto set(String parameterName, Object value) {
      return (GetConcepto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDeviceInfo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetDeviceInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetDeviceInfo getDeviceInfo(java.lang.String id) throws java.io.IOException {
    GetDeviceInfo result = new GetDeviceInfo(id);
    initialize(result);
    return result;
  }

  public class GetDeviceInfo extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DeviceInfo> {

    private static final String REST_PATH = "deviceinfo/{id}";

    /**
     * Create a request for the method "getDeviceInfo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetDeviceInfo#execute()} method to invoke the remote
     * operation. <p> {@link GetDeviceInfo#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetDeviceInfo(java.lang.String id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.DeviceInfo.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDeviceInfo setAlt(java.lang.String alt) {
      return (GetDeviceInfo) super.setAlt(alt);
    }

    @Override
    public GetDeviceInfo setFields(java.lang.String fields) {
      return (GetDeviceInfo) super.setFields(fields);
    }

    @Override
    public GetDeviceInfo setKey(java.lang.String key) {
      return (GetDeviceInfo) super.setKey(key);
    }

    @Override
    public GetDeviceInfo setOauthToken(java.lang.String oauthToken) {
      return (GetDeviceInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDeviceInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDeviceInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDeviceInfo setQuotaUser(java.lang.String quotaUser) {
      return (GetDeviceInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDeviceInfo setUserIp(java.lang.String userIp) {
      return (GetDeviceInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetDeviceInfo setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetDeviceInfo set(String parameterName, Object value) {
      return (GetDeviceInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDirectivo_Proyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetDirectivoProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetDirectivoProyecto getDirectivoProyecto(java.lang.Long id) throws java.io.IOException {
    GetDirectivoProyecto result = new GetDirectivoProyecto(id);
    initialize(result);
    return result;
  }

  public class GetDirectivoProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DirectivoProyecto> {

    private static final String REST_PATH = "directivo_proyecto/{id}";

    /**
     * Create a request for the method "getDirectivo_Proyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetDirectivoProyecto#execute()} method to invoke the
     * remote operation. <p> {@link GetDirectivoProyecto#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetDirectivoProyecto(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.DirectivoProyecto.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDirectivoProyecto setAlt(java.lang.String alt) {
      return (GetDirectivoProyecto) super.setAlt(alt);
    }

    @Override
    public GetDirectivoProyecto setFields(java.lang.String fields) {
      return (GetDirectivoProyecto) super.setFields(fields);
    }

    @Override
    public GetDirectivoProyecto setKey(java.lang.String key) {
      return (GetDirectivoProyecto) super.setKey(key);
    }

    @Override
    public GetDirectivoProyecto setOauthToken(java.lang.String oauthToken) {
      return (GetDirectivoProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDirectivoProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDirectivoProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDirectivoProyecto setQuotaUser(java.lang.String quotaUser) {
      return (GetDirectivoProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDirectivoProyecto setUserIp(java.lang.String userIp) {
      return (GetDirectivoProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetDirectivoProyecto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetDirectivoProyecto set(String parameterName, Object value) {
      return (GetDirectivoProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDirectorio".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetDirectorio#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetDirectorio getDirectorio(java.lang.Long id) throws java.io.IOException {
    GetDirectorio result = new GetDirectorio(id);
    initialize(result);
    return result;
  }

  public class GetDirectorio extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Directorio> {

    private static final String REST_PATH = "directorio/{id}";

    /**
     * Create a request for the method "getDirectorio".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetDirectorio#execute()} method to invoke the remote
     * operation. <p> {@link GetDirectorio#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetDirectorio(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Directorio.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDirectorio setAlt(java.lang.String alt) {
      return (GetDirectorio) super.setAlt(alt);
    }

    @Override
    public GetDirectorio setFields(java.lang.String fields) {
      return (GetDirectorio) super.setFields(fields);
    }

    @Override
    public GetDirectorio setKey(java.lang.String key) {
      return (GetDirectorio) super.setKey(key);
    }

    @Override
    public GetDirectorio setOauthToken(java.lang.String oauthToken) {
      return (GetDirectorio) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDirectorio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDirectorio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDirectorio setQuotaUser(java.lang.String quotaUser) {
      return (GetDirectorio) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDirectorio setUserIp(java.lang.String userIp) {
      return (GetDirectorio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetDirectorio setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetDirectorio set(String parameterName, Object value) {
      return (GetDirectorio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getEmpresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetEmpresa#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetEmpresa getEmpresa(java.lang.Long id) throws java.io.IOException {
    GetEmpresa result = new GetEmpresa(id);
    initialize(result);
    return result;
  }

  public class GetEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Empresa> {

    private static final String REST_PATH = "empresa/{id}";

    /**
     * Create a request for the method "getEmpresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetEmpresa#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetEmpresa#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetEmpresa(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Empresa.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetEmpresa setAlt(java.lang.String alt) {
      return (GetEmpresa) super.setAlt(alt);
    }

    @Override
    public GetEmpresa setFields(java.lang.String fields) {
      return (GetEmpresa) super.setFields(fields);
    }

    @Override
    public GetEmpresa setKey(java.lang.String key) {
      return (GetEmpresa) super.setKey(key);
    }

    @Override
    public GetEmpresa setOauthToken(java.lang.String oauthToken) {
      return (GetEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public GetEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (GetEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetEmpresa setUserIp(java.lang.String userIp) {
      return (GetEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetEmpresa setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetEmpresa set(String parameterName, Object value) {
      return (GetEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getEstimacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetEstimacion#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetEstimacion getEstimacion(java.lang.Long id) throws java.io.IOException {
    GetEstimacion result = new GetEstimacion(id);
    initialize(result);
    return result;
  }

  public class GetEstimacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Estimacion> {

    private static final String REST_PATH = "estimacion/{id}";

    /**
     * Create a request for the method "getEstimacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetEstimacion#execute()} method to invoke the remote
     * operation. <p> {@link GetEstimacion#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetEstimacion(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Estimacion.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetEstimacion setAlt(java.lang.String alt) {
      return (GetEstimacion) super.setAlt(alt);
    }

    @Override
    public GetEstimacion setFields(java.lang.String fields) {
      return (GetEstimacion) super.setFields(fields);
    }

    @Override
    public GetEstimacion setKey(java.lang.String key) {
      return (GetEstimacion) super.setKey(key);
    }

    @Override
    public GetEstimacion setOauthToken(java.lang.String oauthToken) {
      return (GetEstimacion) super.setOauthToken(oauthToken);
    }

    @Override
    public GetEstimacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetEstimacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetEstimacion setQuotaUser(java.lang.String quotaUser) {
      return (GetEstimacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetEstimacion setUserIp(java.lang.String userIp) {
      return (GetEstimacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetEstimacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetEstimacion set(String parameterName, Object value) {
      return (GetEstimacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetMaquinaria getMaquinaria(java.lang.Long id) throws java.io.IOException {
    GetMaquinaria result = new GetMaquinaria(id);
    initialize(result);
    return result;
  }

  public class GetMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Maquinaria> {

    private static final String REST_PATH = "maquinaria/{id}";

    /**
     * Create a request for the method "getMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetMaquinaria#execute()} method to invoke the remote
     * operation. <p> {@link GetMaquinaria#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Maquinaria.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMaquinaria setAlt(java.lang.String alt) {
      return (GetMaquinaria) super.setAlt(alt);
    }

    @Override
    public GetMaquinaria setFields(java.lang.String fields) {
      return (GetMaquinaria) super.setFields(fields);
    }

    @Override
    public GetMaquinaria setKey(java.lang.String key) {
      return (GetMaquinaria) super.setKey(key);
    }

    @Override
    public GetMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (GetMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (GetMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMaquinaria setUserIp(java.lang.String userIp) {
      return (GetMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetMaquinaria set(String parameterName, Object value) {
      return (GetMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMultimedia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetMultimedia#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetMultimedia getMultimedia(java.lang.Long id) throws java.io.IOException {
    GetMultimedia result = new GetMultimedia(id);
    initialize(result);
    return result;
  }

  public class GetMultimedia extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Multimedia> {

    private static final String REST_PATH = "multimedia/{id}";

    /**
     * Create a request for the method "getMultimedia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetMultimedia#execute()} method to invoke the remote
     * operation. <p> {@link GetMultimedia#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMultimedia(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Multimedia.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMultimedia setAlt(java.lang.String alt) {
      return (GetMultimedia) super.setAlt(alt);
    }

    @Override
    public GetMultimedia setFields(java.lang.String fields) {
      return (GetMultimedia) super.setFields(fields);
    }

    @Override
    public GetMultimedia setKey(java.lang.String key) {
      return (GetMultimedia) super.setKey(key);
    }

    @Override
    public GetMultimedia setOauthToken(java.lang.String oauthToken) {
      return (GetMultimedia) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMultimedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMultimedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMultimedia setQuotaUser(java.lang.String quotaUser) {
      return (GetMultimedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMultimedia setUserIp(java.lang.String userIp) {
      return (GetMultimedia) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetMultimedia setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetMultimedia set(String parameterName, Object value) {
      return (GetMultimedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNotas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetNotas#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetNotas getNotas(java.lang.Long id) throws java.io.IOException {
    GetNotas result = new GetNotas(id);
    initialize(result);
    return result;
  }

  public class GetNotas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Notas> {

    private static final String REST_PATH = "notas/{id}";

    /**
     * Create a request for the method "getNotas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetNotas#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetNotas#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetNotas(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Notas.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNotas setAlt(java.lang.String alt) {
      return (GetNotas) super.setAlt(alt);
    }

    @Override
    public GetNotas setFields(java.lang.String fields) {
      return (GetNotas) super.setFields(fields);
    }

    @Override
    public GetNotas setKey(java.lang.String key) {
      return (GetNotas) super.setKey(key);
    }

    @Override
    public GetNotas setOauthToken(java.lang.String oauthToken) {
      return (GetNotas) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNotas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNotas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNotas setQuotaUser(java.lang.String quotaUser) {
      return (GetNotas) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNotas setUserIp(java.lang.String userIp) {
      return (GetNotas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetNotas setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetNotas set(String parameterName, Object value) {
      return (GetNotas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getObra".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetObra#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetObra getObra(java.lang.Long id) throws java.io.IOException {
    GetObra result = new GetObra(id);
    initialize(result);
    return result;
  }

  public class GetObra extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Obra> {

    private static final String REST_PATH = "obra/{id}";

    /**
     * Create a request for the method "getObra".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetObra#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetObra#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetObra(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Obra.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetObra setAlt(java.lang.String alt) {
      return (GetObra) super.setAlt(alt);
    }

    @Override
    public GetObra setFields(java.lang.String fields) {
      return (GetObra) super.setFields(fields);
    }

    @Override
    public GetObra setKey(java.lang.String key) {
      return (GetObra) super.setKey(key);
    }

    @Override
    public GetObra setOauthToken(java.lang.String oauthToken) {
      return (GetObra) super.setOauthToken(oauthToken);
    }

    @Override
    public GetObra setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetObra) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetObra setQuotaUser(java.lang.String quotaUser) {
      return (GetObra) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetObra setUserIp(java.lang.String userIp) {
      return (GetObra) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetObra setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetObra set(String parameterName, Object value) {
      return (GetObra) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOrg_Goubernamental".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetOrgGoubernamental#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetOrgGoubernamental getOrgGoubernamental(java.lang.Long id) throws java.io.IOException {
    GetOrgGoubernamental result = new GetOrgGoubernamental(id);
    initialize(result);
    return result;
  }

  public class GetOrgGoubernamental extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.OrgGoubernamental> {

    private static final String REST_PATH = "org_goubernamental/{id}";

    /**
     * Create a request for the method "getOrg_Goubernamental".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetOrgGoubernamental#execute()} method to invoke the
     * remote operation. <p> {@link GetOrgGoubernamental#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetOrgGoubernamental(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.OrgGoubernamental.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOrgGoubernamental setAlt(java.lang.String alt) {
      return (GetOrgGoubernamental) super.setAlt(alt);
    }

    @Override
    public GetOrgGoubernamental setFields(java.lang.String fields) {
      return (GetOrgGoubernamental) super.setFields(fields);
    }

    @Override
    public GetOrgGoubernamental setKey(java.lang.String key) {
      return (GetOrgGoubernamental) super.setKey(key);
    }

    @Override
    public GetOrgGoubernamental setOauthToken(java.lang.String oauthToken) {
      return (GetOrgGoubernamental) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOrgGoubernamental setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOrgGoubernamental) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOrgGoubernamental setQuotaUser(java.lang.String quotaUser) {
      return (GetOrgGoubernamental) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOrgGoubernamental setUserIp(java.lang.String userIp) {
      return (GetOrgGoubernamental) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetOrgGoubernamental setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetOrgGoubernamental set(String parameterName, Object value) {
      return (GetOrgGoubernamental) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPersona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetPersona#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetPersona getPersona(java.lang.Long id) throws java.io.IOException {
    GetPersona result = new GetPersona(id);
    initialize(result);
    return result;
  }

  public class GetPersona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Persona> {

    private static final String REST_PATH = "persona/{id}";

    /**
     * Create a request for the method "getPersona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetPersona#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetPersona#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPersona(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Persona.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPersona setAlt(java.lang.String alt) {
      return (GetPersona) super.setAlt(alt);
    }

    @Override
    public GetPersona setFields(java.lang.String fields) {
      return (GetPersona) super.setFields(fields);
    }

    @Override
    public GetPersona setKey(java.lang.String key) {
      return (GetPersona) super.setKey(key);
    }

    @Override
    public GetPersona setOauthToken(java.lang.String oauthToken) {
      return (GetPersona) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPersona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPersona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPersona setQuotaUser(java.lang.String quotaUser) {
      return (GetPersona) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPersona setUserIp(java.lang.String userIp) {
      return (GetPersona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetPersona setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPersona set(String parameterName, Object value) {
      return (GetPersona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPrograma".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetPrograma#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetPrograma getPrograma(java.lang.Long id) throws java.io.IOException {
    GetPrograma result = new GetPrograma(id);
    initialize(result);
    return result;
  }

  public class GetPrograma extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Programa> {

    private static final String REST_PATH = "programa/{id}";

    /**
     * Create a request for the method "getPrograma".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetPrograma#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetPrograma#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPrograma(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Programa.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPrograma setAlt(java.lang.String alt) {
      return (GetPrograma) super.setAlt(alt);
    }

    @Override
    public GetPrograma setFields(java.lang.String fields) {
      return (GetPrograma) super.setFields(fields);
    }

    @Override
    public GetPrograma setKey(java.lang.String key) {
      return (GetPrograma) super.setKey(key);
    }

    @Override
    public GetPrograma setOauthToken(java.lang.String oauthToken) {
      return (GetPrograma) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPrograma setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPrograma) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPrograma setQuotaUser(java.lang.String quotaUser) {
      return (GetPrograma) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPrograma setUserIp(java.lang.String userIp) {
      return (GetPrograma) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetPrograma setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPrograma set(String parameterName, Object value) {
      return (GetPrograma) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetProyecto getProyecto(java.lang.Long id) throws java.io.IOException {
    GetProyecto result = new GetProyecto(id);
    initialize(result);
    return result;
  }

  public class GetProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Proyecto> {

    private static final String REST_PATH = "proyecto/{id}";

    /**
     * Create a request for the method "getProyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetProyecto#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetProyecto#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetProyecto(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Proyecto.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProyecto setAlt(java.lang.String alt) {
      return (GetProyecto) super.setAlt(alt);
    }

    @Override
    public GetProyecto setFields(java.lang.String fields) {
      return (GetProyecto) super.setFields(fields);
    }

    @Override
    public GetProyecto setKey(java.lang.String key) {
      return (GetProyecto) super.setKey(key);
    }

    @Override
    public GetProyecto setOauthToken(java.lang.String oauthToken) {
      return (GetProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProyecto setQuotaUser(java.lang.String quotaUser) {
      return (GetProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProyecto setUserIp(java.lang.String userIp) {
      return (GetProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetProyecto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetProyecto set(String parameterName, Object value) {
      return (GetProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPush".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetPush#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetPush getPush(java.lang.Long id) throws java.io.IOException {
    GetPush result = new GetPush(id);
    initialize(result);
    return result;
  }

  public class GetPush extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Push> {

    private static final String REST_PATH = "push/{id}";

    /**
     * Create a request for the method "getPush".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetPush#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetPush#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPush(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Push.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPush setAlt(java.lang.String alt) {
      return (GetPush) super.setAlt(alt);
    }

    @Override
    public GetPush setFields(java.lang.String fields) {
      return (GetPush) super.setFields(fields);
    }

    @Override
    public GetPush setKey(java.lang.String key) {
      return (GetPush) super.setKey(key);
    }

    @Override
    public GetPush setOauthToken(java.lang.String oauthToken) {
      return (GetPush) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPush setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPush) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPush setQuotaUser(java.lang.String quotaUser) {
      return (GetPush) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPush setUserIp(java.lang.String userIp) {
      return (GetPush) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetPush setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPush set(String parameterName, Object value) {
      return (GetPush) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRef_calendarizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetRefCalendarizacion#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetRefCalendarizacion getRefCalendarizacion(java.lang.Long id) throws java.io.IOException {
    GetRefCalendarizacion result = new GetRefCalendarizacion(id);
    initialize(result);
    return result;
  }

  public class GetRefCalendarizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RefCalendarizacion> {

    private static final String REST_PATH = "ref_calendarizacion/{id}";

    /**
     * Create a request for the method "getRef_calendarizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetRefCalendarizacion#execute()} method to invoke the
     * remote operation. <p> {@link GetRefCalendarizacion#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRefCalendarizacion(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.RefCalendarizacion.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRefCalendarizacion setAlt(java.lang.String alt) {
      return (GetRefCalendarizacion) super.setAlt(alt);
    }

    @Override
    public GetRefCalendarizacion setFields(java.lang.String fields) {
      return (GetRefCalendarizacion) super.setFields(fields);
    }

    @Override
    public GetRefCalendarizacion setKey(java.lang.String key) {
      return (GetRefCalendarizacion) super.setKey(key);
    }

    @Override
    public GetRefCalendarizacion setOauthToken(java.lang.String oauthToken) {
      return (GetRefCalendarizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRefCalendarizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRefCalendarizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRefCalendarizacion setQuotaUser(java.lang.String quotaUser) {
      return (GetRefCalendarizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRefCalendarizacion setUserIp(java.lang.String userIp) {
      return (GetRefCalendarizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRefCalendarizacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRefCalendarizacion set(String parameterName, Object value) {
      return (GetRefCalendarizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRepMaquinariaCatMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetRepMaquinariaCatMaquinaria#execute()} method to invoke
   * the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetRepMaquinariaCatMaquinaria getRepMaquinariaCatMaquinaria(java.lang.Long id) throws java.io.IOException {
    GetRepMaquinariaCatMaquinaria result = new GetRepMaquinariaCatMaquinaria(id);
    initialize(result);
    return result;
  }

  public class GetRepMaquinariaCatMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria> {

    private static final String REST_PATH = "repmaquinariacatmaquinaria/{id}";

    /**
     * Create a request for the method "getRepMaquinariaCatMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetRepMaquinariaCatMaquinaria#execute()} method to
     * invoke the remote operation. <p> {@link GetRepMaquinariaCatMaquinaria#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRepMaquinariaCatMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setAlt(java.lang.String alt) {
      return (GetRepMaquinariaCatMaquinaria) super.setAlt(alt);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setFields(java.lang.String fields) {
      return (GetRepMaquinariaCatMaquinaria) super.setFields(fields);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setKey(java.lang.String key) {
      return (GetRepMaquinariaCatMaquinaria) super.setKey(key);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (GetRepMaquinariaCatMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRepMaquinariaCatMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (GetRepMaquinariaCatMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRepMaquinariaCatMaquinaria setUserIp(java.lang.String userIp) {
      return (GetRepMaquinariaCatMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRepMaquinariaCatMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRepMaquinariaCatMaquinaria set(String parameterName, Object value) {
      return (GetRepMaquinariaCatMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getRepoPersonalCatPersonal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetRepoPersonalCatPersonal#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public GetRepoPersonalCatPersonal getRepoPersonalCatPersonal(java.lang.Long id) throws java.io.IOException {
    GetRepoPersonalCatPersonal result = new GetRepoPersonalCatPersonal(id);
    initialize(result);
    return result;
  }

  public class GetRepoPersonalCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal> {

    private static final String REST_PATH = "repopersonalcatpersonal/{id}";

    /**
     * Create a request for the method "getRepoPersonalCatPersonal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetRepoPersonalCatPersonal#execute()} method to invoke
     * the remote operation. <p> {@link GetRepoPersonalCatPersonal#initialize(com.google.api.client.go
     * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRepoPersonalCatPersonal(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRepoPersonalCatPersonal setAlt(java.lang.String alt) {
      return (GetRepoPersonalCatPersonal) super.setAlt(alt);
    }

    @Override
    public GetRepoPersonalCatPersonal setFields(java.lang.String fields) {
      return (GetRepoPersonalCatPersonal) super.setFields(fields);
    }

    @Override
    public GetRepoPersonalCatPersonal setKey(java.lang.String key) {
      return (GetRepoPersonalCatPersonal) super.setKey(key);
    }

    @Override
    public GetRepoPersonalCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (GetRepoPersonalCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRepoPersonalCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRepoPersonalCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRepoPersonalCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (GetRepoPersonalCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRepoPersonalCatPersonal setUserIp(java.lang.String userIp) {
      return (GetRepoPersonalCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRepoPersonalCatPersonal setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRepoPersonalCatPersonal set(String parameterName, Object value) {
      return (GetRepoPersonalCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getReportsmodel".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetReportsmodel#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetReportsmodel getReportsmodel(java.lang.Long id) throws java.io.IOException {
    GetReportsmodel result = new GetReportsmodel(id);
    initialize(result);
    return result;
  }

  public class GetReportsmodel extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Reportsmodel> {

    private static final String REST_PATH = "reportsmodel/{id}";

    /**
     * Create a request for the method "getReportsmodel".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetReportsmodel#execute()} method to invoke the remote
     * operation. <p> {@link GetReportsmodel#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetReportsmodel(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Reportsmodel.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetReportsmodel setAlt(java.lang.String alt) {
      return (GetReportsmodel) super.setAlt(alt);
    }

    @Override
    public GetReportsmodel setFields(java.lang.String fields) {
      return (GetReportsmodel) super.setFields(fields);
    }

    @Override
    public GetReportsmodel setKey(java.lang.String key) {
      return (GetReportsmodel) super.setKey(key);
    }

    @Override
    public GetReportsmodel setOauthToken(java.lang.String oauthToken) {
      return (GetReportsmodel) super.setOauthToken(oauthToken);
    }

    @Override
    public GetReportsmodel setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetReportsmodel) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetReportsmodel setQuotaUser(java.lang.String quotaUser) {
      return (GetReportsmodel) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetReportsmodel setUserIp(java.lang.String userIp) {
      return (GetReportsmodel) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetReportsmodel setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetReportsmodel set(String parameterName, Object value) {
      return (GetReportsmodel) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSincronizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetSincronizacion#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetSincronizacion getSincronizacion(java.lang.Long id) throws java.io.IOException {
    GetSincronizacion result = new GetSincronizacion(id);
    initialize(result);
    return result;
  }

  public class GetSincronizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Sincronizacion> {

    private static final String REST_PATH = "sincronizacion/{id}";

    /**
     * Create a request for the method "getSincronizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetSincronizacion#execute()} method to invoke the
     * remote operation. <p> {@link GetSincronizacion#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetSincronizacion(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Sincronizacion.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSincronizacion setAlt(java.lang.String alt) {
      return (GetSincronizacion) super.setAlt(alt);
    }

    @Override
    public GetSincronizacion setFields(java.lang.String fields) {
      return (GetSincronizacion) super.setFields(fields);
    }

    @Override
    public GetSincronizacion setKey(java.lang.String key) {
      return (GetSincronizacion) super.setKey(key);
    }

    @Override
    public GetSincronizacion setOauthToken(java.lang.String oauthToken) {
      return (GetSincronizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSincronizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSincronizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSincronizacion setQuotaUser(java.lang.String quotaUser) {
      return (GetSincronizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSincronizacion setUserIp(java.lang.String userIp) {
      return (GetSincronizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetSincronizacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetSincronizacion set(String parameterName, Object value) {
      return (GetSincronizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTendencia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetTendencia#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetTendencia getTendencia() throws java.io.IOException {
    GetTendencia result = new GetTendencia();
    initialize(result);
    return result;
  }

  public class GetTendencia extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.NumberCollection> {

    private static final String REST_PATH = "doublecollection";

    /**
     * Create a request for the method "getTendencia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetTendencia#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTendencia#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetTendencia() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.NumberCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTendencia setAlt(java.lang.String alt) {
      return (GetTendencia) super.setAlt(alt);
    }

    @Override
    public GetTendencia setFields(java.lang.String fields) {
      return (GetTendencia) super.setFields(fields);
    }

    @Override
    public GetTendencia setKey(java.lang.String key) {
      return (GetTendencia) super.setKey(key);
    }

    @Override
    public GetTendencia setOauthToken(java.lang.String oauthToken) {
      return (GetTendencia) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTendencia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTendencia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTendencia setQuotaUser(java.lang.String quotaUser) {
      return (GetTendencia) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTendencia setUserIp(java.lang.String userIp) {
      return (GetTendencia) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("id_referencia")
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public GetTendencia setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key("Tipo_Entidad")
    private java.lang.Integer tipoEntidad;

    /**

     */
    public java.lang.Integer getTipoEntidad() {
      return tipoEntidad;
    }

    public GetTendencia setTipoEntidad(java.lang.Integer tipoEntidad) {
      this.tipoEntidad = tipoEntidad;
      return this;
    }

    @Override
    public GetTendencia set(String parameterName, Object value) {
      return (GetTendencia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUbicaciones".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetUbicaciones#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetUbicaciones getUbicaciones(java.lang.Long id) throws java.io.IOException {
    GetUbicaciones result = new GetUbicaciones(id);
    initialize(result);
    return result;
  }

  public class GetUbicaciones extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Ubicaciones> {

    private static final String REST_PATH = "ubicaciones/{id}";

    /**
     * Create a request for the method "getUbicaciones".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetUbicaciones#execute()} method to invoke the remote
     * operation. <p> {@link GetUbicaciones#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUbicaciones(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Ubicaciones.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUbicaciones setAlt(java.lang.String alt) {
      return (GetUbicaciones) super.setAlt(alt);
    }

    @Override
    public GetUbicaciones setFields(java.lang.String fields) {
      return (GetUbicaciones) super.setFields(fields);
    }

    @Override
    public GetUbicaciones setKey(java.lang.String key) {
      return (GetUbicaciones) super.setKey(key);
    }

    @Override
    public GetUbicaciones setOauthToken(java.lang.String oauthToken) {
      return (GetUbicaciones) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUbicaciones setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUbicaciones) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUbicaciones setQuotaUser(java.lang.String quotaUser) {
      return (GetUbicaciones) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUbicaciones setUserIp(java.lang.String userIp) {
      return (GetUbicaciones) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUbicaciones setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUbicaciones set(String parameterName, Object value) {
      return (GetUbicaciones) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUsuario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetUsuario#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param user
   * @param contrasena
   * @return the request
   */
  public GetUsuario getUsuario(java.lang.Long id, java.lang.String user, java.lang.String contrasena) throws java.io.IOException {
    GetUsuario result = new GetUsuario(id, user, contrasena);
    initialize(result);
    return result;
  }

  public class GetUsuario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Usuario> {

    private static final String REST_PATH = "usuario/{id}/{user}/{contrasena}";

    /**
     * Create a request for the method "getUsuario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetUsuario#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUsuario#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param user
     * @param contrasena
     * @since 1.13
     */
    protected GetUsuario(java.lang.Long id, java.lang.String user, java.lang.String contrasena) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Usuario.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.user = com.google.api.client.util.Preconditions.checkNotNull(user, "Required parameter user must be specified.");
      this.contrasena = com.google.api.client.util.Preconditions.checkNotNull(contrasena, "Required parameter contrasena must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUsuario setAlt(java.lang.String alt) {
      return (GetUsuario) super.setAlt(alt);
    }

    @Override
    public GetUsuario setFields(java.lang.String fields) {
      return (GetUsuario) super.setFields(fields);
    }

    @Override
    public GetUsuario setKey(java.lang.String key) {
      return (GetUsuario) super.setKey(key);
    }

    @Override
    public GetUsuario setOauthToken(java.lang.String oauthToken) {
      return (GetUsuario) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUsuario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUsuario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUsuario setQuotaUser(java.lang.String quotaUser) {
      return (GetUsuario) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUsuario setUserIp(java.lang.String userIp) {
      return (GetUsuario) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUsuario setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String user;

    /**

     */
    public java.lang.String getUser() {
      return user;
    }

    public GetUsuario setUser(java.lang.String user) {
      this.user = user;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String contrasena;

    /**

     */
    public java.lang.String getContrasena() {
      return contrasena;
    }

    public GetUsuario setContrasena(java.lang.String contrasena) {
      this.contrasena = contrasena;
      return this;
    }

    @Override
    public GetUsuario set(String parameterName, Object value) {
      return (GetUsuario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getXmpp".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link GetXmpp#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetXmpp getXmpp(java.lang.Long id) throws java.io.IOException {
    GetXmpp result = new GetXmpp(id);
    initialize(result);
    return result;
  }

  public class GetXmpp extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Xmpp> {

    private static final String REST_PATH = "xmpp/{id}";

    /**
     * Create a request for the method "getXmpp".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link GetXmpp#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetXmpp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetXmpp(java.lang.Long id) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.Xmpp.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetXmpp setAlt(java.lang.String alt) {
      return (GetXmpp) super.setAlt(alt);
    }

    @Override
    public GetXmpp setFields(java.lang.String fields) {
      return (GetXmpp) super.setFields(fields);
    }

    @Override
    public GetXmpp setKey(java.lang.String key) {
      return (GetXmpp) super.setKey(key);
    }

    @Override
    public GetXmpp setOauthToken(java.lang.String oauthToken) {
      return (GetXmpp) super.setOauthToken(oauthToken);
    }

    @Override
    public GetXmpp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetXmpp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetXmpp setQuotaUser(java.lang.String quotaUser) {
      return (GetXmpp) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetXmpp setUserIp(java.lang.String userIp) {
      return (GetXmpp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetXmpp setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetXmpp set(String parameterName, Object value) {
      return (GetXmpp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertAditivas_Deductivas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertAditivasDeductivas#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AditivasDeductivas}
   * @return the request
   */
  public InsertAditivasDeductivas insertAditivasDeductivas(com.csgit.cao.model.communicationchannel.model.AditivasDeductivas content) throws java.io.IOException {
    InsertAditivasDeductivas result = new InsertAditivasDeductivas(content);
    initialize(result);
    return result;
  }

  public class InsertAditivasDeductivas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AditivasDeductivas> {

    private static final String REST_PATH = "aditivas_deductivas";

    /**
     * Create a request for the method "insertAditivas_Deductivas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertAditivasDeductivas#execute()} method to invoke
     * the remote operation. <p> {@link InsertAditivasDeductivas#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AditivasDeductivas}
     * @since 1.13
     */
    protected InsertAditivasDeductivas(com.csgit.cao.model.communicationchannel.model.AditivasDeductivas content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AditivasDeductivas.class);
    }

    @Override
    public InsertAditivasDeductivas setAlt(java.lang.String alt) {
      return (InsertAditivasDeductivas) super.setAlt(alt);
    }

    @Override
    public InsertAditivasDeductivas setFields(java.lang.String fields) {
      return (InsertAditivasDeductivas) super.setFields(fields);
    }

    @Override
    public InsertAditivasDeductivas setKey(java.lang.String key) {
      return (InsertAditivasDeductivas) super.setKey(key);
    }

    @Override
    public InsertAditivasDeductivas setOauthToken(java.lang.String oauthToken) {
      return (InsertAditivasDeductivas) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertAditivasDeductivas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertAditivasDeductivas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertAditivasDeductivas setQuotaUser(java.lang.String quotaUser) {
      return (InsertAditivasDeductivas) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertAditivasDeductivas setUserIp(java.lang.String userIp) {
      return (InsertAditivasDeductivas) super.setUserIp(userIp);
    }

    @Override
    public InsertAditivasDeductivas set(String parameterName, Object value) {
      return (InsertAditivasDeductivas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertAvance_Financiero".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertAvanceFinanciero#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFinanciero}
   * @return the request
   */
  public InsertAvanceFinanciero insertAvanceFinanciero(com.csgit.cao.model.communicationchannel.model.AvanceFinanciero content) throws java.io.IOException {
    InsertAvanceFinanciero result = new InsertAvanceFinanciero(content);
    initialize(result);
    return result;
  }

  public class InsertAvanceFinanciero extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AvanceFinanciero> {

    private static final String REST_PATH = "avance_financiero";

    /**
     * Create a request for the method "insertAvance_Financiero".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertAvanceFinanciero#execute()} method to invoke the
     * remote operation. <p> {@link InsertAvanceFinanciero#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFinanciero}
     * @since 1.13
     */
    protected InsertAvanceFinanciero(com.csgit.cao.model.communicationchannel.model.AvanceFinanciero content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AvanceFinanciero.class);
    }

    @Override
    public InsertAvanceFinanciero setAlt(java.lang.String alt) {
      return (InsertAvanceFinanciero) super.setAlt(alt);
    }

    @Override
    public InsertAvanceFinanciero setFields(java.lang.String fields) {
      return (InsertAvanceFinanciero) super.setFields(fields);
    }

    @Override
    public InsertAvanceFinanciero setKey(java.lang.String key) {
      return (InsertAvanceFinanciero) super.setKey(key);
    }

    @Override
    public InsertAvanceFinanciero setOauthToken(java.lang.String oauthToken) {
      return (InsertAvanceFinanciero) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertAvanceFinanciero setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertAvanceFinanciero) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertAvanceFinanciero setQuotaUser(java.lang.String quotaUser) {
      return (InsertAvanceFinanciero) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertAvanceFinanciero setUserIp(java.lang.String userIp) {
      return (InsertAvanceFinanciero) super.setUserIp(userIp);
    }

    @Override
    public InsertAvanceFinanciero set(String parameterName, Object value) {
      return (InsertAvanceFinanciero) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertAvance_Fisico".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertAvanceFisico#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFisico}
   * @return the request
   */
  public InsertAvanceFisico insertAvanceFisico(com.csgit.cao.model.communicationchannel.model.AvanceFisico content) throws java.io.IOException {
    InsertAvanceFisico result = new InsertAvanceFisico(content);
    initialize(result);
    return result;
  }

  public class InsertAvanceFisico extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AvanceFisico> {

    private static final String REST_PATH = "avance_fisico";

    /**
     * Create a request for the method "insertAvance_Fisico".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertAvanceFisico#execute()} method to invoke the
     * remote operation. <p> {@link InsertAvanceFisico#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFisico}
     * @since 1.13
     */
    protected InsertAvanceFisico(com.csgit.cao.model.communicationchannel.model.AvanceFisico content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AvanceFisico.class);
    }

    @Override
    public InsertAvanceFisico setAlt(java.lang.String alt) {
      return (InsertAvanceFisico) super.setAlt(alt);
    }

    @Override
    public InsertAvanceFisico setFields(java.lang.String fields) {
      return (InsertAvanceFisico) super.setFields(fields);
    }

    @Override
    public InsertAvanceFisico setKey(java.lang.String key) {
      return (InsertAvanceFisico) super.setKey(key);
    }

    @Override
    public InsertAvanceFisico setOauthToken(java.lang.String oauthToken) {
      return (InsertAvanceFisico) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertAvanceFisico setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertAvanceFisico) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertAvanceFisico setQuotaUser(java.lang.String quotaUser) {
      return (InsertAvanceFisico) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertAvanceFisico setUserIp(java.lang.String userIp) {
      return (InsertAvanceFisico) super.setUserIp(userIp);
    }

    @Override
    public InsertAvanceFisico set(String parameterName, Object value) {
      return (InsertAvanceFisico) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertCat_Contactos".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertCatContactos#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatContactos}
   * @return the request
   */
  public InsertCatContactos insertCatContactos(com.csgit.cao.model.communicationchannel.model.CatContactos content) throws java.io.IOException {
    InsertCatContactos result = new InsertCatContactos(content);
    initialize(result);
    return result;
  }

  public class InsertCatContactos extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatContactos> {

    private static final String REST_PATH = "cat_contactos";

    /**
     * Create a request for the method "insertCat_Contactos".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertCatContactos#execute()} method to invoke the
     * remote operation. <p> {@link InsertCatContactos#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatContactos}
     * @since 1.13
     */
    protected InsertCatContactos(com.csgit.cao.model.communicationchannel.model.CatContactos content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatContactos.class);
    }

    @Override
    public InsertCatContactos setAlt(java.lang.String alt) {
      return (InsertCatContactos) super.setAlt(alt);
    }

    @Override
    public InsertCatContactos setFields(java.lang.String fields) {
      return (InsertCatContactos) super.setFields(fields);
    }

    @Override
    public InsertCatContactos setKey(java.lang.String key) {
      return (InsertCatContactos) super.setKey(key);
    }

    @Override
    public InsertCatContactos setOauthToken(java.lang.String oauthToken) {
      return (InsertCatContactos) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertCatContactos setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertCatContactos) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertCatContactos setQuotaUser(java.lang.String quotaUser) {
      return (InsertCatContactos) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertCatContactos setUserIp(java.lang.String userIp) {
      return (InsertCatContactos) super.setUserIp(userIp);
    }

    @Override
    public InsertCatContactos set(String parameterName, Object value) {
      return (InsertCatContactos) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertCat_Personal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertCatPersonal#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatPersonal}
   * @return the request
   */
  public InsertCatPersonal insertCatPersonal(com.csgit.cao.model.communicationchannel.model.CatPersonal content) throws java.io.IOException {
    InsertCatPersonal result = new InsertCatPersonal(content);
    initialize(result);
    return result;
  }

  public class InsertCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatPersonal> {

    private static final String REST_PATH = "cat_personal";

    /**
     * Create a request for the method "insertCat_Personal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertCatPersonal#execute()} method to invoke the
     * remote operation. <p> {@link InsertCatPersonal#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatPersonal}
     * @since 1.13
     */
    protected InsertCatPersonal(com.csgit.cao.model.communicationchannel.model.CatPersonal content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatPersonal.class);
    }

    @Override
    public InsertCatPersonal setAlt(java.lang.String alt) {
      return (InsertCatPersonal) super.setAlt(alt);
    }

    @Override
    public InsertCatPersonal setFields(java.lang.String fields) {
      return (InsertCatPersonal) super.setFields(fields);
    }

    @Override
    public InsertCatPersonal setKey(java.lang.String key) {
      return (InsertCatPersonal) super.setKey(key);
    }

    @Override
    public InsertCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (InsertCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (InsertCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertCatPersonal setUserIp(java.lang.String userIp) {
      return (InsertCatPersonal) super.setUserIp(userIp);
    }

    @Override
    public InsertCatPersonal set(String parameterName, Object value) {
      return (InsertCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertCat_Tipo_Empresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertCatTipoEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa}
   * @return the request
   */
  public InsertCatTipoEmpresa insertCatTipoEmpresa(com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa content) throws java.io.IOException {
    InsertCatTipoEmpresa result = new InsertCatTipoEmpresa(content);
    initialize(result);
    return result;
  }

  public class InsertCatTipoEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa> {

    private static final String REST_PATH = "cat_tipo_empresa";

    /**
     * Create a request for the method "insertCat_Tipo_Empresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertCatTipoEmpresa#execute()} method to invoke the
     * remote operation. <p> {@link InsertCatTipoEmpresa#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa}
     * @since 1.13
     */
    protected InsertCatTipoEmpresa(com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa.class);
    }

    @Override
    public InsertCatTipoEmpresa setAlt(java.lang.String alt) {
      return (InsertCatTipoEmpresa) super.setAlt(alt);
    }

    @Override
    public InsertCatTipoEmpresa setFields(java.lang.String fields) {
      return (InsertCatTipoEmpresa) super.setFields(fields);
    }

    @Override
    public InsertCatTipoEmpresa setKey(java.lang.String key) {
      return (InsertCatTipoEmpresa) super.setKey(key);
    }

    @Override
    public InsertCatTipoEmpresa setOauthToken(java.lang.String oauthToken) {
      return (InsertCatTipoEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertCatTipoEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertCatTipoEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertCatTipoEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (InsertCatTipoEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertCatTipoEmpresa setUserIp(java.lang.String userIp) {
      return (InsertCatTipoEmpresa) super.setUserIp(userIp);
    }

    @Override
    public InsertCatTipoEmpresa set(String parameterName, Object value) {
      return (InsertCatTipoEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertCat_Tipo_Maquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertCatTipoMaquinaria#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria}
   * @return the request
   */
  public InsertCatTipoMaquinaria insertCatTipoMaquinaria(com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria content) throws java.io.IOException {
    InsertCatTipoMaquinaria result = new InsertCatTipoMaquinaria(content);
    initialize(result);
    return result;
  }

  public class InsertCatTipoMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria> {

    private static final String REST_PATH = "cat_tipo_maquinaria";

    /**
     * Create a request for the method "insertCat_Tipo_Maquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertCatTipoMaquinaria#execute()} method to invoke
     * the remote operation. <p> {@link InsertCatTipoMaquinaria#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria}
     * @since 1.13
     */
    protected InsertCatTipoMaquinaria(com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria.class);
    }

    @Override
    public InsertCatTipoMaquinaria setAlt(java.lang.String alt) {
      return (InsertCatTipoMaquinaria) super.setAlt(alt);
    }

    @Override
    public InsertCatTipoMaquinaria setFields(java.lang.String fields) {
      return (InsertCatTipoMaquinaria) super.setFields(fields);
    }

    @Override
    public InsertCatTipoMaquinaria setKey(java.lang.String key) {
      return (InsertCatTipoMaquinaria) super.setKey(key);
    }

    @Override
    public InsertCatTipoMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (InsertCatTipoMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertCatTipoMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertCatTipoMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertCatTipoMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (InsertCatTipoMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertCatTipoMaquinaria setUserIp(java.lang.String userIp) {
      return (InsertCatTipoMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public InsertCatTipoMaquinaria set(String parameterName, Object value) {
      return (InsertCatTipoMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertCat_Tipo_Presona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertCatTipoPresona#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoPresona}
   * @return the request
   */
  public InsertCatTipoPresona insertCatTipoPresona(com.csgit.cao.model.communicationchannel.model.CatTipoPresona content) throws java.io.IOException {
    InsertCatTipoPresona result = new InsertCatTipoPresona(content);
    initialize(result);
    return result;
  }

  public class InsertCatTipoPresona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoPresona> {

    private static final String REST_PATH = "cat_tipo_presona";

    /**
     * Create a request for the method "insertCat_Tipo_Presona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertCatTipoPresona#execute()} method to invoke the
     * remote operation. <p> {@link InsertCatTipoPresona#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoPresona}
     * @since 1.13
     */
    protected InsertCatTipoPresona(com.csgit.cao.model.communicationchannel.model.CatTipoPresona content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoPresona.class);
    }

    @Override
    public InsertCatTipoPresona setAlt(java.lang.String alt) {
      return (InsertCatTipoPresona) super.setAlt(alt);
    }

    @Override
    public InsertCatTipoPresona setFields(java.lang.String fields) {
      return (InsertCatTipoPresona) super.setFields(fields);
    }

    @Override
    public InsertCatTipoPresona setKey(java.lang.String key) {
      return (InsertCatTipoPresona) super.setKey(key);
    }

    @Override
    public InsertCatTipoPresona setOauthToken(java.lang.String oauthToken) {
      return (InsertCatTipoPresona) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertCatTipoPresona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertCatTipoPresona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertCatTipoPresona setQuotaUser(java.lang.String quotaUser) {
      return (InsertCatTipoPresona) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertCatTipoPresona setUserIp(java.lang.String userIp) {
      return (InsertCatTipoPresona) super.setUserIp(userIp);
    }

    @Override
    public InsertCatTipoPresona set(String parameterName, Object value) {
      return (InsertCatTipoPresona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertConcepto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertConcepto#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Concepto}
   * @return the request
   */
  public InsertConcepto insertConcepto(com.csgit.cao.model.communicationchannel.model.Concepto content) throws java.io.IOException {
    InsertConcepto result = new InsertConcepto(content);
    initialize(result);
    return result;
  }

  public class InsertConcepto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Concepto> {

    private static final String REST_PATH = "concepto";

    /**
     * Create a request for the method "insertConcepto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertConcepto#execute()} method to invoke the remote
     * operation. <p> {@link InsertConcepto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Concepto}
     * @since 1.13
     */
    protected InsertConcepto(com.csgit.cao.model.communicationchannel.model.Concepto content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Concepto.class);
    }

    @Override
    public InsertConcepto setAlt(java.lang.String alt) {
      return (InsertConcepto) super.setAlt(alt);
    }

    @Override
    public InsertConcepto setFields(java.lang.String fields) {
      return (InsertConcepto) super.setFields(fields);
    }

    @Override
    public InsertConcepto setKey(java.lang.String key) {
      return (InsertConcepto) super.setKey(key);
    }

    @Override
    public InsertConcepto setOauthToken(java.lang.String oauthToken) {
      return (InsertConcepto) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertConcepto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertConcepto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertConcepto setQuotaUser(java.lang.String quotaUser) {
      return (InsertConcepto) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertConcepto setUserIp(java.lang.String userIp) {
      return (InsertConcepto) super.setUserIp(userIp);
    }

    @Override
    public InsertConcepto set(String parameterName, Object value) {
      return (InsertConcepto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertDeviceInfo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertDeviceInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.DeviceInfo}
   * @return the request
   */
  public InsertDeviceInfo insertDeviceInfo(com.csgit.cao.model.communicationchannel.model.DeviceInfo content) throws java.io.IOException {
    InsertDeviceInfo result = new InsertDeviceInfo(content);
    initialize(result);
    return result;
  }

  public class InsertDeviceInfo extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DeviceInfo> {

    private static final String REST_PATH = "deviceinfo";

    /**
     * Create a request for the method "insertDeviceInfo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertDeviceInfo#execute()} method to invoke the
     * remote operation. <p> {@link InsertDeviceInfo#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.DeviceInfo}
     * @since 1.13
     */
    protected InsertDeviceInfo(com.csgit.cao.model.communicationchannel.model.DeviceInfo content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.DeviceInfo.class);
    }

    @Override
    public InsertDeviceInfo setAlt(java.lang.String alt) {
      return (InsertDeviceInfo) super.setAlt(alt);
    }

    @Override
    public InsertDeviceInfo setFields(java.lang.String fields) {
      return (InsertDeviceInfo) super.setFields(fields);
    }

    @Override
    public InsertDeviceInfo setKey(java.lang.String key) {
      return (InsertDeviceInfo) super.setKey(key);
    }

    @Override
    public InsertDeviceInfo setOauthToken(java.lang.String oauthToken) {
      return (InsertDeviceInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertDeviceInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertDeviceInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertDeviceInfo setQuotaUser(java.lang.String quotaUser) {
      return (InsertDeviceInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertDeviceInfo setUserIp(java.lang.String userIp) {
      return (InsertDeviceInfo) super.setUserIp(userIp);
    }

    @Override
    public InsertDeviceInfo set(String parameterName, Object value) {
      return (InsertDeviceInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertDirectivo_Proyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertDirectivoProyecto#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.DirectivoProyecto}
   * @return the request
   */
  public InsertDirectivoProyecto insertDirectivoProyecto(com.csgit.cao.model.communicationchannel.model.DirectivoProyecto content) throws java.io.IOException {
    InsertDirectivoProyecto result = new InsertDirectivoProyecto(content);
    initialize(result);
    return result;
  }

  public class InsertDirectivoProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DirectivoProyecto> {

    private static final String REST_PATH = "directivo_proyecto";

    /**
     * Create a request for the method "insertDirectivo_Proyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertDirectivoProyecto#execute()} method to invoke
     * the remote operation. <p> {@link InsertDirectivoProyecto#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.DirectivoProyecto}
     * @since 1.13
     */
    protected InsertDirectivoProyecto(com.csgit.cao.model.communicationchannel.model.DirectivoProyecto content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.DirectivoProyecto.class);
    }

    @Override
    public InsertDirectivoProyecto setAlt(java.lang.String alt) {
      return (InsertDirectivoProyecto) super.setAlt(alt);
    }

    @Override
    public InsertDirectivoProyecto setFields(java.lang.String fields) {
      return (InsertDirectivoProyecto) super.setFields(fields);
    }

    @Override
    public InsertDirectivoProyecto setKey(java.lang.String key) {
      return (InsertDirectivoProyecto) super.setKey(key);
    }

    @Override
    public InsertDirectivoProyecto setOauthToken(java.lang.String oauthToken) {
      return (InsertDirectivoProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertDirectivoProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertDirectivoProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertDirectivoProyecto setQuotaUser(java.lang.String quotaUser) {
      return (InsertDirectivoProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertDirectivoProyecto setUserIp(java.lang.String userIp) {
      return (InsertDirectivoProyecto) super.setUserIp(userIp);
    }

    @Override
    public InsertDirectivoProyecto set(String parameterName, Object value) {
      return (InsertDirectivoProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertDirectorio".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertDirectorio#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Directorio}
   * @return the request
   */
  public InsertDirectorio insertDirectorio(com.csgit.cao.model.communicationchannel.model.Directorio content) throws java.io.IOException {
    InsertDirectorio result = new InsertDirectorio(content);
    initialize(result);
    return result;
  }

  public class InsertDirectorio extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Directorio> {

    private static final String REST_PATH = "directorio";

    /**
     * Create a request for the method "insertDirectorio".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertDirectorio#execute()} method to invoke the
     * remote operation. <p> {@link InsertDirectorio#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Directorio}
     * @since 1.13
     */
    protected InsertDirectorio(com.csgit.cao.model.communicationchannel.model.Directorio content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Directorio.class);
    }

    @Override
    public InsertDirectorio setAlt(java.lang.String alt) {
      return (InsertDirectorio) super.setAlt(alt);
    }

    @Override
    public InsertDirectorio setFields(java.lang.String fields) {
      return (InsertDirectorio) super.setFields(fields);
    }

    @Override
    public InsertDirectorio setKey(java.lang.String key) {
      return (InsertDirectorio) super.setKey(key);
    }

    @Override
    public InsertDirectorio setOauthToken(java.lang.String oauthToken) {
      return (InsertDirectorio) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertDirectorio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertDirectorio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertDirectorio setQuotaUser(java.lang.String quotaUser) {
      return (InsertDirectorio) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertDirectorio setUserIp(java.lang.String userIp) {
      return (InsertDirectorio) super.setUserIp(userIp);
    }

    @Override
    public InsertDirectorio set(String parameterName, Object value) {
      return (InsertDirectorio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertEmpresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Empresa}
   * @return the request
   */
  public InsertEmpresa insertEmpresa(com.csgit.cao.model.communicationchannel.model.Empresa content) throws java.io.IOException {
    InsertEmpresa result = new InsertEmpresa(content);
    initialize(result);
    return result;
  }

  public class InsertEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Empresa> {

    private static final String REST_PATH = "empresa";

    /**
     * Create a request for the method "insertEmpresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertEmpresa#execute()} method to invoke the remote
     * operation. <p> {@link InsertEmpresa#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Empresa}
     * @since 1.13
     */
    protected InsertEmpresa(com.csgit.cao.model.communicationchannel.model.Empresa content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Empresa.class);
    }

    @Override
    public InsertEmpresa setAlt(java.lang.String alt) {
      return (InsertEmpresa) super.setAlt(alt);
    }

    @Override
    public InsertEmpresa setFields(java.lang.String fields) {
      return (InsertEmpresa) super.setFields(fields);
    }

    @Override
    public InsertEmpresa setKey(java.lang.String key) {
      return (InsertEmpresa) super.setKey(key);
    }

    @Override
    public InsertEmpresa setOauthToken(java.lang.String oauthToken) {
      return (InsertEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (InsertEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertEmpresa setUserIp(java.lang.String userIp) {
      return (InsertEmpresa) super.setUserIp(userIp);
    }

    @Override
    public InsertEmpresa set(String parameterName, Object value) {
      return (InsertEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertEstimacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertEstimacion#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Estimacion}
   * @return the request
   */
  public InsertEstimacion insertEstimacion(com.csgit.cao.model.communicationchannel.model.Estimacion content) throws java.io.IOException {
    InsertEstimacion result = new InsertEstimacion(content);
    initialize(result);
    return result;
  }

  public class InsertEstimacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Estimacion> {

    private static final String REST_PATH = "estimacion";

    /**
     * Create a request for the method "insertEstimacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertEstimacion#execute()} method to invoke the
     * remote operation. <p> {@link InsertEstimacion#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Estimacion}
     * @since 1.13
     */
    protected InsertEstimacion(com.csgit.cao.model.communicationchannel.model.Estimacion content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Estimacion.class);
    }

    @Override
    public InsertEstimacion setAlt(java.lang.String alt) {
      return (InsertEstimacion) super.setAlt(alt);
    }

    @Override
    public InsertEstimacion setFields(java.lang.String fields) {
      return (InsertEstimacion) super.setFields(fields);
    }

    @Override
    public InsertEstimacion setKey(java.lang.String key) {
      return (InsertEstimacion) super.setKey(key);
    }

    @Override
    public InsertEstimacion setOauthToken(java.lang.String oauthToken) {
      return (InsertEstimacion) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertEstimacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertEstimacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertEstimacion setQuotaUser(java.lang.String quotaUser) {
      return (InsertEstimacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertEstimacion setUserIp(java.lang.String userIp) {
      return (InsertEstimacion) super.setUserIp(userIp);
    }

    @Override
    public InsertEstimacion set(String parameterName, Object value) {
      return (InsertEstimacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Maquinaria}
   * @return the request
   */
  public InsertMaquinaria insertMaquinaria(com.csgit.cao.model.communicationchannel.model.Maquinaria content) throws java.io.IOException {
    InsertMaquinaria result = new InsertMaquinaria(content);
    initialize(result);
    return result;
  }

  public class InsertMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Maquinaria> {

    private static final String REST_PATH = "maquinaria";

    /**
     * Create a request for the method "insertMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertMaquinaria#execute()} method to invoke the
     * remote operation. <p> {@link InsertMaquinaria#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Maquinaria}
     * @since 1.13
     */
    protected InsertMaquinaria(com.csgit.cao.model.communicationchannel.model.Maquinaria content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Maquinaria.class);
    }

    @Override
    public InsertMaquinaria setAlt(java.lang.String alt) {
      return (InsertMaquinaria) super.setAlt(alt);
    }

    @Override
    public InsertMaquinaria setFields(java.lang.String fields) {
      return (InsertMaquinaria) super.setFields(fields);
    }

    @Override
    public InsertMaquinaria setKey(java.lang.String key) {
      return (InsertMaquinaria) super.setKey(key);
    }

    @Override
    public InsertMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (InsertMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (InsertMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertMaquinaria setUserIp(java.lang.String userIp) {
      return (InsertMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public InsertMaquinaria set(String parameterName, Object value) {
      return (InsertMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertMultimedia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertMultimedia#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Multimedia}
   * @return the request
   */
  public InsertMultimedia insertMultimedia(com.csgit.cao.model.communicationchannel.model.Multimedia content) throws java.io.IOException {
    InsertMultimedia result = new InsertMultimedia(content);
    initialize(result);
    return result;
  }

  public class InsertMultimedia extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Multimedia> {

    private static final String REST_PATH = "multimedia";

    /**
     * Create a request for the method "insertMultimedia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertMultimedia#execute()} method to invoke the
     * remote operation. <p> {@link InsertMultimedia#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Multimedia}
     * @since 1.13
     */
    protected InsertMultimedia(com.csgit.cao.model.communicationchannel.model.Multimedia content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Multimedia.class);
    }

    @Override
    public InsertMultimedia setAlt(java.lang.String alt) {
      return (InsertMultimedia) super.setAlt(alt);
    }

    @Override
    public InsertMultimedia setFields(java.lang.String fields) {
      return (InsertMultimedia) super.setFields(fields);
    }

    @Override
    public InsertMultimedia setKey(java.lang.String key) {
      return (InsertMultimedia) super.setKey(key);
    }

    @Override
    public InsertMultimedia setOauthToken(java.lang.String oauthToken) {
      return (InsertMultimedia) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertMultimedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertMultimedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertMultimedia setQuotaUser(java.lang.String quotaUser) {
      return (InsertMultimedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertMultimedia setUserIp(java.lang.String userIp) {
      return (InsertMultimedia) super.setUserIp(userIp);
    }

    @Override
    public InsertMultimedia set(String parameterName, Object value) {
      return (InsertMultimedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertNotas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertNotas#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Notas}
   * @return the request
   */
  public InsertNotas insertNotas(com.csgit.cao.model.communicationchannel.model.Notas content) throws java.io.IOException {
    InsertNotas result = new InsertNotas(content);
    initialize(result);
    return result;
  }

  public class InsertNotas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Notas> {

    private static final String REST_PATH = "notas";

    /**
     * Create a request for the method "insertNotas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertNotas#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertNotas#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Notas}
     * @since 1.13
     */
    protected InsertNotas(com.csgit.cao.model.communicationchannel.model.Notas content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Notas.class);
    }

    @Override
    public InsertNotas setAlt(java.lang.String alt) {
      return (InsertNotas) super.setAlt(alt);
    }

    @Override
    public InsertNotas setFields(java.lang.String fields) {
      return (InsertNotas) super.setFields(fields);
    }

    @Override
    public InsertNotas setKey(java.lang.String key) {
      return (InsertNotas) super.setKey(key);
    }

    @Override
    public InsertNotas setOauthToken(java.lang.String oauthToken) {
      return (InsertNotas) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertNotas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertNotas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertNotas setQuotaUser(java.lang.String quotaUser) {
      return (InsertNotas) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertNotas setUserIp(java.lang.String userIp) {
      return (InsertNotas) super.setUserIp(userIp);
    }

    @Override
    public InsertNotas set(String parameterName, Object value) {
      return (InsertNotas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertObra".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertObra#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Obra}
   * @return the request
   */
  public InsertObra insertObra(com.csgit.cao.model.communicationchannel.model.Obra content) throws java.io.IOException {
    InsertObra result = new InsertObra(content);
    initialize(result);
    return result;
  }

  public class InsertObra extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Obra> {

    private static final String REST_PATH = "obra";

    /**
     * Create a request for the method "insertObra".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertObra#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertObra#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Obra}
     * @since 1.13
     */
    protected InsertObra(com.csgit.cao.model.communicationchannel.model.Obra content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Obra.class);
    }

    @Override
    public InsertObra setAlt(java.lang.String alt) {
      return (InsertObra) super.setAlt(alt);
    }

    @Override
    public InsertObra setFields(java.lang.String fields) {
      return (InsertObra) super.setFields(fields);
    }

    @Override
    public InsertObra setKey(java.lang.String key) {
      return (InsertObra) super.setKey(key);
    }

    @Override
    public InsertObra setOauthToken(java.lang.String oauthToken) {
      return (InsertObra) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertObra setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertObra) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertObra setQuotaUser(java.lang.String quotaUser) {
      return (InsertObra) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertObra setUserIp(java.lang.String userIp) {
      return (InsertObra) super.setUserIp(userIp);
    }

    @Override
    public InsertObra set(String parameterName, Object value) {
      return (InsertObra) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertOrg_Goubernamental".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertOrgGoubernamental#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.OrgGoubernamental}
   * @return the request
   */
  public InsertOrgGoubernamental insertOrgGoubernamental(com.csgit.cao.model.communicationchannel.model.OrgGoubernamental content) throws java.io.IOException {
    InsertOrgGoubernamental result = new InsertOrgGoubernamental(content);
    initialize(result);
    return result;
  }

  public class InsertOrgGoubernamental extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.OrgGoubernamental> {

    private static final String REST_PATH = "org_goubernamental";

    /**
     * Create a request for the method "insertOrg_Goubernamental".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertOrgGoubernamental#execute()} method to invoke
     * the remote operation. <p> {@link InsertOrgGoubernamental#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.OrgGoubernamental}
     * @since 1.13
     */
    protected InsertOrgGoubernamental(com.csgit.cao.model.communicationchannel.model.OrgGoubernamental content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.OrgGoubernamental.class);
    }

    @Override
    public InsertOrgGoubernamental setAlt(java.lang.String alt) {
      return (InsertOrgGoubernamental) super.setAlt(alt);
    }

    @Override
    public InsertOrgGoubernamental setFields(java.lang.String fields) {
      return (InsertOrgGoubernamental) super.setFields(fields);
    }

    @Override
    public InsertOrgGoubernamental setKey(java.lang.String key) {
      return (InsertOrgGoubernamental) super.setKey(key);
    }

    @Override
    public InsertOrgGoubernamental setOauthToken(java.lang.String oauthToken) {
      return (InsertOrgGoubernamental) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertOrgGoubernamental setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertOrgGoubernamental) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertOrgGoubernamental setQuotaUser(java.lang.String quotaUser) {
      return (InsertOrgGoubernamental) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertOrgGoubernamental setUserIp(java.lang.String userIp) {
      return (InsertOrgGoubernamental) super.setUserIp(userIp);
    }

    @Override
    public InsertOrgGoubernamental set(String parameterName, Object value) {
      return (InsertOrgGoubernamental) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertPersona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertPersona#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Persona}
   * @return the request
   */
  public InsertPersona insertPersona(com.csgit.cao.model.communicationchannel.model.Persona content) throws java.io.IOException {
    InsertPersona result = new InsertPersona(content);
    initialize(result);
    return result;
  }

  public class InsertPersona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Persona> {

    private static final String REST_PATH = "persona";

    /**
     * Create a request for the method "insertPersona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertPersona#execute()} method to invoke the remote
     * operation. <p> {@link InsertPersona#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Persona}
     * @since 1.13
     */
    protected InsertPersona(com.csgit.cao.model.communicationchannel.model.Persona content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Persona.class);
    }

    @Override
    public InsertPersona setAlt(java.lang.String alt) {
      return (InsertPersona) super.setAlt(alt);
    }

    @Override
    public InsertPersona setFields(java.lang.String fields) {
      return (InsertPersona) super.setFields(fields);
    }

    @Override
    public InsertPersona setKey(java.lang.String key) {
      return (InsertPersona) super.setKey(key);
    }

    @Override
    public InsertPersona setOauthToken(java.lang.String oauthToken) {
      return (InsertPersona) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertPersona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertPersona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertPersona setQuotaUser(java.lang.String quotaUser) {
      return (InsertPersona) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertPersona setUserIp(java.lang.String userIp) {
      return (InsertPersona) super.setUserIp(userIp);
    }

    @Override
    public InsertPersona set(String parameterName, Object value) {
      return (InsertPersona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertProyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Proyecto}
   * @return the request
   */
  public InsertProyecto insertProyecto(com.csgit.cao.model.communicationchannel.model.Proyecto content) throws java.io.IOException {
    InsertProyecto result = new InsertProyecto(content);
    initialize(result);
    return result;
  }

  public class InsertProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Proyecto> {

    private static final String REST_PATH = "proyecto";

    /**
     * Create a request for the method "insertProyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertProyecto#execute()} method to invoke the remote
     * operation. <p> {@link InsertProyecto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Proyecto}
     * @since 1.13
     */
    protected InsertProyecto(com.csgit.cao.model.communicationchannel.model.Proyecto content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Proyecto.class);
    }

    @Override
    public InsertProyecto setAlt(java.lang.String alt) {
      return (InsertProyecto) super.setAlt(alt);
    }

    @Override
    public InsertProyecto setFields(java.lang.String fields) {
      return (InsertProyecto) super.setFields(fields);
    }

    @Override
    public InsertProyecto setKey(java.lang.String key) {
      return (InsertProyecto) super.setKey(key);
    }

    @Override
    public InsertProyecto setOauthToken(java.lang.String oauthToken) {
      return (InsertProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertProyecto setQuotaUser(java.lang.String quotaUser) {
      return (InsertProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertProyecto setUserIp(java.lang.String userIp) {
      return (InsertProyecto) super.setUserIp(userIp);
    }

    @Override
    public InsertProyecto set(String parameterName, Object value) {
      return (InsertProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertPush".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertPush#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Push}
   * @return the request
   */
  public InsertPush insertPush(com.csgit.cao.model.communicationchannel.model.Push content) throws java.io.IOException {
    InsertPush result = new InsertPush(content);
    initialize(result);
    return result;
  }

  public class InsertPush extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Push> {

    private static final String REST_PATH = "push";

    /**
     * Create a request for the method "insertPush".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertPush#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertPush#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Push}
     * @since 1.13
     */
    protected InsertPush(com.csgit.cao.model.communicationchannel.model.Push content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Push.class);
    }

    @Override
    public InsertPush setAlt(java.lang.String alt) {
      return (InsertPush) super.setAlt(alt);
    }

    @Override
    public InsertPush setFields(java.lang.String fields) {
      return (InsertPush) super.setFields(fields);
    }

    @Override
    public InsertPush setKey(java.lang.String key) {
      return (InsertPush) super.setKey(key);
    }

    @Override
    public InsertPush setOauthToken(java.lang.String oauthToken) {
      return (InsertPush) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertPush setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertPush) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertPush setQuotaUser(java.lang.String quotaUser) {
      return (InsertPush) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertPush setUserIp(java.lang.String userIp) {
      return (InsertPush) super.setUserIp(userIp);
    }

    @Override
    public InsertPush set(String parameterName, Object value) {
      return (InsertPush) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRef_calendarizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertRefCalendarizacion#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RefCalendarizacion}
   * @return the request
   */
  public InsertRefCalendarizacion insertRefCalendarizacion(com.csgit.cao.model.communicationchannel.model.RefCalendarizacion content) throws java.io.IOException {
    InsertRefCalendarizacion result = new InsertRefCalendarizacion(content);
    initialize(result);
    return result;
  }

  public class InsertRefCalendarizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RefCalendarizacion> {

    private static final String REST_PATH = "ref_calendarizacion";

    /**
     * Create a request for the method "insertRef_calendarizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertRefCalendarizacion#execute()} method to invoke
     * the remote operation. <p> {@link InsertRefCalendarizacion#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RefCalendarizacion}
     * @since 1.13
     */
    protected InsertRefCalendarizacion(com.csgit.cao.model.communicationchannel.model.RefCalendarizacion content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RefCalendarizacion.class);
    }

    @Override
    public InsertRefCalendarizacion setAlt(java.lang.String alt) {
      return (InsertRefCalendarizacion) super.setAlt(alt);
    }

    @Override
    public InsertRefCalendarizacion setFields(java.lang.String fields) {
      return (InsertRefCalendarizacion) super.setFields(fields);
    }

    @Override
    public InsertRefCalendarizacion setKey(java.lang.String key) {
      return (InsertRefCalendarizacion) super.setKey(key);
    }

    @Override
    public InsertRefCalendarizacion setOauthToken(java.lang.String oauthToken) {
      return (InsertRefCalendarizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRefCalendarizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRefCalendarizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRefCalendarizacion setQuotaUser(java.lang.String quotaUser) {
      return (InsertRefCalendarizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRefCalendarizacion setUserIp(java.lang.String userIp) {
      return (InsertRefCalendarizacion) super.setUserIp(userIp);
    }

    @Override
    public InsertRefCalendarizacion set(String parameterName, Object value) {
      return (InsertRefCalendarizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRepMaquinariaCatMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertRepMaquinariaCatMaquinaria#execute()} method to invoke
   * the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria}
   * @return the request
   */
  public InsertRepMaquinariaCatMaquinaria insertRepMaquinariaCatMaquinaria(com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria content) throws java.io.IOException {
    InsertRepMaquinariaCatMaquinaria result = new InsertRepMaquinariaCatMaquinaria(content);
    initialize(result);
    return result;
  }

  public class InsertRepMaquinariaCatMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria> {

    private static final String REST_PATH = "repmaquinariacatmaquinaria";

    /**
     * Create a request for the method "insertRepMaquinariaCatMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertRepMaquinariaCatMaquinaria#execute()} method to
     * invoke the remote operation. <p> {@link InsertRepMaquinariaCatMaquinaria#initialize(com.google.
     * api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria}
     * @since 1.13
     */
    protected InsertRepMaquinariaCatMaquinaria(com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria.class);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setAlt(java.lang.String alt) {
      return (InsertRepMaquinariaCatMaquinaria) super.setAlt(alt);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setFields(java.lang.String fields) {
      return (InsertRepMaquinariaCatMaquinaria) super.setFields(fields);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setKey(java.lang.String key) {
      return (InsertRepMaquinariaCatMaquinaria) super.setKey(key);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (InsertRepMaquinariaCatMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRepMaquinariaCatMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (InsertRepMaquinariaCatMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria setUserIp(java.lang.String userIp) {
      return (InsertRepMaquinariaCatMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public InsertRepMaquinariaCatMaquinaria set(String parameterName, Object value) {
      return (InsertRepMaquinariaCatMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRepoPersonalCatPersonal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertRepoPersonalCatPersonal#execute()} method to invoke
   * the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal}
   * @return the request
   */
  public InsertRepoPersonalCatPersonal insertRepoPersonalCatPersonal(com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal content) throws java.io.IOException {
    InsertRepoPersonalCatPersonal result = new InsertRepoPersonalCatPersonal(content);
    initialize(result);
    return result;
  }

  public class InsertRepoPersonalCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal> {

    private static final String REST_PATH = "repopersonalcatpersonal";

    /**
     * Create a request for the method "insertRepoPersonalCatPersonal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertRepoPersonalCatPersonal#execute()} method to
     * invoke the remote operation. <p> {@link InsertRepoPersonalCatPersonal#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal}
     * @since 1.13
     */
    protected InsertRepoPersonalCatPersonal(com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal.class);
    }

    @Override
    public InsertRepoPersonalCatPersonal setAlt(java.lang.String alt) {
      return (InsertRepoPersonalCatPersonal) super.setAlt(alt);
    }

    @Override
    public InsertRepoPersonalCatPersonal setFields(java.lang.String fields) {
      return (InsertRepoPersonalCatPersonal) super.setFields(fields);
    }

    @Override
    public InsertRepoPersonalCatPersonal setKey(java.lang.String key) {
      return (InsertRepoPersonalCatPersonal) super.setKey(key);
    }

    @Override
    public InsertRepoPersonalCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (InsertRepoPersonalCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRepoPersonalCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRepoPersonalCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRepoPersonalCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (InsertRepoPersonalCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRepoPersonalCatPersonal setUserIp(java.lang.String userIp) {
      return (InsertRepoPersonalCatPersonal) super.setUserIp(userIp);
    }

    @Override
    public InsertRepoPersonalCatPersonal set(String parameterName, Object value) {
      return (InsertRepoPersonalCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertReporteDiario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertReporteDiario#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.ReporteDiario}
   * @return the request
   */
  public InsertReporteDiario insertReporteDiario(com.csgit.cao.model.communicationchannel.model.ReporteDiario content) throws java.io.IOException {
    InsertReporteDiario result = new InsertReporteDiario(content);
    initialize(result);
    return result;
  }

  public class InsertReporteDiario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.ReporteDiario> {

    private static final String REST_PATH = "reportediario";

    /**
     * Create a request for the method "insertReporteDiario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertReporteDiario#execute()} method to invoke the
     * remote operation. <p> {@link InsertReporteDiario#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.ReporteDiario}
     * @since 1.13
     */
    protected InsertReporteDiario(com.csgit.cao.model.communicationchannel.model.ReporteDiario content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.ReporteDiario.class);
    }

    @Override
    public InsertReporteDiario setAlt(java.lang.String alt) {
      return (InsertReporteDiario) super.setAlt(alt);
    }

    @Override
    public InsertReporteDiario setFields(java.lang.String fields) {
      return (InsertReporteDiario) super.setFields(fields);
    }

    @Override
    public InsertReporteDiario setKey(java.lang.String key) {
      return (InsertReporteDiario) super.setKey(key);
    }

    @Override
    public InsertReporteDiario setOauthToken(java.lang.String oauthToken) {
      return (InsertReporteDiario) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertReporteDiario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertReporteDiario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertReporteDiario setQuotaUser(java.lang.String quotaUser) {
      return (InsertReporteDiario) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertReporteDiario setUserIp(java.lang.String userIp) {
      return (InsertReporteDiario) super.setUserIp(userIp);
    }

    @Override
    public InsertReporteDiario set(String parameterName, Object value) {
      return (InsertReporteDiario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertReportsmodel".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertReportsmodel#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Reportsmodel}
   * @return the request
   */
  public InsertReportsmodel insertReportsmodel(com.csgit.cao.model.communicationchannel.model.Reportsmodel content) throws java.io.IOException {
    InsertReportsmodel result = new InsertReportsmodel(content);
    initialize(result);
    return result;
  }

  public class InsertReportsmodel extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Reportsmodel> {

    private static final String REST_PATH = "reportsmodel";

    /**
     * Create a request for the method "insertReportsmodel".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertReportsmodel#execute()} method to invoke the
     * remote operation. <p> {@link InsertReportsmodel#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Reportsmodel}
     * @since 1.13
     */
    protected InsertReportsmodel(com.csgit.cao.model.communicationchannel.model.Reportsmodel content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Reportsmodel.class);
    }

    @Override
    public InsertReportsmodel setAlt(java.lang.String alt) {
      return (InsertReportsmodel) super.setAlt(alt);
    }

    @Override
    public InsertReportsmodel setFields(java.lang.String fields) {
      return (InsertReportsmodel) super.setFields(fields);
    }

    @Override
    public InsertReportsmodel setKey(java.lang.String key) {
      return (InsertReportsmodel) super.setKey(key);
    }

    @Override
    public InsertReportsmodel setOauthToken(java.lang.String oauthToken) {
      return (InsertReportsmodel) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertReportsmodel setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertReportsmodel) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertReportsmodel setQuotaUser(java.lang.String quotaUser) {
      return (InsertReportsmodel) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertReportsmodel setUserIp(java.lang.String userIp) {
      return (InsertReportsmodel) super.setUserIp(userIp);
    }

    @Override
    public InsertReportsmodel set(String parameterName, Object value) {
      return (InsertReportsmodel) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertSincronizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertSincronizacion#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Sincronizacion}
   * @return the request
   */
  public InsertSincronizacion insertSincronizacion(com.csgit.cao.model.communicationchannel.model.Sincronizacion content) throws java.io.IOException {
    InsertSincronizacion result = new InsertSincronizacion(content);
    initialize(result);
    return result;
  }

  public class InsertSincronizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Sincronizacion> {

    private static final String REST_PATH = "sincronizacion";

    /**
     * Create a request for the method "insertSincronizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertSincronizacion#execute()} method to invoke the
     * remote operation. <p> {@link InsertSincronizacion#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Sincronizacion}
     * @since 1.13
     */
    protected InsertSincronizacion(com.csgit.cao.model.communicationchannel.model.Sincronizacion content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Sincronizacion.class);
    }

    @Override
    public InsertSincronizacion setAlt(java.lang.String alt) {
      return (InsertSincronizacion) super.setAlt(alt);
    }

    @Override
    public InsertSincronizacion setFields(java.lang.String fields) {
      return (InsertSincronizacion) super.setFields(fields);
    }

    @Override
    public InsertSincronizacion setKey(java.lang.String key) {
      return (InsertSincronizacion) super.setKey(key);
    }

    @Override
    public InsertSincronizacion setOauthToken(java.lang.String oauthToken) {
      return (InsertSincronizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertSincronizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertSincronizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertSincronizacion setQuotaUser(java.lang.String quotaUser) {
      return (InsertSincronizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertSincronizacion setUserIp(java.lang.String userIp) {
      return (InsertSincronizacion) super.setUserIp(userIp);
    }

    @Override
    public InsertSincronizacion set(String parameterName, Object value) {
      return (InsertSincronizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUbicaciones".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertUbicaciones#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Ubicaciones}
   * @return the request
   */
  public InsertUbicaciones insertUbicaciones(com.csgit.cao.model.communicationchannel.model.Ubicaciones content) throws java.io.IOException {
    InsertUbicaciones result = new InsertUbicaciones(content);
    initialize(result);
    return result;
  }

  public class InsertUbicaciones extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Ubicaciones> {

    private static final String REST_PATH = "ubicaciones";

    /**
     * Create a request for the method "insertUbicaciones".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertUbicaciones#execute()} method to invoke the
     * remote operation. <p> {@link InsertUbicaciones#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Ubicaciones}
     * @since 1.13
     */
    protected InsertUbicaciones(com.csgit.cao.model.communicationchannel.model.Ubicaciones content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Ubicaciones.class);
    }

    @Override
    public InsertUbicaciones setAlt(java.lang.String alt) {
      return (InsertUbicaciones) super.setAlt(alt);
    }

    @Override
    public InsertUbicaciones setFields(java.lang.String fields) {
      return (InsertUbicaciones) super.setFields(fields);
    }

    @Override
    public InsertUbicaciones setKey(java.lang.String key) {
      return (InsertUbicaciones) super.setKey(key);
    }

    @Override
    public InsertUbicaciones setOauthToken(java.lang.String oauthToken) {
      return (InsertUbicaciones) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUbicaciones setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUbicaciones) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUbicaciones setQuotaUser(java.lang.String quotaUser) {
      return (InsertUbicaciones) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUbicaciones setUserIp(java.lang.String userIp) {
      return (InsertUbicaciones) super.setUserIp(userIp);
    }

    @Override
    public InsertUbicaciones set(String parameterName, Object value) {
      return (InsertUbicaciones) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUsuario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertUsuario#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Usuario}
   * @return the request
   */
  public InsertUsuario insertUsuario(com.csgit.cao.model.communicationchannel.model.Usuario content) throws java.io.IOException {
    InsertUsuario result = new InsertUsuario(content);
    initialize(result);
    return result;
  }

  public class InsertUsuario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Usuario> {

    private static final String REST_PATH = "usuario";

    /**
     * Create a request for the method "insertUsuario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertUsuario#execute()} method to invoke the remote
     * operation. <p> {@link InsertUsuario#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Usuario}
     * @since 1.13
     */
    protected InsertUsuario(com.csgit.cao.model.communicationchannel.model.Usuario content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Usuario.class);
    }

    @Override
    public InsertUsuario setAlt(java.lang.String alt) {
      return (InsertUsuario) super.setAlt(alt);
    }

    @Override
    public InsertUsuario setFields(java.lang.String fields) {
      return (InsertUsuario) super.setFields(fields);
    }

    @Override
    public InsertUsuario setKey(java.lang.String key) {
      return (InsertUsuario) super.setKey(key);
    }

    @Override
    public InsertUsuario setOauthToken(java.lang.String oauthToken) {
      return (InsertUsuario) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUsuario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUsuario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUsuario setQuotaUser(java.lang.String quotaUser) {
      return (InsertUsuario) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUsuario setUserIp(java.lang.String userIp) {
      return (InsertUsuario) super.setUserIp(userIp);
    }

    @Override
    public InsertUsuario set(String parameterName, Object value) {
      return (InsertUsuario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertXmpp".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link InsertXmpp#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Xmpp}
   * @return the request
   */
  public InsertXmpp insertXmpp(com.csgit.cao.model.communicationchannel.model.Xmpp content) throws java.io.IOException {
    InsertXmpp result = new InsertXmpp(content);
    initialize(result);
    return result;
  }

  public class InsertXmpp extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Xmpp> {

    private static final String REST_PATH = "xmpp";

    /**
     * Create a request for the method "insertXmpp".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link InsertXmpp#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertXmpp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Xmpp}
     * @since 1.13
     */
    protected InsertXmpp(com.csgit.cao.model.communicationchannel.model.Xmpp content) {
      super(Communicationchannel.this, "POST", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Xmpp.class);
    }

    @Override
    public InsertXmpp setAlt(java.lang.String alt) {
      return (InsertXmpp) super.setAlt(alt);
    }

    @Override
    public InsertXmpp setFields(java.lang.String fields) {
      return (InsertXmpp) super.setFields(fields);
    }

    @Override
    public InsertXmpp setKey(java.lang.String key) {
      return (InsertXmpp) super.setKey(key);
    }

    @Override
    public InsertXmpp setOauthToken(java.lang.String oauthToken) {
      return (InsertXmpp) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertXmpp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertXmpp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertXmpp setQuotaUser(java.lang.String quotaUser) {
      return (InsertXmpp) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertXmpp setUserIp(java.lang.String userIp) {
      return (InsertXmpp) super.setUserIp(userIp);
    }

    @Override
    public InsertXmpp set(String parameterName, Object value) {
      return (InsertXmpp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listAditivas_Deductivas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListAditivasDeductivas#execute()} method to invoke the
   * remote operation.
   *
   * @return the request
   */
  public ListAditivasDeductivas listAditivasDeductivas() throws java.io.IOException {
    ListAditivasDeductivas result = new ListAditivasDeductivas();
    initialize(result);
    return result;
  }

  public class ListAditivasDeductivas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseAditivasDeductivas> {

    private static final String REST_PATH = "aditivas_deductivas";

    /**
     * Create a request for the method "listAditivas_Deductivas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListAditivasDeductivas#execute()} method to invoke the
     * remote operation. <p> {@link ListAditivasDeductivas#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListAditivasDeductivas() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseAditivasDeductivas.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListAditivasDeductivas setAlt(java.lang.String alt) {
      return (ListAditivasDeductivas) super.setAlt(alt);
    }

    @Override
    public ListAditivasDeductivas setFields(java.lang.String fields) {
      return (ListAditivasDeductivas) super.setFields(fields);
    }

    @Override
    public ListAditivasDeductivas setKey(java.lang.String key) {
      return (ListAditivasDeductivas) super.setKey(key);
    }

    @Override
    public ListAditivasDeductivas setOauthToken(java.lang.String oauthToken) {
      return (ListAditivasDeductivas) super.setOauthToken(oauthToken);
    }

    @Override
    public ListAditivasDeductivas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListAditivasDeductivas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListAditivasDeductivas setQuotaUser(java.lang.String quotaUser) {
      return (ListAditivasDeductivas) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListAditivasDeductivas setUserIp(java.lang.String userIp) {
      return (ListAditivasDeductivas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListAditivasDeductivas setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListAditivasDeductivas setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListAditivasDeductivas set(String parameterName, Object value) {
      return (ListAditivasDeductivas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listAvance_Financiero".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListAvanceFinanciero#execute()} method to invoke the remote
   * operation.
   *
   * @param idReferencia
   * @param tipoEntidad
   * @return the request
   */
  public ListAvanceFinanciero listAvanceFinanciero(java.lang.Long idReferencia, java.lang.Integer tipoEntidad) throws java.io.IOException {
    ListAvanceFinanciero result = new ListAvanceFinanciero(idReferencia, tipoEntidad);
    initialize(result);
    return result;
  }

  public class ListAvanceFinanciero extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseAvanceFinanciero> {

    private static final String REST_PATH = "avance_financiero/{id_referencia}/{Tipo_Entidad}";

    /**
     * Create a request for the method "listAvance_Financiero".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListAvanceFinanciero#execute()} method to invoke the
     * remote operation. <p> {@link ListAvanceFinanciero#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param idReferencia
     * @param tipoEntidad
     * @since 1.13
     */
    protected ListAvanceFinanciero(java.lang.Long idReferencia, java.lang.Integer tipoEntidad) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseAvanceFinanciero.class);
      this.idReferencia = com.google.api.client.util.Preconditions.checkNotNull(idReferencia, "Required parameter idReferencia must be specified.");
      this.tipoEntidad = com.google.api.client.util.Preconditions.checkNotNull(tipoEntidad, "Required parameter tipoEntidad must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListAvanceFinanciero setAlt(java.lang.String alt) {
      return (ListAvanceFinanciero) super.setAlt(alt);
    }

    @Override
    public ListAvanceFinanciero setFields(java.lang.String fields) {
      return (ListAvanceFinanciero) super.setFields(fields);
    }

    @Override
    public ListAvanceFinanciero setKey(java.lang.String key) {
      return (ListAvanceFinanciero) super.setKey(key);
    }

    @Override
    public ListAvanceFinanciero setOauthToken(java.lang.String oauthToken) {
      return (ListAvanceFinanciero) super.setOauthToken(oauthToken);
    }

    @Override
    public ListAvanceFinanciero setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListAvanceFinanciero) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListAvanceFinanciero setQuotaUser(java.lang.String quotaUser) {
      return (ListAvanceFinanciero) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListAvanceFinanciero setUserIp(java.lang.String userIp) {
      return (ListAvanceFinanciero) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("id_referencia")
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public ListAvanceFinanciero setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key("Tipo_Entidad")
    private java.lang.Integer tipoEntidad;

    /**

     */
    public java.lang.Integer getTipoEntidad() {
      return tipoEntidad;
    }

    public ListAvanceFinanciero setTipoEntidad(java.lang.Integer tipoEntidad) {
      this.tipoEntidad = tipoEntidad;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListAvanceFinanciero setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListAvanceFinanciero setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListAvanceFinanciero set(String parameterName, Object value) {
      return (ListAvanceFinanciero) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listAvance_Fisico".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListAvanceFisico#execute()} method to invoke the remote
   * operation.
   *
   * @param idReferencia
   * @param tipoEntidad
   * @return the request
   */
  public ListAvanceFisico listAvanceFisico(java.lang.Long idReferencia, java.lang.Integer tipoEntidad) throws java.io.IOException {
    ListAvanceFisico result = new ListAvanceFisico(idReferencia, tipoEntidad);
    initialize(result);
    return result;
  }

  public class ListAvanceFisico extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseAvanceFisico> {

    private static final String REST_PATH = "avance_fisico/{id_referencia}/{Tipo_Entidad}";

    /**
     * Create a request for the method "listAvance_Fisico".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListAvanceFisico#execute()} method to invoke the
     * remote operation. <p> {@link ListAvanceFisico#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param idReferencia
     * @param tipoEntidad
     * @since 1.13
     */
    protected ListAvanceFisico(java.lang.Long idReferencia, java.lang.Integer tipoEntidad) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseAvanceFisico.class);
      this.idReferencia = com.google.api.client.util.Preconditions.checkNotNull(idReferencia, "Required parameter idReferencia must be specified.");
      this.tipoEntidad = com.google.api.client.util.Preconditions.checkNotNull(tipoEntidad, "Required parameter tipoEntidad must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListAvanceFisico setAlt(java.lang.String alt) {
      return (ListAvanceFisico) super.setAlt(alt);
    }

    @Override
    public ListAvanceFisico setFields(java.lang.String fields) {
      return (ListAvanceFisico) super.setFields(fields);
    }

    @Override
    public ListAvanceFisico setKey(java.lang.String key) {
      return (ListAvanceFisico) super.setKey(key);
    }

    @Override
    public ListAvanceFisico setOauthToken(java.lang.String oauthToken) {
      return (ListAvanceFisico) super.setOauthToken(oauthToken);
    }

    @Override
    public ListAvanceFisico setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListAvanceFisico) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListAvanceFisico setQuotaUser(java.lang.String quotaUser) {
      return (ListAvanceFisico) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListAvanceFisico setUserIp(java.lang.String userIp) {
      return (ListAvanceFisico) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("id_referencia")
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public ListAvanceFisico setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key("Tipo_Entidad")
    private java.lang.Integer tipoEntidad;

    /**

     */
    public java.lang.Integer getTipoEntidad() {
      return tipoEntidad;
    }

    public ListAvanceFisico setTipoEntidad(java.lang.Integer tipoEntidad) {
      this.tipoEntidad = tipoEntidad;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListAvanceFisico setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListAvanceFisico setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListAvanceFisico set(String parameterName, Object value) {
      return (ListAvanceFisico) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listCat_Contactos".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListCatContactos#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListCatContactos listCatContactos() throws java.io.IOException {
    ListCatContactos result = new ListCatContactos();
    initialize(result);
    return result;
  }

  public class ListCatContactos extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseCatContactos> {

    private static final String REST_PATH = "cat_contactos";

    /**
     * Create a request for the method "listCat_Contactos".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListCatContactos#execute()} method to invoke the
     * remote operation. <p> {@link ListCatContactos#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListCatContactos() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseCatContactos.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListCatContactos setAlt(java.lang.String alt) {
      return (ListCatContactos) super.setAlt(alt);
    }

    @Override
    public ListCatContactos setFields(java.lang.String fields) {
      return (ListCatContactos) super.setFields(fields);
    }

    @Override
    public ListCatContactos setKey(java.lang.String key) {
      return (ListCatContactos) super.setKey(key);
    }

    @Override
    public ListCatContactos setOauthToken(java.lang.String oauthToken) {
      return (ListCatContactos) super.setOauthToken(oauthToken);
    }

    @Override
    public ListCatContactos setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListCatContactos) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListCatContactos setQuotaUser(java.lang.String quotaUser) {
      return (ListCatContactos) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListCatContactos setUserIp(java.lang.String userIp) {
      return (ListCatContactos) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListCatContactos setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListCatContactos setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListCatContactos set(String parameterName, Object value) {
      return (ListCatContactos) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listCat_Personal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListCatPersonal#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListCatPersonal listCatPersonal() throws java.io.IOException {
    ListCatPersonal result = new ListCatPersonal();
    initialize(result);
    return result;
  }

  public class ListCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseCatPersonal> {

    private static final String REST_PATH = "cat_personal";

    /**
     * Create a request for the method "listCat_Personal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListCatPersonal#execute()} method to invoke the remote
     * operation. <p> {@link ListCatPersonal#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListCatPersonal() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseCatPersonal.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListCatPersonal setAlt(java.lang.String alt) {
      return (ListCatPersonal) super.setAlt(alt);
    }

    @Override
    public ListCatPersonal setFields(java.lang.String fields) {
      return (ListCatPersonal) super.setFields(fields);
    }

    @Override
    public ListCatPersonal setKey(java.lang.String key) {
      return (ListCatPersonal) super.setKey(key);
    }

    @Override
    public ListCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (ListCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public ListCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (ListCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListCatPersonal setUserIp(java.lang.String userIp) {
      return (ListCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListCatPersonal setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListCatPersonal setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListCatPersonal set(String parameterName, Object value) {
      return (ListCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listCat_Tipo_Empresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListCatTipoEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListCatTipoEmpresa listCatTipoEmpresa() throws java.io.IOException {
    ListCatTipoEmpresa result = new ListCatTipoEmpresa();
    initialize(result);
    return result;
  }

  public class ListCatTipoEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoEmpresa> {

    private static final String REST_PATH = "cat_tipo_empresa";

    /**
     * Create a request for the method "listCat_Tipo_Empresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListCatTipoEmpresa#execute()} method to invoke the
     * remote operation. <p> {@link ListCatTipoEmpresa#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListCatTipoEmpresa() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoEmpresa.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListCatTipoEmpresa setAlt(java.lang.String alt) {
      return (ListCatTipoEmpresa) super.setAlt(alt);
    }

    @Override
    public ListCatTipoEmpresa setFields(java.lang.String fields) {
      return (ListCatTipoEmpresa) super.setFields(fields);
    }

    @Override
    public ListCatTipoEmpresa setKey(java.lang.String key) {
      return (ListCatTipoEmpresa) super.setKey(key);
    }

    @Override
    public ListCatTipoEmpresa setOauthToken(java.lang.String oauthToken) {
      return (ListCatTipoEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public ListCatTipoEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListCatTipoEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListCatTipoEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (ListCatTipoEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListCatTipoEmpresa setUserIp(java.lang.String userIp) {
      return (ListCatTipoEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListCatTipoEmpresa setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListCatTipoEmpresa setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListCatTipoEmpresa set(String parameterName, Object value) {
      return (ListCatTipoEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listCat_Tipo_Maquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListCatTipoMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListCatTipoMaquinaria listCatTipoMaquinaria() throws java.io.IOException {
    ListCatTipoMaquinaria result = new ListCatTipoMaquinaria();
    initialize(result);
    return result;
  }

  public class ListCatTipoMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoMaquinaria> {

    private static final String REST_PATH = "cat_tipo_maquinaria";

    /**
     * Create a request for the method "listCat_Tipo_Maquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListCatTipoMaquinaria#execute()} method to invoke the
     * remote operation. <p> {@link ListCatTipoMaquinaria#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListCatTipoMaquinaria() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoMaquinaria.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListCatTipoMaquinaria setAlt(java.lang.String alt) {
      return (ListCatTipoMaquinaria) super.setAlt(alt);
    }

    @Override
    public ListCatTipoMaquinaria setFields(java.lang.String fields) {
      return (ListCatTipoMaquinaria) super.setFields(fields);
    }

    @Override
    public ListCatTipoMaquinaria setKey(java.lang.String key) {
      return (ListCatTipoMaquinaria) super.setKey(key);
    }

    @Override
    public ListCatTipoMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (ListCatTipoMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public ListCatTipoMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListCatTipoMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListCatTipoMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (ListCatTipoMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListCatTipoMaquinaria setUserIp(java.lang.String userIp) {
      return (ListCatTipoMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListCatTipoMaquinaria setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListCatTipoMaquinaria setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListCatTipoMaquinaria set(String parameterName, Object value) {
      return (ListCatTipoMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listCat_Tipo_Presona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListCatTipoPresona#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListCatTipoPresona listCatTipoPresona() throws java.io.IOException {
    ListCatTipoPresona result = new ListCatTipoPresona();
    initialize(result);
    return result;
  }

  public class ListCatTipoPresona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoPresona> {

    private static final String REST_PATH = "cat_tipo_presona";

    /**
     * Create a request for the method "listCat_Tipo_Presona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListCatTipoPresona#execute()} method to invoke the
     * remote operation. <p> {@link ListCatTipoPresona#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListCatTipoPresona() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseCatTipoPresona.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListCatTipoPresona setAlt(java.lang.String alt) {
      return (ListCatTipoPresona) super.setAlt(alt);
    }

    @Override
    public ListCatTipoPresona setFields(java.lang.String fields) {
      return (ListCatTipoPresona) super.setFields(fields);
    }

    @Override
    public ListCatTipoPresona setKey(java.lang.String key) {
      return (ListCatTipoPresona) super.setKey(key);
    }

    @Override
    public ListCatTipoPresona setOauthToken(java.lang.String oauthToken) {
      return (ListCatTipoPresona) super.setOauthToken(oauthToken);
    }

    @Override
    public ListCatTipoPresona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListCatTipoPresona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListCatTipoPresona setQuotaUser(java.lang.String quotaUser) {
      return (ListCatTipoPresona) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListCatTipoPresona setUserIp(java.lang.String userIp) {
      return (ListCatTipoPresona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListCatTipoPresona setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListCatTipoPresona setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListCatTipoPresona set(String parameterName, Object value) {
      return (ListCatTipoPresona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listConcepto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListConcepto#execute()} method to invoke the remote
   * operation.
   *
   * @param idObra
   * @param def
   * @return the request
   */
  public ListConcepto listConcepto(java.lang.Long idObra, java.lang.Long def) throws java.io.IOException {
    ListConcepto result = new ListConcepto(idObra, def);
    initialize(result);
    return result;
  }

  public class ListConcepto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseConcepto> {

    private static final String REST_PATH = "concepto/{id_obra}/{def}";

    /**
     * Create a request for the method "listConcepto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListConcepto#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListConcepto#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param idObra
     * @param def
     * @since 1.13
     */
    protected ListConcepto(java.lang.Long idObra, java.lang.Long def) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseConcepto.class);
      this.idObra = com.google.api.client.util.Preconditions.checkNotNull(idObra, "Required parameter idObra must be specified.");
      this.def = com.google.api.client.util.Preconditions.checkNotNull(def, "Required parameter def must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListConcepto setAlt(java.lang.String alt) {
      return (ListConcepto) super.setAlt(alt);
    }

    @Override
    public ListConcepto setFields(java.lang.String fields) {
      return (ListConcepto) super.setFields(fields);
    }

    @Override
    public ListConcepto setKey(java.lang.String key) {
      return (ListConcepto) super.setKey(key);
    }

    @Override
    public ListConcepto setOauthToken(java.lang.String oauthToken) {
      return (ListConcepto) super.setOauthToken(oauthToken);
    }

    @Override
    public ListConcepto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListConcepto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListConcepto setQuotaUser(java.lang.String quotaUser) {
      return (ListConcepto) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListConcepto setUserIp(java.lang.String userIp) {
      return (ListConcepto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("id_obra")
    private java.lang.Long idObra;

    /**

     */
    public java.lang.Long getIdObra() {
      return idObra;
    }

    public ListConcepto setIdObra(java.lang.Long idObra) {
      this.idObra = idObra;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long def;

    /**

     */
    public java.lang.Long getDef() {
      return def;
    }

    public ListConcepto setDef(java.lang.Long def) {
      this.def = def;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListConcepto setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListConcepto setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListConcepto set(String parameterName, Object value) {
      return (ListConcepto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDeviceInfo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListDeviceInfo#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListDeviceInfo listDeviceInfo() throws java.io.IOException {
    ListDeviceInfo result = new ListDeviceInfo();
    initialize(result);
    return result;
  }

  public class ListDeviceInfo extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseDeviceInfo> {

    private static final String REST_PATH = "deviceinfo";

    /**
     * Create a request for the method "listDeviceInfo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListDeviceInfo#execute()} method to invoke the remote
     * operation. <p> {@link ListDeviceInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListDeviceInfo() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseDeviceInfo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDeviceInfo setAlt(java.lang.String alt) {
      return (ListDeviceInfo) super.setAlt(alt);
    }

    @Override
    public ListDeviceInfo setFields(java.lang.String fields) {
      return (ListDeviceInfo) super.setFields(fields);
    }

    @Override
    public ListDeviceInfo setKey(java.lang.String key) {
      return (ListDeviceInfo) super.setKey(key);
    }

    @Override
    public ListDeviceInfo setOauthToken(java.lang.String oauthToken) {
      return (ListDeviceInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDeviceInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDeviceInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDeviceInfo setQuotaUser(java.lang.String quotaUser) {
      return (ListDeviceInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDeviceInfo setUserIp(java.lang.String userIp) {
      return (ListDeviceInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListDeviceInfo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListDeviceInfo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListDeviceInfo set(String parameterName, Object value) {
      return (ListDeviceInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDirectivo_Proyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListDirectivoProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListDirectivoProyecto listDirectivoProyecto() throws java.io.IOException {
    ListDirectivoProyecto result = new ListDirectivoProyecto();
    initialize(result);
    return result;
  }

  public class ListDirectivoProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseDirectivoProyecto> {

    private static final String REST_PATH = "directivo_proyecto";

    /**
     * Create a request for the method "listDirectivo_Proyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListDirectivoProyecto#execute()} method to invoke the
     * remote operation. <p> {@link ListDirectivoProyecto#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListDirectivoProyecto() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseDirectivoProyecto.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDirectivoProyecto setAlt(java.lang.String alt) {
      return (ListDirectivoProyecto) super.setAlt(alt);
    }

    @Override
    public ListDirectivoProyecto setFields(java.lang.String fields) {
      return (ListDirectivoProyecto) super.setFields(fields);
    }

    @Override
    public ListDirectivoProyecto setKey(java.lang.String key) {
      return (ListDirectivoProyecto) super.setKey(key);
    }

    @Override
    public ListDirectivoProyecto setOauthToken(java.lang.String oauthToken) {
      return (ListDirectivoProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDirectivoProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDirectivoProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDirectivoProyecto setQuotaUser(java.lang.String quotaUser) {
      return (ListDirectivoProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDirectivoProyecto setUserIp(java.lang.String userIp) {
      return (ListDirectivoProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListDirectivoProyecto setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListDirectivoProyecto setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long directivo;

    /**

     */
    public java.lang.Long getDirectivo() {
      return directivo;
    }

    public ListDirectivoProyecto setDirectivo(java.lang.Long directivo) {
      this.directivo = directivo;
      return this;
    }

    @Override
    public ListDirectivoProyecto set(String parameterName, Object value) {
      return (ListDirectivoProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDirectorio".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListDirectorio#execute()} method to invoke the remote
   * operation.
   *
   * @param tipoReferencia
   * @param idReferencia
   * @return the request
   */
  public ListDirectorio listDirectorio(java.lang.Long tipoReferencia, java.lang.Long idReferencia) throws java.io.IOException {
    ListDirectorio result = new ListDirectorio(tipoReferencia, idReferencia);
    initialize(result);
    return result;
  }

  public class ListDirectorio extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseDirectorio> {

    private static final String REST_PATH = "directorio/{tipoReferencia}/{idReferencia}";

    /**
     * Create a request for the method "listDirectorio".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListDirectorio#execute()} method to invoke the remote
     * operation. <p> {@link ListDirectorio#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param tipoReferencia
     * @param idReferencia
     * @since 1.13
     */
    protected ListDirectorio(java.lang.Long tipoReferencia, java.lang.Long idReferencia) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseDirectorio.class);
      this.tipoReferencia = com.google.api.client.util.Preconditions.checkNotNull(tipoReferencia, "Required parameter tipoReferencia must be specified.");
      this.idReferencia = com.google.api.client.util.Preconditions.checkNotNull(idReferencia, "Required parameter idReferencia must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDirectorio setAlt(java.lang.String alt) {
      return (ListDirectorio) super.setAlt(alt);
    }

    @Override
    public ListDirectorio setFields(java.lang.String fields) {
      return (ListDirectorio) super.setFields(fields);
    }

    @Override
    public ListDirectorio setKey(java.lang.String key) {
      return (ListDirectorio) super.setKey(key);
    }

    @Override
    public ListDirectorio setOauthToken(java.lang.String oauthToken) {
      return (ListDirectorio) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDirectorio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDirectorio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDirectorio setQuotaUser(java.lang.String quotaUser) {
      return (ListDirectorio) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDirectorio setUserIp(java.lang.String userIp) {
      return (ListDirectorio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long tipoReferencia;

    /**

     */
    public java.lang.Long getTipoReferencia() {
      return tipoReferencia;
    }

    public ListDirectorio setTipoReferencia(java.lang.Long tipoReferencia) {
      this.tipoReferencia = tipoReferencia;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public ListDirectorio setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListDirectorio setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListDirectorio setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListDirectorio set(String parameterName, Object value) {
      return (ListDirectorio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listEmpresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListEmpresa listEmpresa() throws java.io.IOException {
    ListEmpresa result = new ListEmpresa();
    initialize(result);
    return result;
  }

  public class ListEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseEmpresa> {

    private static final String REST_PATH = "empresa";

    /**
     * Create a request for the method "listEmpresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListEmpresa#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListEmpresa#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListEmpresa() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseEmpresa.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListEmpresa setAlt(java.lang.String alt) {
      return (ListEmpresa) super.setAlt(alt);
    }

    @Override
    public ListEmpresa setFields(java.lang.String fields) {
      return (ListEmpresa) super.setFields(fields);
    }

    @Override
    public ListEmpresa setKey(java.lang.String key) {
      return (ListEmpresa) super.setKey(key);
    }

    @Override
    public ListEmpresa setOauthToken(java.lang.String oauthToken) {
      return (ListEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public ListEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (ListEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListEmpresa setUserIp(java.lang.String userIp) {
      return (ListEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListEmpresa setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListEmpresa setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListEmpresa set(String parameterName, Object value) {
      return (ListEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listEstimacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListEstimacion#execute()} method to invoke the remote
   * operation.
   *
   * @param idObra
   * @param email
   * @return the request
   */
  public ListEstimacion listEstimacion(java.lang.Long idObra, java.lang.String email) throws java.io.IOException {
    ListEstimacion result = new ListEstimacion(idObra, email);
    initialize(result);
    return result;
  }

  public class ListEstimacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseEstimacion> {

    private static final String REST_PATH = "estimacion/{idObra}/{email}";

    /**
     * Create a request for the method "listEstimacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListEstimacion#execute()} method to invoke the remote
     * operation. <p> {@link ListEstimacion#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param idObra
     * @param email
     * @since 1.13
     */
    protected ListEstimacion(java.lang.Long idObra, java.lang.String email) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseEstimacion.class);
      this.idObra = com.google.api.client.util.Preconditions.checkNotNull(idObra, "Required parameter idObra must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListEstimacion setAlt(java.lang.String alt) {
      return (ListEstimacion) super.setAlt(alt);
    }

    @Override
    public ListEstimacion setFields(java.lang.String fields) {
      return (ListEstimacion) super.setFields(fields);
    }

    @Override
    public ListEstimacion setKey(java.lang.String key) {
      return (ListEstimacion) super.setKey(key);
    }

    @Override
    public ListEstimacion setOauthToken(java.lang.String oauthToken) {
      return (ListEstimacion) super.setOauthToken(oauthToken);
    }

    @Override
    public ListEstimacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListEstimacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListEstimacion setQuotaUser(java.lang.String quotaUser) {
      return (ListEstimacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListEstimacion setUserIp(java.lang.String userIp) {
      return (ListEstimacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long idObra;

    /**

     */
    public java.lang.Long getIdObra() {
      return idObra;
    }

    public ListEstimacion setIdObra(java.lang.Long idObra) {
      this.idObra = idObra;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListEstimacion setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListEstimacion setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListEstimacion setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListEstimacion set(String parameterName, Object value) {
      return (ListEstimacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListMaquinaria listMaquinaria() throws java.io.IOException {
    ListMaquinaria result = new ListMaquinaria();
    initialize(result);
    return result;
  }

  public class ListMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseMaquinaria> {

    private static final String REST_PATH = "maquinaria";

    /**
     * Create a request for the method "listMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListMaquinaria#execute()} method to invoke the remote
     * operation. <p> {@link ListMaquinaria#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListMaquinaria() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseMaquinaria.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListMaquinaria setAlt(java.lang.String alt) {
      return (ListMaquinaria) super.setAlt(alt);
    }

    @Override
    public ListMaquinaria setFields(java.lang.String fields) {
      return (ListMaquinaria) super.setFields(fields);
    }

    @Override
    public ListMaquinaria setKey(java.lang.String key) {
      return (ListMaquinaria) super.setKey(key);
    }

    @Override
    public ListMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (ListMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public ListMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (ListMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListMaquinaria setUserIp(java.lang.String userIp) {
      return (ListMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListMaquinaria setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListMaquinaria setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListMaquinaria set(String parameterName, Object value) {
      return (ListMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listMessages".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListMessages#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListMessages listMessages() throws java.io.IOException {
    ListMessages result = new ListMessages();
    initialize(result);
    return result;
  }

  public class ListMessages extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseMessageData> {

    private static final String REST_PATH = "messagedata";

    /**
     * Create a request for the method "listMessages".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListMessages#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListMessages#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListMessages() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseMessageData.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListMessages setAlt(java.lang.String alt) {
      return (ListMessages) super.setAlt(alt);
    }

    @Override
    public ListMessages setFields(java.lang.String fields) {
      return (ListMessages) super.setFields(fields);
    }

    @Override
    public ListMessages setKey(java.lang.String key) {
      return (ListMessages) super.setKey(key);
    }

    @Override
    public ListMessages setOauthToken(java.lang.String oauthToken) {
      return (ListMessages) super.setOauthToken(oauthToken);
    }

    @Override
    public ListMessages setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListMessages) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListMessages setQuotaUser(java.lang.String quotaUser) {
      return (ListMessages) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListMessages setUserIp(java.lang.String userIp) {
      return (ListMessages) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListMessages setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListMessages setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListMessages set(String parameterName, Object value) {
      return (ListMessages) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listMultimedia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListMultimedia#execute()} method to invoke the remote
   * operation.
   *
   * @param tipoReferencia
   * @param idReferencia
   * @param tipoArchivo
   * @return the request
   */
  public ListMultimedia listMultimedia(java.lang.Long tipoReferencia, java.lang.Long idReferencia, java.lang.Long tipoArchivo) throws java.io.IOException {
    ListMultimedia result = new ListMultimedia(tipoReferencia, idReferencia, tipoArchivo);
    initialize(result);
    return result;
  }

  public class ListMultimedia extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseMultimedia> {

    private static final String REST_PATH = "multimedia/{tipoReferencia}/{idReferencia}/{tipoArchivo}";

    /**
     * Create a request for the method "listMultimedia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListMultimedia#execute()} method to invoke the remote
     * operation. <p> {@link ListMultimedia#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param tipoReferencia
     * @param idReferencia
     * @param tipoArchivo
     * @since 1.13
     */
    protected ListMultimedia(java.lang.Long tipoReferencia, java.lang.Long idReferencia, java.lang.Long tipoArchivo) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseMultimedia.class);
      this.tipoReferencia = com.google.api.client.util.Preconditions.checkNotNull(tipoReferencia, "Required parameter tipoReferencia must be specified.");
      this.idReferencia = com.google.api.client.util.Preconditions.checkNotNull(idReferencia, "Required parameter idReferencia must be specified.");
      this.tipoArchivo = com.google.api.client.util.Preconditions.checkNotNull(tipoArchivo, "Required parameter tipoArchivo must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListMultimedia setAlt(java.lang.String alt) {
      return (ListMultimedia) super.setAlt(alt);
    }

    @Override
    public ListMultimedia setFields(java.lang.String fields) {
      return (ListMultimedia) super.setFields(fields);
    }

    @Override
    public ListMultimedia setKey(java.lang.String key) {
      return (ListMultimedia) super.setKey(key);
    }

    @Override
    public ListMultimedia setOauthToken(java.lang.String oauthToken) {
      return (ListMultimedia) super.setOauthToken(oauthToken);
    }

    @Override
    public ListMultimedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListMultimedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListMultimedia setQuotaUser(java.lang.String quotaUser) {
      return (ListMultimedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListMultimedia setUserIp(java.lang.String userIp) {
      return (ListMultimedia) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long tipoReferencia;

    /**

     */
    public java.lang.Long getTipoReferencia() {
      return tipoReferencia;
    }

    public ListMultimedia setTipoReferencia(java.lang.Long tipoReferencia) {
      this.tipoReferencia = tipoReferencia;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long idReferencia;

    /**

     */
    public java.lang.Long getIdReferencia() {
      return idReferencia;
    }

    public ListMultimedia setIdReferencia(java.lang.Long idReferencia) {
      this.idReferencia = idReferencia;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long tipoArchivo;

    /**

     */
    public java.lang.Long getTipoArchivo() {
      return tipoArchivo;
    }

    public ListMultimedia setTipoArchivo(java.lang.Long tipoArchivo) {
      this.tipoArchivo = tipoArchivo;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListMultimedia setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListMultimedia setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListMultimedia set(String parameterName, Object value) {
      return (ListMultimedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listNotas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListNotas#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param def
   * @return the request
   */
  public ListNotas listNotas(java.lang.String email, java.lang.Long def) throws java.io.IOException {
    ListNotas result = new ListNotas(email, def);
    initialize(result);
    return result;
  }

  public class ListNotas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseNotas> {

    private static final String REST_PATH = "notas/{email}/{def}";

    /**
     * Create a request for the method "listNotas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListNotas#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListNotas#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param def
     * @since 1.13
     */
    protected ListNotas(java.lang.String email, java.lang.Long def) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseNotas.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.def = com.google.api.client.util.Preconditions.checkNotNull(def, "Required parameter def must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListNotas setAlt(java.lang.String alt) {
      return (ListNotas) super.setAlt(alt);
    }

    @Override
    public ListNotas setFields(java.lang.String fields) {
      return (ListNotas) super.setFields(fields);
    }

    @Override
    public ListNotas setKey(java.lang.String key) {
      return (ListNotas) super.setKey(key);
    }

    @Override
    public ListNotas setOauthToken(java.lang.String oauthToken) {
      return (ListNotas) super.setOauthToken(oauthToken);
    }

    @Override
    public ListNotas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListNotas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListNotas setQuotaUser(java.lang.String quotaUser) {
      return (ListNotas) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListNotas setUserIp(java.lang.String userIp) {
      return (ListNotas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListNotas setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long def;

    /**

     */
    public java.lang.Long getDef() {
      return def;
    }

    public ListNotas setDef(java.lang.Long def) {
      this.def = def;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListNotas setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListNotas setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListNotas set(String parameterName, Object value) {
      return (ListNotas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listObra".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListObra#execute()} method to invoke the remote operation.
   *
   * @param idProyecto
   * @param idObra
   * @param email
   * @return the request
   */
  public ListObra listObra(java.lang.Long idProyecto, java.lang.Long idObra, java.lang.String email) throws java.io.IOException {
    ListObra result = new ListObra(idProyecto, idObra, email);
    initialize(result);
    return result;
  }

  public class ListObra extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseObra> {

    private static final String REST_PATH = "obra/{idProyecto}/{idObra}/{email}";

    /**
     * Create a request for the method "listObra".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListObra#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListObra#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param idProyecto
     * @param idObra
     * @param email
     * @since 1.13
     */
    protected ListObra(java.lang.Long idProyecto, java.lang.Long idObra, java.lang.String email) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseObra.class);
      this.idProyecto = com.google.api.client.util.Preconditions.checkNotNull(idProyecto, "Required parameter idProyecto must be specified.");
      this.idObra = com.google.api.client.util.Preconditions.checkNotNull(idObra, "Required parameter idObra must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListObra setAlt(java.lang.String alt) {
      return (ListObra) super.setAlt(alt);
    }

    @Override
    public ListObra setFields(java.lang.String fields) {
      return (ListObra) super.setFields(fields);
    }

    @Override
    public ListObra setKey(java.lang.String key) {
      return (ListObra) super.setKey(key);
    }

    @Override
    public ListObra setOauthToken(java.lang.String oauthToken) {
      return (ListObra) super.setOauthToken(oauthToken);
    }

    @Override
    public ListObra setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListObra) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListObra setQuotaUser(java.lang.String quotaUser) {
      return (ListObra) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListObra setUserIp(java.lang.String userIp) {
      return (ListObra) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long idProyecto;

    /**

     */
    public java.lang.Long getIdProyecto() {
      return idProyecto;
    }

    public ListObra setIdProyecto(java.lang.Long idProyecto) {
      this.idProyecto = idProyecto;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long idObra;

    /**

     */
    public java.lang.Long getIdObra() {
      return idObra;
    }

    public ListObra setIdObra(java.lang.Long idObra) {
      this.idObra = idObra;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListObra setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListObra setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListObra setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListObra set(String parameterName, Object value) {
      return (ListObra) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listOrg_Goubernamental".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListOrgGoubernamental#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListOrgGoubernamental listOrgGoubernamental() throws java.io.IOException {
    ListOrgGoubernamental result = new ListOrgGoubernamental();
    initialize(result);
    return result;
  }

  public class ListOrgGoubernamental extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseOrgGoubernamental> {

    private static final String REST_PATH = "org_goubernamental";

    /**
     * Create a request for the method "listOrg_Goubernamental".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListOrgGoubernamental#execute()} method to invoke the
     * remote operation. <p> {@link ListOrgGoubernamental#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListOrgGoubernamental() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseOrgGoubernamental.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListOrgGoubernamental setAlt(java.lang.String alt) {
      return (ListOrgGoubernamental) super.setAlt(alt);
    }

    @Override
    public ListOrgGoubernamental setFields(java.lang.String fields) {
      return (ListOrgGoubernamental) super.setFields(fields);
    }

    @Override
    public ListOrgGoubernamental setKey(java.lang.String key) {
      return (ListOrgGoubernamental) super.setKey(key);
    }

    @Override
    public ListOrgGoubernamental setOauthToken(java.lang.String oauthToken) {
      return (ListOrgGoubernamental) super.setOauthToken(oauthToken);
    }

    @Override
    public ListOrgGoubernamental setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListOrgGoubernamental) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListOrgGoubernamental setQuotaUser(java.lang.String quotaUser) {
      return (ListOrgGoubernamental) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListOrgGoubernamental setUserIp(java.lang.String userIp) {
      return (ListOrgGoubernamental) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListOrgGoubernamental setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListOrgGoubernamental setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListOrgGoubernamental set(String parameterName, Object value) {
      return (ListOrgGoubernamental) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPersona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListPersona#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListPersona listPersona() throws java.io.IOException {
    ListPersona result = new ListPersona();
    initialize(result);
    return result;
  }

  public class ListPersona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponsePersona> {

    private static final String REST_PATH = "persona";

    /**
     * Create a request for the method "listPersona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListPersona#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPersona#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPersona() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponsePersona.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPersona setAlt(java.lang.String alt) {
      return (ListPersona) super.setAlt(alt);
    }

    @Override
    public ListPersona setFields(java.lang.String fields) {
      return (ListPersona) super.setFields(fields);
    }

    @Override
    public ListPersona setKey(java.lang.String key) {
      return (ListPersona) super.setKey(key);
    }

    @Override
    public ListPersona setOauthToken(java.lang.String oauthToken) {
      return (ListPersona) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPersona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPersona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPersona setQuotaUser(java.lang.String quotaUser) {
      return (ListPersona) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPersona setUserIp(java.lang.String userIp) {
      return (ListPersona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPersona setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPersona setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPersona set(String parameterName, Object value) {
      return (ListPersona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPrograma".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListPrograma#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListPrograma listPrograma() throws java.io.IOException {
    ListPrograma result = new ListPrograma();
    initialize(result);
    return result;
  }

  public class ListPrograma extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponsePrograma> {

    private static final String REST_PATH = "programa";

    /**
     * Create a request for the method "listPrograma".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListPrograma#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPrograma#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPrograma() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponsePrograma.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPrograma setAlt(java.lang.String alt) {
      return (ListPrograma) super.setAlt(alt);
    }

    @Override
    public ListPrograma setFields(java.lang.String fields) {
      return (ListPrograma) super.setFields(fields);
    }

    @Override
    public ListPrograma setKey(java.lang.String key) {
      return (ListPrograma) super.setKey(key);
    }

    @Override
    public ListPrograma setOauthToken(java.lang.String oauthToken) {
      return (ListPrograma) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPrograma setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPrograma) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPrograma setQuotaUser(java.lang.String quotaUser) {
      return (ListPrograma) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPrograma setUserIp(java.lang.String userIp) {
      return (ListPrograma) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPrograma setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPrograma setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPrograma set(String parameterName, Object value) {
      return (ListPrograma) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listProyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListProyecto listProyecto() throws java.io.IOException {
    ListProyecto result = new ListProyecto();
    initialize(result);
    return result;
  }

  public class ListProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseProyecto> {

    private static final String REST_PATH = "proyecto";

    /**
     * Create a request for the method "listProyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListProyecto#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListProyecto#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListProyecto() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseProyecto.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListProyecto setAlt(java.lang.String alt) {
      return (ListProyecto) super.setAlt(alt);
    }

    @Override
    public ListProyecto setFields(java.lang.String fields) {
      return (ListProyecto) super.setFields(fields);
    }

    @Override
    public ListProyecto setKey(java.lang.String key) {
      return (ListProyecto) super.setKey(key);
    }

    @Override
    public ListProyecto setOauthToken(java.lang.String oauthToken) {
      return (ListProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public ListProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListProyecto setQuotaUser(java.lang.String quotaUser) {
      return (ListProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListProyecto setUserIp(java.lang.String userIp) {
      return (ListProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListProyecto setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListProyecto setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListProyecto set(String parameterName, Object value) {
      return (ListProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listProyectoDelDirectivo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListProyectoDelDirectivo#execute()} method to invoke the
   * remote operation.
   *
   * @param directivo
   * @return the request
   */
  public ListProyectoDelDirectivo listProyectoDelDirectivo(java.lang.Long directivo) throws java.io.IOException {
    ListProyectoDelDirectivo result = new ListProyectoDelDirectivo(directivo);
    initialize(result);
    return result;
  }

  public class ListProyectoDelDirectivo extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseProyectoDelDirectivo> {

    private static final String REST_PATH = "proyectodeldirectivo/{directivo}";

    /**
     * Create a request for the method "listProyectoDelDirectivo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListProyectoDelDirectivo#execute()} method to invoke
     * the remote operation. <p> {@link ListProyectoDelDirectivo#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param directivo
     * @since 1.13
     */
    protected ListProyectoDelDirectivo(java.lang.Long directivo) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseProyectoDelDirectivo.class);
      this.directivo = com.google.api.client.util.Preconditions.checkNotNull(directivo, "Required parameter directivo must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListProyectoDelDirectivo setAlt(java.lang.String alt) {
      return (ListProyectoDelDirectivo) super.setAlt(alt);
    }

    @Override
    public ListProyectoDelDirectivo setFields(java.lang.String fields) {
      return (ListProyectoDelDirectivo) super.setFields(fields);
    }

    @Override
    public ListProyectoDelDirectivo setKey(java.lang.String key) {
      return (ListProyectoDelDirectivo) super.setKey(key);
    }

    @Override
    public ListProyectoDelDirectivo setOauthToken(java.lang.String oauthToken) {
      return (ListProyectoDelDirectivo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListProyectoDelDirectivo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListProyectoDelDirectivo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListProyectoDelDirectivo setQuotaUser(java.lang.String quotaUser) {
      return (ListProyectoDelDirectivo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListProyectoDelDirectivo setUserIp(java.lang.String userIp) {
      return (ListProyectoDelDirectivo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long directivo;

    /**

     */
    public java.lang.Long getDirectivo() {
      return directivo;
    }

    public ListProyectoDelDirectivo setDirectivo(java.lang.Long directivo) {
      this.directivo = directivo;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListProyectoDelDirectivo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListProyectoDelDirectivo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListProyectoDelDirectivo set(String parameterName, Object value) {
      return (ListProyectoDelDirectivo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPush".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListPush#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListPush listPush() throws java.io.IOException {
    ListPush result = new ListPush();
    initialize(result);
    return result;
  }

  public class ListPush extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponsePush> {

    private static final String REST_PATH = "push";

    /**
     * Create a request for the method "listPush".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListPush#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPush#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPush() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponsePush.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPush setAlt(java.lang.String alt) {
      return (ListPush) super.setAlt(alt);
    }

    @Override
    public ListPush setFields(java.lang.String fields) {
      return (ListPush) super.setFields(fields);
    }

    @Override
    public ListPush setKey(java.lang.String key) {
      return (ListPush) super.setKey(key);
    }

    @Override
    public ListPush setOauthToken(java.lang.String oauthToken) {
      return (ListPush) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPush setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPush) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPush setQuotaUser(java.lang.String quotaUser) {
      return (ListPush) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPush setUserIp(java.lang.String userIp) {
      return (ListPush) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListPush setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListPush setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListPush set(String parameterName, Object value) {
      return (ListPush) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRef_calendarizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListRefCalendarizacion#execute()} method to invoke the
   * remote operation.
   *
   * @return the request
   */
  public ListRefCalendarizacion listRefCalendarizacion() throws java.io.IOException {
    ListRefCalendarizacion result = new ListRefCalendarizacion();
    initialize(result);
    return result;
  }

  public class ListRefCalendarizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseRefCalendarizacion> {

    private static final String REST_PATH = "ref_calendarizacion";

    /**
     * Create a request for the method "listRef_calendarizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListRefCalendarizacion#execute()} method to invoke the
     * remote operation. <p> {@link ListRefCalendarizacion#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListRefCalendarizacion() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseRefCalendarizacion.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRefCalendarizacion setAlt(java.lang.String alt) {
      return (ListRefCalendarizacion) super.setAlt(alt);
    }

    @Override
    public ListRefCalendarizacion setFields(java.lang.String fields) {
      return (ListRefCalendarizacion) super.setFields(fields);
    }

    @Override
    public ListRefCalendarizacion setKey(java.lang.String key) {
      return (ListRefCalendarizacion) super.setKey(key);
    }

    @Override
    public ListRefCalendarizacion setOauthToken(java.lang.String oauthToken) {
      return (ListRefCalendarizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRefCalendarizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRefCalendarizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRefCalendarizacion setQuotaUser(java.lang.String quotaUser) {
      return (ListRefCalendarizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRefCalendarizacion setUserIp(java.lang.String userIp) {
      return (ListRefCalendarizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRefCalendarizacion setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRefCalendarizacion setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRefCalendarizacion set(String parameterName, Object value) {
      return (ListRefCalendarizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRepMaquinariaCatMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListRepMaquinariaCatMaquinaria#execute()} method to invoke
   * the remote operation.
   *
   * @param idReporteDiario
   * @param email
   * @return the request
   */
  public ListRepMaquinariaCatMaquinaria listRepMaquinariaCatMaquinaria(java.lang.Long idReporteDiario, java.lang.String email) throws java.io.IOException {
    ListRepMaquinariaCatMaquinaria result = new ListRepMaquinariaCatMaquinaria(idReporteDiario, email);
    initialize(result);
    return result;
  }

  public class ListRepMaquinariaCatMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseRepMaquinariaCatMaquinaria> {

    private static final String REST_PATH = "repmaquinariacatmaquinaria/{idReporteDiario}/{email}";

    /**
     * Create a request for the method "listRepMaquinariaCatMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListRepMaquinariaCatMaquinaria#execute()} method to
     * invoke the remote operation. <p> {@link ListRepMaquinariaCatMaquinaria#initialize(com.google.ap
     * i.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param idReporteDiario
     * @param email
     * @since 1.13
     */
    protected ListRepMaquinariaCatMaquinaria(java.lang.Long idReporteDiario, java.lang.String email) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseRepMaquinariaCatMaquinaria.class);
      this.idReporteDiario = com.google.api.client.util.Preconditions.checkNotNull(idReporteDiario, "Required parameter idReporteDiario must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setAlt(java.lang.String alt) {
      return (ListRepMaquinariaCatMaquinaria) super.setAlt(alt);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setFields(java.lang.String fields) {
      return (ListRepMaquinariaCatMaquinaria) super.setFields(fields);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setKey(java.lang.String key) {
      return (ListRepMaquinariaCatMaquinaria) super.setKey(key);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (ListRepMaquinariaCatMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRepMaquinariaCatMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (ListRepMaquinariaCatMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRepMaquinariaCatMaquinaria setUserIp(java.lang.String userIp) {
      return (ListRepMaquinariaCatMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long idReporteDiario;

    /**

     */
    public java.lang.Long getIdReporteDiario() {
      return idReporteDiario;
    }

    public ListRepMaquinariaCatMaquinaria setIdReporteDiario(java.lang.Long idReporteDiario) {
      this.idReporteDiario = idReporteDiario;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListRepMaquinariaCatMaquinaria setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRepMaquinariaCatMaquinaria setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRepMaquinariaCatMaquinaria setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRepMaquinariaCatMaquinaria set(String parameterName, Object value) {
      return (ListRepMaquinariaCatMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRepoPersonalCatPersonal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListRepoPersonalCatPersonal#execute()} method to invoke the
   * remote operation.
   *
   * @param email
   * @param def
   * @return the request
   */
  public ListRepoPersonalCatPersonal listRepoPersonalCatPersonal(java.lang.String email, java.lang.Long def) throws java.io.IOException {
    ListRepoPersonalCatPersonal result = new ListRepoPersonalCatPersonal(email, def);
    initialize(result);
    return result;
  }

  public class ListRepoPersonalCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseRepoPersonalCatPersonal> {

    private static final String REST_PATH = "repopersonalcatpersonal/{email}/{def}";

    /**
     * Create a request for the method "listRepoPersonalCatPersonal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListRepoPersonalCatPersonal#execute()} method to
     * invoke the remote operation. <p> {@link ListRepoPersonalCatPersonal#initialize(com.google.api.c
     * lient.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param def
     * @since 1.13
     */
    protected ListRepoPersonalCatPersonal(java.lang.String email, java.lang.Long def) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseRepoPersonalCatPersonal.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.def = com.google.api.client.util.Preconditions.checkNotNull(def, "Required parameter def must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRepoPersonalCatPersonal setAlt(java.lang.String alt) {
      return (ListRepoPersonalCatPersonal) super.setAlt(alt);
    }

    @Override
    public ListRepoPersonalCatPersonal setFields(java.lang.String fields) {
      return (ListRepoPersonalCatPersonal) super.setFields(fields);
    }

    @Override
    public ListRepoPersonalCatPersonal setKey(java.lang.String key) {
      return (ListRepoPersonalCatPersonal) super.setKey(key);
    }

    @Override
    public ListRepoPersonalCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (ListRepoPersonalCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRepoPersonalCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRepoPersonalCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRepoPersonalCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (ListRepoPersonalCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRepoPersonalCatPersonal setUserIp(java.lang.String userIp) {
      return (ListRepoPersonalCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListRepoPersonalCatPersonal setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long def;

    /**

     */
    public java.lang.Long getDef() {
      return def;
    }

    public ListRepoPersonalCatPersonal setDef(java.lang.Long def) {
      this.def = def;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRepoPersonalCatPersonal setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRepoPersonalCatPersonal setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRepoPersonalCatPersonal set(String parameterName, Object value) {
      return (ListRepoPersonalCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listReporteDiario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListReporteDiario#execute()} method to invoke the remote
   * operation.
   *
   * @param idObra
   * @param email
   * @return the request
   */
  public ListReporteDiario listReporteDiario(java.lang.Long idObra, java.lang.String email) throws java.io.IOException {
    ListReporteDiario result = new ListReporteDiario(idObra, email);
    initialize(result);
    return result;
  }

  public class ListReporteDiario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseReporteDiario> {

    private static final String REST_PATH = "reportediario/{idObra}/{email}";

    /**
     * Create a request for the method "listReporteDiario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListReporteDiario#execute()} method to invoke the
     * remote operation. <p> {@link ListReporteDiario#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param idObra
     * @param email
     * @since 1.13
     */
    protected ListReporteDiario(java.lang.Long idObra, java.lang.String email) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseReporteDiario.class);
      this.idObra = com.google.api.client.util.Preconditions.checkNotNull(idObra, "Required parameter idObra must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListReporteDiario setAlt(java.lang.String alt) {
      return (ListReporteDiario) super.setAlt(alt);
    }

    @Override
    public ListReporteDiario setFields(java.lang.String fields) {
      return (ListReporteDiario) super.setFields(fields);
    }

    @Override
    public ListReporteDiario setKey(java.lang.String key) {
      return (ListReporteDiario) super.setKey(key);
    }

    @Override
    public ListReporteDiario setOauthToken(java.lang.String oauthToken) {
      return (ListReporteDiario) super.setOauthToken(oauthToken);
    }

    @Override
    public ListReporteDiario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListReporteDiario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListReporteDiario setQuotaUser(java.lang.String quotaUser) {
      return (ListReporteDiario) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListReporteDiario setUserIp(java.lang.String userIp) {
      return (ListReporteDiario) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long idObra;

    /**

     */
    public java.lang.Long getIdObra() {
      return idObra;
    }

    public ListReporteDiario setIdObra(java.lang.Long idObra) {
      this.idObra = idObra;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ListReporteDiario setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListReporteDiario setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListReporteDiario setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListReporteDiario set(String parameterName, Object value) {
      return (ListReporteDiario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listReportsmodel".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListReportsmodel#execute()} method to invoke the remote
   * operation.
   *
   * @param idProyecto
   * @param idObra
   * @return the request
   */
  public ListReportsmodel listReportsmodel(java.lang.Long idProyecto, java.lang.Long idObra) throws java.io.IOException {
    ListReportsmodel result = new ListReportsmodel(idProyecto, idObra);
    initialize(result);
    return result;
  }

  public class ListReportsmodel extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseReportsmodel> {

    private static final String REST_PATH = "reportsmodel/{idProyecto}/{idObra}";

    /**
     * Create a request for the method "listReportsmodel".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListReportsmodel#execute()} method to invoke the
     * remote operation. <p> {@link ListReportsmodel#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param idProyecto
     * @param idObra
     * @since 1.13
     */
    protected ListReportsmodel(java.lang.Long idProyecto, java.lang.Long idObra) {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseReportsmodel.class);
      this.idProyecto = com.google.api.client.util.Preconditions.checkNotNull(idProyecto, "Required parameter idProyecto must be specified.");
      this.idObra = com.google.api.client.util.Preconditions.checkNotNull(idObra, "Required parameter idObra must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListReportsmodel setAlt(java.lang.String alt) {
      return (ListReportsmodel) super.setAlt(alt);
    }

    @Override
    public ListReportsmodel setFields(java.lang.String fields) {
      return (ListReportsmodel) super.setFields(fields);
    }

    @Override
    public ListReportsmodel setKey(java.lang.String key) {
      return (ListReportsmodel) super.setKey(key);
    }

    @Override
    public ListReportsmodel setOauthToken(java.lang.String oauthToken) {
      return (ListReportsmodel) super.setOauthToken(oauthToken);
    }

    @Override
    public ListReportsmodel setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListReportsmodel) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListReportsmodel setQuotaUser(java.lang.String quotaUser) {
      return (ListReportsmodel) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListReportsmodel setUserIp(java.lang.String userIp) {
      return (ListReportsmodel) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long idProyecto;

    /**

     */
    public java.lang.Long getIdProyecto() {
      return idProyecto;
    }

    public ListReportsmodel setIdProyecto(java.lang.Long idProyecto) {
      this.idProyecto = idProyecto;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long idObra;

    /**

     */
    public java.lang.Long getIdObra() {
      return idObra;
    }

    public ListReportsmodel setIdObra(java.lang.Long idObra) {
      this.idObra = idObra;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListReportsmodel setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListReportsmodel setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListReportsmodel set(String parameterName, Object value) {
      return (ListReportsmodel) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listSincronizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListSincronizacion#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListSincronizacion listSincronizacion() throws java.io.IOException {
    ListSincronizacion result = new ListSincronizacion();
    initialize(result);
    return result;
  }

  public class ListSincronizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseSincronizacion> {

    private static final String REST_PATH = "sincronizacion";

    /**
     * Create a request for the method "listSincronizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListSincronizacion#execute()} method to invoke the
     * remote operation. <p> {@link ListSincronizacion#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListSincronizacion() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseSincronizacion.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListSincronizacion setAlt(java.lang.String alt) {
      return (ListSincronizacion) super.setAlt(alt);
    }

    @Override
    public ListSincronizacion setFields(java.lang.String fields) {
      return (ListSincronizacion) super.setFields(fields);
    }

    @Override
    public ListSincronizacion setKey(java.lang.String key) {
      return (ListSincronizacion) super.setKey(key);
    }

    @Override
    public ListSincronizacion setOauthToken(java.lang.String oauthToken) {
      return (ListSincronizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public ListSincronizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListSincronizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListSincronizacion setQuotaUser(java.lang.String quotaUser) {
      return (ListSincronizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListSincronizacion setUserIp(java.lang.String userIp) {
      return (ListSincronizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListSincronizacion setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListSincronizacion setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListSincronizacion set(String parameterName, Object value) {
      return (ListSincronizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUbicaciones".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListUbicaciones#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListUbicaciones listUbicaciones() throws java.io.IOException {
    ListUbicaciones result = new ListUbicaciones();
    initialize(result);
    return result;
  }

  public class ListUbicaciones extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseUbicaciones> {

    private static final String REST_PATH = "ubicaciones";

    /**
     * Create a request for the method "listUbicaciones".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListUbicaciones#execute()} method to invoke the remote
     * operation. <p> {@link ListUbicaciones#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUbicaciones() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseUbicaciones.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUbicaciones setAlt(java.lang.String alt) {
      return (ListUbicaciones) super.setAlt(alt);
    }

    @Override
    public ListUbicaciones setFields(java.lang.String fields) {
      return (ListUbicaciones) super.setFields(fields);
    }

    @Override
    public ListUbicaciones setKey(java.lang.String key) {
      return (ListUbicaciones) super.setKey(key);
    }

    @Override
    public ListUbicaciones setOauthToken(java.lang.String oauthToken) {
      return (ListUbicaciones) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUbicaciones setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUbicaciones) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUbicaciones setQuotaUser(java.lang.String quotaUser) {
      return (ListUbicaciones) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUbicaciones setUserIp(java.lang.String userIp) {
      return (ListUbicaciones) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUbicaciones setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUbicaciones setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUbicaciones set(String parameterName, Object value) {
      return (ListUbicaciones) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUsuario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListUsuario#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListUsuario listUsuario() throws java.io.IOException {
    ListUsuario result = new ListUsuario();
    initialize(result);
    return result;
  }

  public class ListUsuario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseUsuario> {

    private static final String REST_PATH = "usuario";

    /**
     * Create a request for the method "listUsuario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListUsuario#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListUsuario#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUsuario() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseUsuario.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUsuario setAlt(java.lang.String alt) {
      return (ListUsuario) super.setAlt(alt);
    }

    @Override
    public ListUsuario setFields(java.lang.String fields) {
      return (ListUsuario) super.setFields(fields);
    }

    @Override
    public ListUsuario setKey(java.lang.String key) {
      return (ListUsuario) super.setKey(key);
    }

    @Override
    public ListUsuario setOauthToken(java.lang.String oauthToken) {
      return (ListUsuario) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUsuario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUsuario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUsuario setQuotaUser(java.lang.String quotaUser) {
      return (ListUsuario) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUsuario setUserIp(java.lang.String userIp) {
      return (ListUsuario) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUsuario setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUsuario setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUsuario set(String parameterName, Object value) {
      return (ListUsuario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listXmpp".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link ListXmpp#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListXmpp listXmpp() throws java.io.IOException {
    ListXmpp result = new ListXmpp();
    initialize(result);
    return result;
  }

  public class ListXmpp extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CollectionResponseXmpp> {

    private static final String REST_PATH = "xmpp";

    /**
     * Create a request for the method "listXmpp".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link ListXmpp#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListXmpp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListXmpp() {
      super(Communicationchannel.this, "GET", REST_PATH, null, com.csgit.cao.model.communicationchannel.model.CollectionResponseXmpp.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListXmpp setAlt(java.lang.String alt) {
      return (ListXmpp) super.setAlt(alt);
    }

    @Override
    public ListXmpp setFields(java.lang.String fields) {
      return (ListXmpp) super.setFields(fields);
    }

    @Override
    public ListXmpp setKey(java.lang.String key) {
      return (ListXmpp) super.setKey(key);
    }

    @Override
    public ListXmpp setOauthToken(java.lang.String oauthToken) {
      return (ListXmpp) super.setOauthToken(oauthToken);
    }

    @Override
    public ListXmpp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListXmpp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListXmpp setQuotaUser(java.lang.String quotaUser) {
      return (ListXmpp) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListXmpp setUserIp(java.lang.String userIp) {
      return (ListXmpp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListXmpp setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListXmpp setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListXmpp set(String parameterName, Object value) {
      return (ListXmpp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeAditivas_Deductivas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveAditivasDeductivas#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveAditivasDeductivas removeAditivasDeductivas(java.lang.Long id) throws java.io.IOException {
    RemoveAditivasDeductivas result = new RemoveAditivasDeductivas(id);
    initialize(result);
    return result;
  }

  public class RemoveAditivasDeductivas extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "aditivas_deductivas/{id}";

    /**
     * Create a request for the method "removeAditivas_Deductivas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveAditivasDeductivas#execute()} method to invoke
     * the remote operation. <p> {@link RemoveAditivasDeductivas#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveAditivasDeductivas(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveAditivasDeductivas setAlt(java.lang.String alt) {
      return (RemoveAditivasDeductivas) super.setAlt(alt);
    }

    @Override
    public RemoveAditivasDeductivas setFields(java.lang.String fields) {
      return (RemoveAditivasDeductivas) super.setFields(fields);
    }

    @Override
    public RemoveAditivasDeductivas setKey(java.lang.String key) {
      return (RemoveAditivasDeductivas) super.setKey(key);
    }

    @Override
    public RemoveAditivasDeductivas setOauthToken(java.lang.String oauthToken) {
      return (RemoveAditivasDeductivas) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveAditivasDeductivas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveAditivasDeductivas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveAditivasDeductivas setQuotaUser(java.lang.String quotaUser) {
      return (RemoveAditivasDeductivas) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveAditivasDeductivas setUserIp(java.lang.String userIp) {
      return (RemoveAditivasDeductivas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveAditivasDeductivas setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveAditivasDeductivas set(String parameterName, Object value) {
      return (RemoveAditivasDeductivas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeAvance_Financiero".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveAvanceFinanciero#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveAvanceFinanciero removeAvanceFinanciero(java.lang.Long id) throws java.io.IOException {
    RemoveAvanceFinanciero result = new RemoveAvanceFinanciero(id);
    initialize(result);
    return result;
  }

  public class RemoveAvanceFinanciero extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "avance_financiero/{id}";

    /**
     * Create a request for the method "removeAvance_Financiero".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveAvanceFinanciero#execute()} method to invoke the
     * remote operation. <p> {@link RemoveAvanceFinanciero#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveAvanceFinanciero(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveAvanceFinanciero setAlt(java.lang.String alt) {
      return (RemoveAvanceFinanciero) super.setAlt(alt);
    }

    @Override
    public RemoveAvanceFinanciero setFields(java.lang.String fields) {
      return (RemoveAvanceFinanciero) super.setFields(fields);
    }

    @Override
    public RemoveAvanceFinanciero setKey(java.lang.String key) {
      return (RemoveAvanceFinanciero) super.setKey(key);
    }

    @Override
    public RemoveAvanceFinanciero setOauthToken(java.lang.String oauthToken) {
      return (RemoveAvanceFinanciero) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveAvanceFinanciero setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveAvanceFinanciero) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveAvanceFinanciero setQuotaUser(java.lang.String quotaUser) {
      return (RemoveAvanceFinanciero) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveAvanceFinanciero setUserIp(java.lang.String userIp) {
      return (RemoveAvanceFinanciero) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveAvanceFinanciero setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveAvanceFinanciero set(String parameterName, Object value) {
      return (RemoveAvanceFinanciero) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeAvance_Fisico".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveAvanceFisico#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveAvanceFisico removeAvanceFisico(java.lang.Long id) throws java.io.IOException {
    RemoveAvanceFisico result = new RemoveAvanceFisico(id);
    initialize(result);
    return result;
  }

  public class RemoveAvanceFisico extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "avance_fisico/{id}";

    /**
     * Create a request for the method "removeAvance_Fisico".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveAvanceFisico#execute()} method to invoke the
     * remote operation. <p> {@link RemoveAvanceFisico#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveAvanceFisico(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveAvanceFisico setAlt(java.lang.String alt) {
      return (RemoveAvanceFisico) super.setAlt(alt);
    }

    @Override
    public RemoveAvanceFisico setFields(java.lang.String fields) {
      return (RemoveAvanceFisico) super.setFields(fields);
    }

    @Override
    public RemoveAvanceFisico setKey(java.lang.String key) {
      return (RemoveAvanceFisico) super.setKey(key);
    }

    @Override
    public RemoveAvanceFisico setOauthToken(java.lang.String oauthToken) {
      return (RemoveAvanceFisico) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveAvanceFisico setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveAvanceFisico) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveAvanceFisico setQuotaUser(java.lang.String quotaUser) {
      return (RemoveAvanceFisico) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveAvanceFisico setUserIp(java.lang.String userIp) {
      return (RemoveAvanceFisico) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveAvanceFisico setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveAvanceFisico set(String parameterName, Object value) {
      return (RemoveAvanceFisico) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCat_Contactos".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveCatContactos#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveCatContactos removeCatContactos(java.lang.Long id) throws java.io.IOException {
    RemoveCatContactos result = new RemoveCatContactos(id);
    initialize(result);
    return result;
  }

  public class RemoveCatContactos extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "cat_contactos/{id}";

    /**
     * Create a request for the method "removeCat_Contactos".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveCatContactos#execute()} method to invoke the
     * remote operation. <p> {@link RemoveCatContactos#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveCatContactos(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveCatContactos setAlt(java.lang.String alt) {
      return (RemoveCatContactos) super.setAlt(alt);
    }

    @Override
    public RemoveCatContactos setFields(java.lang.String fields) {
      return (RemoveCatContactos) super.setFields(fields);
    }

    @Override
    public RemoveCatContactos setKey(java.lang.String key) {
      return (RemoveCatContactos) super.setKey(key);
    }

    @Override
    public RemoveCatContactos setOauthToken(java.lang.String oauthToken) {
      return (RemoveCatContactos) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCatContactos setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCatContactos) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCatContactos setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCatContactos) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCatContactos setUserIp(java.lang.String userIp) {
      return (RemoveCatContactos) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveCatContactos setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveCatContactos set(String parameterName, Object value) {
      return (RemoveCatContactos) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCat_Personal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveCatPersonal#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveCatPersonal removeCatPersonal(java.lang.Long id) throws java.io.IOException {
    RemoveCatPersonal result = new RemoveCatPersonal(id);
    initialize(result);
    return result;
  }

  public class RemoveCatPersonal extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "cat_personal/{id}";

    /**
     * Create a request for the method "removeCat_Personal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveCatPersonal#execute()} method to invoke the
     * remote operation. <p> {@link RemoveCatPersonal#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveCatPersonal(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveCatPersonal setAlt(java.lang.String alt) {
      return (RemoveCatPersonal) super.setAlt(alt);
    }

    @Override
    public RemoveCatPersonal setFields(java.lang.String fields) {
      return (RemoveCatPersonal) super.setFields(fields);
    }

    @Override
    public RemoveCatPersonal setKey(java.lang.String key) {
      return (RemoveCatPersonal) super.setKey(key);
    }

    @Override
    public RemoveCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (RemoveCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCatPersonal setUserIp(java.lang.String userIp) {
      return (RemoveCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveCatPersonal setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveCatPersonal set(String parameterName, Object value) {
      return (RemoveCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCat_Tipo_Empresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveCatTipoEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveCatTipoEmpresa removeCatTipoEmpresa(java.lang.Long id) throws java.io.IOException {
    RemoveCatTipoEmpresa result = new RemoveCatTipoEmpresa(id);
    initialize(result);
    return result;
  }

  public class RemoveCatTipoEmpresa extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "cat_tipo_empresa/{id}";

    /**
     * Create a request for the method "removeCat_Tipo_Empresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveCatTipoEmpresa#execute()} method to invoke the
     * remote operation. <p> {@link RemoveCatTipoEmpresa#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveCatTipoEmpresa(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveCatTipoEmpresa setAlt(java.lang.String alt) {
      return (RemoveCatTipoEmpresa) super.setAlt(alt);
    }

    @Override
    public RemoveCatTipoEmpresa setFields(java.lang.String fields) {
      return (RemoveCatTipoEmpresa) super.setFields(fields);
    }

    @Override
    public RemoveCatTipoEmpresa setKey(java.lang.String key) {
      return (RemoveCatTipoEmpresa) super.setKey(key);
    }

    @Override
    public RemoveCatTipoEmpresa setOauthToken(java.lang.String oauthToken) {
      return (RemoveCatTipoEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCatTipoEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCatTipoEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCatTipoEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCatTipoEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCatTipoEmpresa setUserIp(java.lang.String userIp) {
      return (RemoveCatTipoEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveCatTipoEmpresa setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveCatTipoEmpresa set(String parameterName, Object value) {
      return (RemoveCatTipoEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCat_Tipo_Maquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveCatTipoMaquinaria#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveCatTipoMaquinaria removeCatTipoMaquinaria(java.lang.Long id) throws java.io.IOException {
    RemoveCatTipoMaquinaria result = new RemoveCatTipoMaquinaria(id);
    initialize(result);
    return result;
  }

  public class RemoveCatTipoMaquinaria extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "cat_tipo_maquinaria/{id}";

    /**
     * Create a request for the method "removeCat_Tipo_Maquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveCatTipoMaquinaria#execute()} method to invoke
     * the remote operation. <p> {@link RemoveCatTipoMaquinaria#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveCatTipoMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveCatTipoMaquinaria setAlt(java.lang.String alt) {
      return (RemoveCatTipoMaquinaria) super.setAlt(alt);
    }

    @Override
    public RemoveCatTipoMaquinaria setFields(java.lang.String fields) {
      return (RemoveCatTipoMaquinaria) super.setFields(fields);
    }

    @Override
    public RemoveCatTipoMaquinaria setKey(java.lang.String key) {
      return (RemoveCatTipoMaquinaria) super.setKey(key);
    }

    @Override
    public RemoveCatTipoMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (RemoveCatTipoMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCatTipoMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCatTipoMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCatTipoMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCatTipoMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCatTipoMaquinaria setUserIp(java.lang.String userIp) {
      return (RemoveCatTipoMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveCatTipoMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveCatTipoMaquinaria set(String parameterName, Object value) {
      return (RemoveCatTipoMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCat_Tipo_Presona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveCatTipoPresona#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveCatTipoPresona removeCatTipoPresona(java.lang.Long id) throws java.io.IOException {
    RemoveCatTipoPresona result = new RemoveCatTipoPresona(id);
    initialize(result);
    return result;
  }

  public class RemoveCatTipoPresona extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "cat_tipo_presona/{id}";

    /**
     * Create a request for the method "removeCat_Tipo_Presona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveCatTipoPresona#execute()} method to invoke the
     * remote operation. <p> {@link RemoveCatTipoPresona#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveCatTipoPresona(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveCatTipoPresona setAlt(java.lang.String alt) {
      return (RemoveCatTipoPresona) super.setAlt(alt);
    }

    @Override
    public RemoveCatTipoPresona setFields(java.lang.String fields) {
      return (RemoveCatTipoPresona) super.setFields(fields);
    }

    @Override
    public RemoveCatTipoPresona setKey(java.lang.String key) {
      return (RemoveCatTipoPresona) super.setKey(key);
    }

    @Override
    public RemoveCatTipoPresona setOauthToken(java.lang.String oauthToken) {
      return (RemoveCatTipoPresona) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCatTipoPresona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCatTipoPresona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCatTipoPresona setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCatTipoPresona) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCatTipoPresona setUserIp(java.lang.String userIp) {
      return (RemoveCatTipoPresona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveCatTipoPresona setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveCatTipoPresona set(String parameterName, Object value) {
      return (RemoveCatTipoPresona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeConcepto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveConcepto#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveConcepto removeConcepto(java.lang.Long id) throws java.io.IOException {
    RemoveConcepto result = new RemoveConcepto(id);
    initialize(result);
    return result;
  }

  public class RemoveConcepto extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "concepto/{id}";

    /**
     * Create a request for the method "removeConcepto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveConcepto#execute()} method to invoke the remote
     * operation. <p> {@link RemoveConcepto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveConcepto(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveConcepto setAlt(java.lang.String alt) {
      return (RemoveConcepto) super.setAlt(alt);
    }

    @Override
    public RemoveConcepto setFields(java.lang.String fields) {
      return (RemoveConcepto) super.setFields(fields);
    }

    @Override
    public RemoveConcepto setKey(java.lang.String key) {
      return (RemoveConcepto) super.setKey(key);
    }

    @Override
    public RemoveConcepto setOauthToken(java.lang.String oauthToken) {
      return (RemoveConcepto) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveConcepto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveConcepto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveConcepto setQuotaUser(java.lang.String quotaUser) {
      return (RemoveConcepto) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveConcepto setUserIp(java.lang.String userIp) {
      return (RemoveConcepto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveConcepto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveConcepto set(String parameterName, Object value) {
      return (RemoveConcepto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeDeviceInfo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveDeviceInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveDeviceInfo removeDeviceInfo(java.lang.String id) throws java.io.IOException {
    RemoveDeviceInfo result = new RemoveDeviceInfo(id);
    initialize(result);
    return result;
  }

  public class RemoveDeviceInfo extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "deviceinfo/{id}";

    /**
     * Create a request for the method "removeDeviceInfo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveDeviceInfo#execute()} method to invoke the
     * remote operation. <p> {@link RemoveDeviceInfo#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveDeviceInfo(java.lang.String id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveDeviceInfo setAlt(java.lang.String alt) {
      return (RemoveDeviceInfo) super.setAlt(alt);
    }

    @Override
    public RemoveDeviceInfo setFields(java.lang.String fields) {
      return (RemoveDeviceInfo) super.setFields(fields);
    }

    @Override
    public RemoveDeviceInfo setKey(java.lang.String key) {
      return (RemoveDeviceInfo) super.setKey(key);
    }

    @Override
    public RemoveDeviceInfo setOauthToken(java.lang.String oauthToken) {
      return (RemoveDeviceInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveDeviceInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveDeviceInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveDeviceInfo setQuotaUser(java.lang.String quotaUser) {
      return (RemoveDeviceInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveDeviceInfo setUserIp(java.lang.String userIp) {
      return (RemoveDeviceInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveDeviceInfo setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveDeviceInfo set(String parameterName, Object value) {
      return (RemoveDeviceInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeDirectivo_Proyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveDirectivoProyecto#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveDirectivoProyecto removeDirectivoProyecto(java.lang.Long id) throws java.io.IOException {
    RemoveDirectivoProyecto result = new RemoveDirectivoProyecto(id);
    initialize(result);
    return result;
  }

  public class RemoveDirectivoProyecto extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "directivo_proyecto/{id}";

    /**
     * Create a request for the method "removeDirectivo_Proyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveDirectivoProyecto#execute()} method to invoke
     * the remote operation. <p> {@link RemoveDirectivoProyecto#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveDirectivoProyecto(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveDirectivoProyecto setAlt(java.lang.String alt) {
      return (RemoveDirectivoProyecto) super.setAlt(alt);
    }

    @Override
    public RemoveDirectivoProyecto setFields(java.lang.String fields) {
      return (RemoveDirectivoProyecto) super.setFields(fields);
    }

    @Override
    public RemoveDirectivoProyecto setKey(java.lang.String key) {
      return (RemoveDirectivoProyecto) super.setKey(key);
    }

    @Override
    public RemoveDirectivoProyecto setOauthToken(java.lang.String oauthToken) {
      return (RemoveDirectivoProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveDirectivoProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveDirectivoProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveDirectivoProyecto setQuotaUser(java.lang.String quotaUser) {
      return (RemoveDirectivoProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveDirectivoProyecto setUserIp(java.lang.String userIp) {
      return (RemoveDirectivoProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveDirectivoProyecto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveDirectivoProyecto set(String parameterName, Object value) {
      return (RemoveDirectivoProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeDirectorio".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveDirectorio#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveDirectorio removeDirectorio(java.lang.Long id) throws java.io.IOException {
    RemoveDirectorio result = new RemoveDirectorio(id);
    initialize(result);
    return result;
  }

  public class RemoveDirectorio extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "directorio/{id}";

    /**
     * Create a request for the method "removeDirectorio".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveDirectorio#execute()} method to invoke the
     * remote operation. <p> {@link RemoveDirectorio#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveDirectorio(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveDirectorio setAlt(java.lang.String alt) {
      return (RemoveDirectorio) super.setAlt(alt);
    }

    @Override
    public RemoveDirectorio setFields(java.lang.String fields) {
      return (RemoveDirectorio) super.setFields(fields);
    }

    @Override
    public RemoveDirectorio setKey(java.lang.String key) {
      return (RemoveDirectorio) super.setKey(key);
    }

    @Override
    public RemoveDirectorio setOauthToken(java.lang.String oauthToken) {
      return (RemoveDirectorio) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveDirectorio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveDirectorio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveDirectorio setQuotaUser(java.lang.String quotaUser) {
      return (RemoveDirectorio) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveDirectorio setUserIp(java.lang.String userIp) {
      return (RemoveDirectorio) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveDirectorio setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveDirectorio set(String parameterName, Object value) {
      return (RemoveDirectorio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeEmpresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveEmpresa removeEmpresa(java.lang.Long id) throws java.io.IOException {
    RemoveEmpresa result = new RemoveEmpresa(id);
    initialize(result);
    return result;
  }

  public class RemoveEmpresa extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "empresa/{id}";

    /**
     * Create a request for the method "removeEmpresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveEmpresa#execute()} method to invoke the remote
     * operation. <p> {@link RemoveEmpresa#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveEmpresa(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveEmpresa setAlt(java.lang.String alt) {
      return (RemoveEmpresa) super.setAlt(alt);
    }

    @Override
    public RemoveEmpresa setFields(java.lang.String fields) {
      return (RemoveEmpresa) super.setFields(fields);
    }

    @Override
    public RemoveEmpresa setKey(java.lang.String key) {
      return (RemoveEmpresa) super.setKey(key);
    }

    @Override
    public RemoveEmpresa setOauthToken(java.lang.String oauthToken) {
      return (RemoveEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (RemoveEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveEmpresa setUserIp(java.lang.String userIp) {
      return (RemoveEmpresa) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveEmpresa setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveEmpresa set(String parameterName, Object value) {
      return (RemoveEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeEstimacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveEstimacion#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveEstimacion removeEstimacion(java.lang.Long id) throws java.io.IOException {
    RemoveEstimacion result = new RemoveEstimacion(id);
    initialize(result);
    return result;
  }

  public class RemoveEstimacion extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "estimacion/{id}";

    /**
     * Create a request for the method "removeEstimacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveEstimacion#execute()} method to invoke the
     * remote operation. <p> {@link RemoveEstimacion#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveEstimacion(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveEstimacion setAlt(java.lang.String alt) {
      return (RemoveEstimacion) super.setAlt(alt);
    }

    @Override
    public RemoveEstimacion setFields(java.lang.String fields) {
      return (RemoveEstimacion) super.setFields(fields);
    }

    @Override
    public RemoveEstimacion setKey(java.lang.String key) {
      return (RemoveEstimacion) super.setKey(key);
    }

    @Override
    public RemoveEstimacion setOauthToken(java.lang.String oauthToken) {
      return (RemoveEstimacion) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveEstimacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveEstimacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveEstimacion setQuotaUser(java.lang.String quotaUser) {
      return (RemoveEstimacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveEstimacion setUserIp(java.lang.String userIp) {
      return (RemoveEstimacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveEstimacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveEstimacion set(String parameterName, Object value) {
      return (RemoveEstimacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveMaquinaria removeMaquinaria(java.lang.Long id) throws java.io.IOException {
    RemoveMaquinaria result = new RemoveMaquinaria(id);
    initialize(result);
    return result;
  }

  public class RemoveMaquinaria extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "maquinaria/{id}";

    /**
     * Create a request for the method "removeMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveMaquinaria#execute()} method to invoke the
     * remote operation. <p> {@link RemoveMaquinaria#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveMaquinaria setAlt(java.lang.String alt) {
      return (RemoveMaquinaria) super.setAlt(alt);
    }

    @Override
    public RemoveMaquinaria setFields(java.lang.String fields) {
      return (RemoveMaquinaria) super.setFields(fields);
    }

    @Override
    public RemoveMaquinaria setKey(java.lang.String key) {
      return (RemoveMaquinaria) super.setKey(key);
    }

    @Override
    public RemoveMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (RemoveMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (RemoveMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveMaquinaria setUserIp(java.lang.String userIp) {
      return (RemoveMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveMaquinaria set(String parameterName, Object value) {
      return (RemoveMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeMultimedia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveMultimedia#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveMultimedia removeMultimedia(java.lang.Long id) throws java.io.IOException {
    RemoveMultimedia result = new RemoveMultimedia(id);
    initialize(result);
    return result;
  }

  public class RemoveMultimedia extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "multimedia/{id}";

    /**
     * Create a request for the method "removeMultimedia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveMultimedia#execute()} method to invoke the
     * remote operation. <p> {@link RemoveMultimedia#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveMultimedia(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveMultimedia setAlt(java.lang.String alt) {
      return (RemoveMultimedia) super.setAlt(alt);
    }

    @Override
    public RemoveMultimedia setFields(java.lang.String fields) {
      return (RemoveMultimedia) super.setFields(fields);
    }

    @Override
    public RemoveMultimedia setKey(java.lang.String key) {
      return (RemoveMultimedia) super.setKey(key);
    }

    @Override
    public RemoveMultimedia setOauthToken(java.lang.String oauthToken) {
      return (RemoveMultimedia) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveMultimedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveMultimedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveMultimedia setQuotaUser(java.lang.String quotaUser) {
      return (RemoveMultimedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveMultimedia setUserIp(java.lang.String userIp) {
      return (RemoveMultimedia) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveMultimedia setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveMultimedia set(String parameterName, Object value) {
      return (RemoveMultimedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeNotas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveNotas#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveNotas removeNotas(java.lang.Long id) throws java.io.IOException {
    RemoveNotas result = new RemoveNotas(id);
    initialize(result);
    return result;
  }

  public class RemoveNotas extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "notas/{id}";

    /**
     * Create a request for the method "removeNotas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveNotas#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveNotas#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveNotas(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveNotas setAlt(java.lang.String alt) {
      return (RemoveNotas) super.setAlt(alt);
    }

    @Override
    public RemoveNotas setFields(java.lang.String fields) {
      return (RemoveNotas) super.setFields(fields);
    }

    @Override
    public RemoveNotas setKey(java.lang.String key) {
      return (RemoveNotas) super.setKey(key);
    }

    @Override
    public RemoveNotas setOauthToken(java.lang.String oauthToken) {
      return (RemoveNotas) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveNotas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveNotas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveNotas setQuotaUser(java.lang.String quotaUser) {
      return (RemoveNotas) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveNotas setUserIp(java.lang.String userIp) {
      return (RemoveNotas) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveNotas setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveNotas set(String parameterName, Object value) {
      return (RemoveNotas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeObra".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveObra#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveObra removeObra(java.lang.Long id) throws java.io.IOException {
    RemoveObra result = new RemoveObra(id);
    initialize(result);
    return result;
  }

  public class RemoveObra extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "obra/{id}";

    /**
     * Create a request for the method "removeObra".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveObra#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveObra#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveObra(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveObra setAlt(java.lang.String alt) {
      return (RemoveObra) super.setAlt(alt);
    }

    @Override
    public RemoveObra setFields(java.lang.String fields) {
      return (RemoveObra) super.setFields(fields);
    }

    @Override
    public RemoveObra setKey(java.lang.String key) {
      return (RemoveObra) super.setKey(key);
    }

    @Override
    public RemoveObra setOauthToken(java.lang.String oauthToken) {
      return (RemoveObra) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveObra setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveObra) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveObra setQuotaUser(java.lang.String quotaUser) {
      return (RemoveObra) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveObra setUserIp(java.lang.String userIp) {
      return (RemoveObra) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveObra setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveObra set(String parameterName, Object value) {
      return (RemoveObra) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeOrg_Goubernamental".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveOrgGoubernamental#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveOrgGoubernamental removeOrgGoubernamental(java.lang.Long id) throws java.io.IOException {
    RemoveOrgGoubernamental result = new RemoveOrgGoubernamental(id);
    initialize(result);
    return result;
  }

  public class RemoveOrgGoubernamental extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "org_goubernamental/{id}";

    /**
     * Create a request for the method "removeOrg_Goubernamental".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveOrgGoubernamental#execute()} method to invoke
     * the remote operation. <p> {@link RemoveOrgGoubernamental#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveOrgGoubernamental(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveOrgGoubernamental setAlt(java.lang.String alt) {
      return (RemoveOrgGoubernamental) super.setAlt(alt);
    }

    @Override
    public RemoveOrgGoubernamental setFields(java.lang.String fields) {
      return (RemoveOrgGoubernamental) super.setFields(fields);
    }

    @Override
    public RemoveOrgGoubernamental setKey(java.lang.String key) {
      return (RemoveOrgGoubernamental) super.setKey(key);
    }

    @Override
    public RemoveOrgGoubernamental setOauthToken(java.lang.String oauthToken) {
      return (RemoveOrgGoubernamental) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveOrgGoubernamental setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveOrgGoubernamental) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveOrgGoubernamental setQuotaUser(java.lang.String quotaUser) {
      return (RemoveOrgGoubernamental) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveOrgGoubernamental setUserIp(java.lang.String userIp) {
      return (RemoveOrgGoubernamental) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveOrgGoubernamental setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveOrgGoubernamental set(String parameterName, Object value) {
      return (RemoveOrgGoubernamental) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePersona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemovePersona#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemovePersona removePersona(java.lang.Long id) throws java.io.IOException {
    RemovePersona result = new RemovePersona(id);
    initialize(result);
    return result;
  }

  public class RemovePersona extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "persona/{id}";

    /**
     * Create a request for the method "removePersona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemovePersona#execute()} method to invoke the remote
     * operation. <p> {@link RemovePersona#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemovePersona(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemovePersona setAlt(java.lang.String alt) {
      return (RemovePersona) super.setAlt(alt);
    }

    @Override
    public RemovePersona setFields(java.lang.String fields) {
      return (RemovePersona) super.setFields(fields);
    }

    @Override
    public RemovePersona setKey(java.lang.String key) {
      return (RemovePersona) super.setKey(key);
    }

    @Override
    public RemovePersona setOauthToken(java.lang.String oauthToken) {
      return (RemovePersona) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePersona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePersona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePersona setQuotaUser(java.lang.String quotaUser) {
      return (RemovePersona) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePersona setUserIp(java.lang.String userIp) {
      return (RemovePersona) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemovePersona setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemovePersona set(String parameterName, Object value) {
      return (RemovePersona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePrograma".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemovePrograma#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemovePrograma removePrograma(java.lang.Long id) throws java.io.IOException {
    RemovePrograma result = new RemovePrograma(id);
    initialize(result);
    return result;
  }

  public class RemovePrograma extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "programa/{id}";

    /**
     * Create a request for the method "removePrograma".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemovePrograma#execute()} method to invoke the remote
     * operation. <p> {@link RemovePrograma#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemovePrograma(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemovePrograma setAlt(java.lang.String alt) {
      return (RemovePrograma) super.setAlt(alt);
    }

    @Override
    public RemovePrograma setFields(java.lang.String fields) {
      return (RemovePrograma) super.setFields(fields);
    }

    @Override
    public RemovePrograma setKey(java.lang.String key) {
      return (RemovePrograma) super.setKey(key);
    }

    @Override
    public RemovePrograma setOauthToken(java.lang.String oauthToken) {
      return (RemovePrograma) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePrograma setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePrograma) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePrograma setQuotaUser(java.lang.String quotaUser) {
      return (RemovePrograma) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePrograma setUserIp(java.lang.String userIp) {
      return (RemovePrograma) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemovePrograma setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemovePrograma set(String parameterName, Object value) {
      return (RemovePrograma) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeProyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveProyecto removeProyecto(java.lang.Long id) throws java.io.IOException {
    RemoveProyecto result = new RemoveProyecto(id);
    initialize(result);
    return result;
  }

  public class RemoveProyecto extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "proyecto/{id}";

    /**
     * Create a request for the method "removeProyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveProyecto#execute()} method to invoke the remote
     * operation. <p> {@link RemoveProyecto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveProyecto(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveProyecto setAlt(java.lang.String alt) {
      return (RemoveProyecto) super.setAlt(alt);
    }

    @Override
    public RemoveProyecto setFields(java.lang.String fields) {
      return (RemoveProyecto) super.setFields(fields);
    }

    @Override
    public RemoveProyecto setKey(java.lang.String key) {
      return (RemoveProyecto) super.setKey(key);
    }

    @Override
    public RemoveProyecto setOauthToken(java.lang.String oauthToken) {
      return (RemoveProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveProyecto setQuotaUser(java.lang.String quotaUser) {
      return (RemoveProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveProyecto setUserIp(java.lang.String userIp) {
      return (RemoveProyecto) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveProyecto setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveProyecto set(String parameterName, Object value) {
      return (RemoveProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removePush".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemovePush#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemovePush removePush(java.lang.Long id) throws java.io.IOException {
    RemovePush result = new RemovePush(id);
    initialize(result);
    return result;
  }

  public class RemovePush extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "push/{id}";

    /**
     * Create a request for the method "removePush".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemovePush#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemovePush#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemovePush(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemovePush setAlt(java.lang.String alt) {
      return (RemovePush) super.setAlt(alt);
    }

    @Override
    public RemovePush setFields(java.lang.String fields) {
      return (RemovePush) super.setFields(fields);
    }

    @Override
    public RemovePush setKey(java.lang.String key) {
      return (RemovePush) super.setKey(key);
    }

    @Override
    public RemovePush setOauthToken(java.lang.String oauthToken) {
      return (RemovePush) super.setOauthToken(oauthToken);
    }

    @Override
    public RemovePush setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemovePush) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemovePush setQuotaUser(java.lang.String quotaUser) {
      return (RemovePush) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemovePush setUserIp(java.lang.String userIp) {
      return (RemovePush) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemovePush setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemovePush set(String parameterName, Object value) {
      return (RemovePush) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRef_calendarizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveRefCalendarizacion#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRefCalendarizacion removeRefCalendarizacion(java.lang.Long id) throws java.io.IOException {
    RemoveRefCalendarizacion result = new RemoveRefCalendarizacion(id);
    initialize(result);
    return result;
  }

  public class RemoveRefCalendarizacion extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "ref_calendarizacion/{id}";

    /**
     * Create a request for the method "removeRef_calendarizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveRefCalendarizacion#execute()} method to invoke
     * the remote operation. <p> {@link RemoveRefCalendarizacion#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRefCalendarizacion(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRefCalendarizacion setAlt(java.lang.String alt) {
      return (RemoveRefCalendarizacion) super.setAlt(alt);
    }

    @Override
    public RemoveRefCalendarizacion setFields(java.lang.String fields) {
      return (RemoveRefCalendarizacion) super.setFields(fields);
    }

    @Override
    public RemoveRefCalendarizacion setKey(java.lang.String key) {
      return (RemoveRefCalendarizacion) super.setKey(key);
    }

    @Override
    public RemoveRefCalendarizacion setOauthToken(java.lang.String oauthToken) {
      return (RemoveRefCalendarizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRefCalendarizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRefCalendarizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRefCalendarizacion setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRefCalendarizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRefCalendarizacion setUserIp(java.lang.String userIp) {
      return (RemoveRefCalendarizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRefCalendarizacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRefCalendarizacion set(String parameterName, Object value) {
      return (RemoveRefCalendarizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRepMaquinariaCatMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveRepMaquinariaCatMaquinaria#execute()} method to invoke
   * the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRepMaquinariaCatMaquinaria removeRepMaquinariaCatMaquinaria(java.lang.Long id) throws java.io.IOException {
    RemoveRepMaquinariaCatMaquinaria result = new RemoveRepMaquinariaCatMaquinaria(id);
    initialize(result);
    return result;
  }

  public class RemoveRepMaquinariaCatMaquinaria extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "repmaquinariacatmaquinaria/{id}";

    /**
     * Create a request for the method "removeRepMaquinariaCatMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveRepMaquinariaCatMaquinaria#execute()} method to
     * invoke the remote operation. <p> {@link RemoveRepMaquinariaCatMaquinaria#initialize(com.google.
     * api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRepMaquinariaCatMaquinaria(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setAlt(java.lang.String alt) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setAlt(alt);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setFields(java.lang.String fields) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setFields(fields);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setKey(java.lang.String key) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setKey(key);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria setUserIp(java.lang.String userIp) {
      return (RemoveRepMaquinariaCatMaquinaria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRepMaquinariaCatMaquinaria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRepMaquinariaCatMaquinaria set(String parameterName, Object value) {
      return (RemoveRepMaquinariaCatMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRepoPersonalCatPersonal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveRepoPersonalCatPersonal#execute()} method to invoke
   * the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRepoPersonalCatPersonal removeRepoPersonalCatPersonal(java.lang.Long id) throws java.io.IOException {
    RemoveRepoPersonalCatPersonal result = new RemoveRepoPersonalCatPersonal(id);
    initialize(result);
    return result;
  }

  public class RemoveRepoPersonalCatPersonal extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "repopersonalcatpersonal/{id}";

    /**
     * Create a request for the method "removeRepoPersonalCatPersonal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveRepoPersonalCatPersonal#execute()} method to
     * invoke the remote operation. <p> {@link RemoveRepoPersonalCatPersonal#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRepoPersonalCatPersonal(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRepoPersonalCatPersonal setAlt(java.lang.String alt) {
      return (RemoveRepoPersonalCatPersonal) super.setAlt(alt);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setFields(java.lang.String fields) {
      return (RemoveRepoPersonalCatPersonal) super.setFields(fields);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setKey(java.lang.String key) {
      return (RemoveRepoPersonalCatPersonal) super.setKey(key);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (RemoveRepoPersonalCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRepoPersonalCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRepoPersonalCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRepoPersonalCatPersonal setUserIp(java.lang.String userIp) {
      return (RemoveRepoPersonalCatPersonal) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRepoPersonalCatPersonal setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRepoPersonalCatPersonal set(String parameterName, Object value) {
      return (RemoveRepoPersonalCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeReporteDiario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveReporteDiario#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveReporteDiario removeReporteDiario(java.lang.Long id) throws java.io.IOException {
    RemoveReporteDiario result = new RemoveReporteDiario(id);
    initialize(result);
    return result;
  }

  public class RemoveReporteDiario extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "reportediario/{id}";

    /**
     * Create a request for the method "removeReporteDiario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveReporteDiario#execute()} method to invoke the
     * remote operation. <p> {@link RemoveReporteDiario#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveReporteDiario(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveReporteDiario setAlt(java.lang.String alt) {
      return (RemoveReporteDiario) super.setAlt(alt);
    }

    @Override
    public RemoveReporteDiario setFields(java.lang.String fields) {
      return (RemoveReporteDiario) super.setFields(fields);
    }

    @Override
    public RemoveReporteDiario setKey(java.lang.String key) {
      return (RemoveReporteDiario) super.setKey(key);
    }

    @Override
    public RemoveReporteDiario setOauthToken(java.lang.String oauthToken) {
      return (RemoveReporteDiario) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveReporteDiario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveReporteDiario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveReporteDiario setQuotaUser(java.lang.String quotaUser) {
      return (RemoveReporteDiario) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveReporteDiario setUserIp(java.lang.String userIp) {
      return (RemoveReporteDiario) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveReporteDiario setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveReporteDiario set(String parameterName, Object value) {
      return (RemoveReporteDiario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeReportsmodel".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveReportsmodel#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveReportsmodel removeReportsmodel(java.lang.Long id) throws java.io.IOException {
    RemoveReportsmodel result = new RemoveReportsmodel(id);
    initialize(result);
    return result;
  }

  public class RemoveReportsmodel extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "reportsmodel/{id}";

    /**
     * Create a request for the method "removeReportsmodel".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveReportsmodel#execute()} method to invoke the
     * remote operation. <p> {@link RemoveReportsmodel#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveReportsmodel(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveReportsmodel setAlt(java.lang.String alt) {
      return (RemoveReportsmodel) super.setAlt(alt);
    }

    @Override
    public RemoveReportsmodel setFields(java.lang.String fields) {
      return (RemoveReportsmodel) super.setFields(fields);
    }

    @Override
    public RemoveReportsmodel setKey(java.lang.String key) {
      return (RemoveReportsmodel) super.setKey(key);
    }

    @Override
    public RemoveReportsmodel setOauthToken(java.lang.String oauthToken) {
      return (RemoveReportsmodel) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveReportsmodel setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveReportsmodel) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveReportsmodel setQuotaUser(java.lang.String quotaUser) {
      return (RemoveReportsmodel) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveReportsmodel setUserIp(java.lang.String userIp) {
      return (RemoveReportsmodel) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveReportsmodel setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveReportsmodel set(String parameterName, Object value) {
      return (RemoveReportsmodel) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeSincronizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveSincronizacion#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveSincronizacion removeSincronizacion(java.lang.Long id) throws java.io.IOException {
    RemoveSincronizacion result = new RemoveSincronizacion(id);
    initialize(result);
    return result;
  }

  public class RemoveSincronizacion extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "sincronizacion/{id}";

    /**
     * Create a request for the method "removeSincronizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveSincronizacion#execute()} method to invoke the
     * remote operation. <p> {@link RemoveSincronizacion#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveSincronizacion(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveSincronizacion setAlt(java.lang.String alt) {
      return (RemoveSincronizacion) super.setAlt(alt);
    }

    @Override
    public RemoveSincronizacion setFields(java.lang.String fields) {
      return (RemoveSincronizacion) super.setFields(fields);
    }

    @Override
    public RemoveSincronizacion setKey(java.lang.String key) {
      return (RemoveSincronizacion) super.setKey(key);
    }

    @Override
    public RemoveSincronizacion setOauthToken(java.lang.String oauthToken) {
      return (RemoveSincronizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveSincronizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveSincronizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveSincronizacion setQuotaUser(java.lang.String quotaUser) {
      return (RemoveSincronizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveSincronizacion setUserIp(java.lang.String userIp) {
      return (RemoveSincronizacion) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveSincronizacion setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveSincronizacion set(String parameterName, Object value) {
      return (RemoveSincronizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUbicaciones".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveUbicaciones#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUbicaciones removeUbicaciones(java.lang.Long id) throws java.io.IOException {
    RemoveUbicaciones result = new RemoveUbicaciones(id);
    initialize(result);
    return result;
  }

  public class RemoveUbicaciones extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "ubicaciones/{id}";

    /**
     * Create a request for the method "removeUbicaciones".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveUbicaciones#execute()} method to invoke the
     * remote operation. <p> {@link RemoveUbicaciones#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUbicaciones(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUbicaciones setAlt(java.lang.String alt) {
      return (RemoveUbicaciones) super.setAlt(alt);
    }

    @Override
    public RemoveUbicaciones setFields(java.lang.String fields) {
      return (RemoveUbicaciones) super.setFields(fields);
    }

    @Override
    public RemoveUbicaciones setKey(java.lang.String key) {
      return (RemoveUbicaciones) super.setKey(key);
    }

    @Override
    public RemoveUbicaciones setOauthToken(java.lang.String oauthToken) {
      return (RemoveUbicaciones) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUbicaciones setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUbicaciones) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUbicaciones setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUbicaciones) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUbicaciones setUserIp(java.lang.String userIp) {
      return (RemoveUbicaciones) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveUbicaciones setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUbicaciones set(String parameterName, Object value) {
      return (RemoveUbicaciones) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUsuario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveUsuario#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUsuario removeUsuario(java.lang.Long id) throws java.io.IOException {
    RemoveUsuario result = new RemoveUsuario(id);
    initialize(result);
    return result;
  }

  public class RemoveUsuario extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "usuario/{id}";

    /**
     * Create a request for the method "removeUsuario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveUsuario#execute()} method to invoke the remote
     * operation. <p> {@link RemoveUsuario#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUsuario(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUsuario setAlt(java.lang.String alt) {
      return (RemoveUsuario) super.setAlt(alt);
    }

    @Override
    public RemoveUsuario setFields(java.lang.String fields) {
      return (RemoveUsuario) super.setFields(fields);
    }

    @Override
    public RemoveUsuario setKey(java.lang.String key) {
      return (RemoveUsuario) super.setKey(key);
    }

    @Override
    public RemoveUsuario setOauthToken(java.lang.String oauthToken) {
      return (RemoveUsuario) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUsuario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUsuario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUsuario setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUsuario) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUsuario setUserIp(java.lang.String userIp) {
      return (RemoveUsuario) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveUsuario setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUsuario set(String parameterName, Object value) {
      return (RemoveUsuario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeXmpp".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link RemoveXmpp#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveXmpp removeXmpp(java.lang.Long id) throws java.io.IOException {
    RemoveXmpp result = new RemoveXmpp(id);
    initialize(result);
    return result;
  }

  public class RemoveXmpp extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "xmpp/{id}";

    /**
     * Create a request for the method "removeXmpp".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link RemoveXmpp#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveXmpp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveXmpp(java.lang.Long id) {
      super(Communicationchannel.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveXmpp setAlt(java.lang.String alt) {
      return (RemoveXmpp) super.setAlt(alt);
    }

    @Override
    public RemoveXmpp setFields(java.lang.String fields) {
      return (RemoveXmpp) super.setFields(fields);
    }

    @Override
    public RemoveXmpp setKey(java.lang.String key) {
      return (RemoveXmpp) super.setKey(key);
    }

    @Override
    public RemoveXmpp setOauthToken(java.lang.String oauthToken) {
      return (RemoveXmpp) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveXmpp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveXmpp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveXmpp setQuotaUser(java.lang.String quotaUser) {
      return (RemoveXmpp) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveXmpp setUserIp(java.lang.String userIp) {
      return (RemoveXmpp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveXmpp setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveXmpp set(String parameterName, Object value) {
      return (RemoveXmpp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendMessage".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
   * operation.
   *
   * @param message
   * @return the request
   */
  public SendMessage sendMessage(java.lang.String message) throws java.io.IOException {
    SendMessage result = new SendMessage(message);
    initialize(result);
    return result;
  }

  public class SendMessage extends CommunicationchannelRequest<Void> {

    private static final String REST_PATH = "sendMessage/{message}";

    /**
     * Create a request for the method "sendMessage".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
     * operation. <p> {@link
     * SendMessage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param message
     * @since 1.13
     */
    protected SendMessage(java.lang.String message) {
      super(Communicationchannel.this, "POST", REST_PATH, null, Void.class);
      this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
    }

    @Override
    public SendMessage setAlt(java.lang.String alt) {
      return (SendMessage) super.setAlt(alt);
    }

    @Override
    public SendMessage setFields(java.lang.String fields) {
      return (SendMessage) super.setFields(fields);
    }

    @Override
    public SendMessage setKey(java.lang.String key) {
      return (SendMessage) super.setKey(key);
    }

    @Override
    public SendMessage setOauthToken(java.lang.String oauthToken) {
      return (SendMessage) super.setOauthToken(oauthToken);
    }

    @Override
    public SendMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendMessage) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendMessage setQuotaUser(java.lang.String quotaUser) {
      return (SendMessage) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendMessage setUserIp(java.lang.String userIp) {
      return (SendMessage) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public SendMessage setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @Override
    public SendMessage set(String parameterName, Object value) {
      return (SendMessage) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateAditivas_Deductivas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateAditivasDeductivas#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AditivasDeductivas}
   * @return the request
   */
  public UpdateAditivasDeductivas updateAditivasDeductivas(com.csgit.cao.model.communicationchannel.model.AditivasDeductivas content) throws java.io.IOException {
    UpdateAditivasDeductivas result = new UpdateAditivasDeductivas(content);
    initialize(result);
    return result;
  }

  public class UpdateAditivasDeductivas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AditivasDeductivas> {

    private static final String REST_PATH = "aditivas_deductivas";

    /**
     * Create a request for the method "updateAditivas_Deductivas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateAditivasDeductivas#execute()} method to invoke
     * the remote operation. <p> {@link UpdateAditivasDeductivas#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AditivasDeductivas}
     * @since 1.13
     */
    protected UpdateAditivasDeductivas(com.csgit.cao.model.communicationchannel.model.AditivasDeductivas content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AditivasDeductivas.class);
    }

    @Override
    public UpdateAditivasDeductivas setAlt(java.lang.String alt) {
      return (UpdateAditivasDeductivas) super.setAlt(alt);
    }

    @Override
    public UpdateAditivasDeductivas setFields(java.lang.String fields) {
      return (UpdateAditivasDeductivas) super.setFields(fields);
    }

    @Override
    public UpdateAditivasDeductivas setKey(java.lang.String key) {
      return (UpdateAditivasDeductivas) super.setKey(key);
    }

    @Override
    public UpdateAditivasDeductivas setOauthToken(java.lang.String oauthToken) {
      return (UpdateAditivasDeductivas) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateAditivasDeductivas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateAditivasDeductivas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateAditivasDeductivas setQuotaUser(java.lang.String quotaUser) {
      return (UpdateAditivasDeductivas) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateAditivasDeductivas setUserIp(java.lang.String userIp) {
      return (UpdateAditivasDeductivas) super.setUserIp(userIp);
    }

    @Override
    public UpdateAditivasDeductivas set(String parameterName, Object value) {
      return (UpdateAditivasDeductivas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateAvance_Financiero".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateAvanceFinanciero#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFinanciero}
   * @return the request
   */
  public UpdateAvanceFinanciero updateAvanceFinanciero(com.csgit.cao.model.communicationchannel.model.AvanceFinanciero content) throws java.io.IOException {
    UpdateAvanceFinanciero result = new UpdateAvanceFinanciero(content);
    initialize(result);
    return result;
  }

  public class UpdateAvanceFinanciero extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AvanceFinanciero> {

    private static final String REST_PATH = "avance_financiero";

    /**
     * Create a request for the method "updateAvance_Financiero".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateAvanceFinanciero#execute()} method to invoke the
     * remote operation. <p> {@link UpdateAvanceFinanciero#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFinanciero}
     * @since 1.13
     */
    protected UpdateAvanceFinanciero(com.csgit.cao.model.communicationchannel.model.AvanceFinanciero content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AvanceFinanciero.class);
    }

    @Override
    public UpdateAvanceFinanciero setAlt(java.lang.String alt) {
      return (UpdateAvanceFinanciero) super.setAlt(alt);
    }

    @Override
    public UpdateAvanceFinanciero setFields(java.lang.String fields) {
      return (UpdateAvanceFinanciero) super.setFields(fields);
    }

    @Override
    public UpdateAvanceFinanciero setKey(java.lang.String key) {
      return (UpdateAvanceFinanciero) super.setKey(key);
    }

    @Override
    public UpdateAvanceFinanciero setOauthToken(java.lang.String oauthToken) {
      return (UpdateAvanceFinanciero) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateAvanceFinanciero setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateAvanceFinanciero) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateAvanceFinanciero setQuotaUser(java.lang.String quotaUser) {
      return (UpdateAvanceFinanciero) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateAvanceFinanciero setUserIp(java.lang.String userIp) {
      return (UpdateAvanceFinanciero) super.setUserIp(userIp);
    }

    @Override
    public UpdateAvanceFinanciero set(String parameterName, Object value) {
      return (UpdateAvanceFinanciero) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateAvance_Fisico".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateAvanceFisico#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFisico}
   * @return the request
   */
  public UpdateAvanceFisico updateAvanceFisico(com.csgit.cao.model.communicationchannel.model.AvanceFisico content) throws java.io.IOException {
    UpdateAvanceFisico result = new UpdateAvanceFisico(content);
    initialize(result);
    return result;
  }

  public class UpdateAvanceFisico extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.AvanceFisico> {

    private static final String REST_PATH = "avance_fisico";

    /**
     * Create a request for the method "updateAvance_Fisico".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateAvanceFisico#execute()} method to invoke the
     * remote operation. <p> {@link UpdateAvanceFisico#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.AvanceFisico}
     * @since 1.13
     */
    protected UpdateAvanceFisico(com.csgit.cao.model.communicationchannel.model.AvanceFisico content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.AvanceFisico.class);
    }

    @Override
    public UpdateAvanceFisico setAlt(java.lang.String alt) {
      return (UpdateAvanceFisico) super.setAlt(alt);
    }

    @Override
    public UpdateAvanceFisico setFields(java.lang.String fields) {
      return (UpdateAvanceFisico) super.setFields(fields);
    }

    @Override
    public UpdateAvanceFisico setKey(java.lang.String key) {
      return (UpdateAvanceFisico) super.setKey(key);
    }

    @Override
    public UpdateAvanceFisico setOauthToken(java.lang.String oauthToken) {
      return (UpdateAvanceFisico) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateAvanceFisico setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateAvanceFisico) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateAvanceFisico setQuotaUser(java.lang.String quotaUser) {
      return (UpdateAvanceFisico) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateAvanceFisico setUserIp(java.lang.String userIp) {
      return (UpdateAvanceFisico) super.setUserIp(userIp);
    }

    @Override
    public UpdateAvanceFisico set(String parameterName, Object value) {
      return (UpdateAvanceFisico) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCat_Contactos".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateCatContactos#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatContactos}
   * @return the request
   */
  public UpdateCatContactos updateCatContactos(com.csgit.cao.model.communicationchannel.model.CatContactos content) throws java.io.IOException {
    UpdateCatContactos result = new UpdateCatContactos(content);
    initialize(result);
    return result;
  }

  public class UpdateCatContactos extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatContactos> {

    private static final String REST_PATH = "cat_contactos";

    /**
     * Create a request for the method "updateCat_Contactos".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateCatContactos#execute()} method to invoke the
     * remote operation. <p> {@link UpdateCatContactos#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatContactos}
     * @since 1.13
     */
    protected UpdateCatContactos(com.csgit.cao.model.communicationchannel.model.CatContactos content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatContactos.class);
    }

    @Override
    public UpdateCatContactos setAlt(java.lang.String alt) {
      return (UpdateCatContactos) super.setAlt(alt);
    }

    @Override
    public UpdateCatContactos setFields(java.lang.String fields) {
      return (UpdateCatContactos) super.setFields(fields);
    }

    @Override
    public UpdateCatContactos setKey(java.lang.String key) {
      return (UpdateCatContactos) super.setKey(key);
    }

    @Override
    public UpdateCatContactos setOauthToken(java.lang.String oauthToken) {
      return (UpdateCatContactos) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCatContactos setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCatContactos) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCatContactos setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCatContactos) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCatContactos setUserIp(java.lang.String userIp) {
      return (UpdateCatContactos) super.setUserIp(userIp);
    }

    @Override
    public UpdateCatContactos set(String parameterName, Object value) {
      return (UpdateCatContactos) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCat_Personal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateCatPersonal#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatPersonal}
   * @return the request
   */
  public UpdateCatPersonal updateCatPersonal(com.csgit.cao.model.communicationchannel.model.CatPersonal content) throws java.io.IOException {
    UpdateCatPersonal result = new UpdateCatPersonal(content);
    initialize(result);
    return result;
  }

  public class UpdateCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatPersonal> {

    private static final String REST_PATH = "cat_personal";

    /**
     * Create a request for the method "updateCat_Personal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateCatPersonal#execute()} method to invoke the
     * remote operation. <p> {@link UpdateCatPersonal#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatPersonal}
     * @since 1.13
     */
    protected UpdateCatPersonal(com.csgit.cao.model.communicationchannel.model.CatPersonal content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatPersonal.class);
    }

    @Override
    public UpdateCatPersonal setAlt(java.lang.String alt) {
      return (UpdateCatPersonal) super.setAlt(alt);
    }

    @Override
    public UpdateCatPersonal setFields(java.lang.String fields) {
      return (UpdateCatPersonal) super.setFields(fields);
    }

    @Override
    public UpdateCatPersonal setKey(java.lang.String key) {
      return (UpdateCatPersonal) super.setKey(key);
    }

    @Override
    public UpdateCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (UpdateCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCatPersonal setUserIp(java.lang.String userIp) {
      return (UpdateCatPersonal) super.setUserIp(userIp);
    }

    @Override
    public UpdateCatPersonal set(String parameterName, Object value) {
      return (UpdateCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCat_Tipo_Empresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateCatTipoEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa}
   * @return the request
   */
  public UpdateCatTipoEmpresa updateCatTipoEmpresa(com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa content) throws java.io.IOException {
    UpdateCatTipoEmpresa result = new UpdateCatTipoEmpresa(content);
    initialize(result);
    return result;
  }

  public class UpdateCatTipoEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa> {

    private static final String REST_PATH = "cat_tipo_empresa";

    /**
     * Create a request for the method "updateCat_Tipo_Empresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateCatTipoEmpresa#execute()} method to invoke the
     * remote operation. <p> {@link UpdateCatTipoEmpresa#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa}
     * @since 1.13
     */
    protected UpdateCatTipoEmpresa(com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoEmpresa.class);
    }

    @Override
    public UpdateCatTipoEmpresa setAlt(java.lang.String alt) {
      return (UpdateCatTipoEmpresa) super.setAlt(alt);
    }

    @Override
    public UpdateCatTipoEmpresa setFields(java.lang.String fields) {
      return (UpdateCatTipoEmpresa) super.setFields(fields);
    }

    @Override
    public UpdateCatTipoEmpresa setKey(java.lang.String key) {
      return (UpdateCatTipoEmpresa) super.setKey(key);
    }

    @Override
    public UpdateCatTipoEmpresa setOauthToken(java.lang.String oauthToken) {
      return (UpdateCatTipoEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCatTipoEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCatTipoEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCatTipoEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCatTipoEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCatTipoEmpresa setUserIp(java.lang.String userIp) {
      return (UpdateCatTipoEmpresa) super.setUserIp(userIp);
    }

    @Override
    public UpdateCatTipoEmpresa set(String parameterName, Object value) {
      return (UpdateCatTipoEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCat_Tipo_Maquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateCatTipoMaquinaria#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria}
   * @return the request
   */
  public UpdateCatTipoMaquinaria updateCatTipoMaquinaria(com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria content) throws java.io.IOException {
    UpdateCatTipoMaquinaria result = new UpdateCatTipoMaquinaria(content);
    initialize(result);
    return result;
  }

  public class UpdateCatTipoMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria> {

    private static final String REST_PATH = "cat_tipo_maquinaria";

    /**
     * Create a request for the method "updateCat_Tipo_Maquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateCatTipoMaquinaria#execute()} method to invoke
     * the remote operation. <p> {@link UpdateCatTipoMaquinaria#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria}
     * @since 1.13
     */
    protected UpdateCatTipoMaquinaria(com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoMaquinaria.class);
    }

    @Override
    public UpdateCatTipoMaquinaria setAlt(java.lang.String alt) {
      return (UpdateCatTipoMaquinaria) super.setAlt(alt);
    }

    @Override
    public UpdateCatTipoMaquinaria setFields(java.lang.String fields) {
      return (UpdateCatTipoMaquinaria) super.setFields(fields);
    }

    @Override
    public UpdateCatTipoMaquinaria setKey(java.lang.String key) {
      return (UpdateCatTipoMaquinaria) super.setKey(key);
    }

    @Override
    public UpdateCatTipoMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (UpdateCatTipoMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCatTipoMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCatTipoMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCatTipoMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCatTipoMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCatTipoMaquinaria setUserIp(java.lang.String userIp) {
      return (UpdateCatTipoMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public UpdateCatTipoMaquinaria set(String parameterName, Object value) {
      return (UpdateCatTipoMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCat_Tipo_Presona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateCatTipoPresona#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoPresona}
   * @return the request
   */
  public UpdateCatTipoPresona updateCatTipoPresona(com.csgit.cao.model.communicationchannel.model.CatTipoPresona content) throws java.io.IOException {
    UpdateCatTipoPresona result = new UpdateCatTipoPresona(content);
    initialize(result);
    return result;
  }

  public class UpdateCatTipoPresona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.CatTipoPresona> {

    private static final String REST_PATH = "cat_tipo_presona";

    /**
     * Create a request for the method "updateCat_Tipo_Presona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateCatTipoPresona#execute()} method to invoke the
     * remote operation. <p> {@link UpdateCatTipoPresona#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.CatTipoPresona}
     * @since 1.13
     */
    protected UpdateCatTipoPresona(com.csgit.cao.model.communicationchannel.model.CatTipoPresona content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.CatTipoPresona.class);
    }

    @Override
    public UpdateCatTipoPresona setAlt(java.lang.String alt) {
      return (UpdateCatTipoPresona) super.setAlt(alt);
    }

    @Override
    public UpdateCatTipoPresona setFields(java.lang.String fields) {
      return (UpdateCatTipoPresona) super.setFields(fields);
    }

    @Override
    public UpdateCatTipoPresona setKey(java.lang.String key) {
      return (UpdateCatTipoPresona) super.setKey(key);
    }

    @Override
    public UpdateCatTipoPresona setOauthToken(java.lang.String oauthToken) {
      return (UpdateCatTipoPresona) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCatTipoPresona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCatTipoPresona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCatTipoPresona setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCatTipoPresona) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCatTipoPresona setUserIp(java.lang.String userIp) {
      return (UpdateCatTipoPresona) super.setUserIp(userIp);
    }

    @Override
    public UpdateCatTipoPresona set(String parameterName, Object value) {
      return (UpdateCatTipoPresona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateConcepto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateConcepto#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Concepto}
   * @return the request
   */
  public UpdateConcepto updateConcepto(com.csgit.cao.model.communicationchannel.model.Concepto content) throws java.io.IOException {
    UpdateConcepto result = new UpdateConcepto(content);
    initialize(result);
    return result;
  }

  public class UpdateConcepto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Concepto> {

    private static final String REST_PATH = "concepto";

    /**
     * Create a request for the method "updateConcepto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateConcepto#execute()} method to invoke the remote
     * operation. <p> {@link UpdateConcepto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Concepto}
     * @since 1.13
     */
    protected UpdateConcepto(com.csgit.cao.model.communicationchannel.model.Concepto content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Concepto.class);
    }

    @Override
    public UpdateConcepto setAlt(java.lang.String alt) {
      return (UpdateConcepto) super.setAlt(alt);
    }

    @Override
    public UpdateConcepto setFields(java.lang.String fields) {
      return (UpdateConcepto) super.setFields(fields);
    }

    @Override
    public UpdateConcepto setKey(java.lang.String key) {
      return (UpdateConcepto) super.setKey(key);
    }

    @Override
    public UpdateConcepto setOauthToken(java.lang.String oauthToken) {
      return (UpdateConcepto) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateConcepto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateConcepto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateConcepto setQuotaUser(java.lang.String quotaUser) {
      return (UpdateConcepto) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateConcepto setUserIp(java.lang.String userIp) {
      return (UpdateConcepto) super.setUserIp(userIp);
    }

    @Override
    public UpdateConcepto set(String parameterName, Object value) {
      return (UpdateConcepto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDeviceInfo".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateDeviceInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.DeviceInfo}
   * @return the request
   */
  public UpdateDeviceInfo updateDeviceInfo(com.csgit.cao.model.communicationchannel.model.DeviceInfo content) throws java.io.IOException {
    UpdateDeviceInfo result = new UpdateDeviceInfo(content);
    initialize(result);
    return result;
  }

  public class UpdateDeviceInfo extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DeviceInfo> {

    private static final String REST_PATH = "deviceinfo";

    /**
     * Create a request for the method "updateDeviceInfo".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateDeviceInfo#execute()} method to invoke the
     * remote operation. <p> {@link UpdateDeviceInfo#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.DeviceInfo}
     * @since 1.13
     */
    protected UpdateDeviceInfo(com.csgit.cao.model.communicationchannel.model.DeviceInfo content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.DeviceInfo.class);
    }

    @Override
    public UpdateDeviceInfo setAlt(java.lang.String alt) {
      return (UpdateDeviceInfo) super.setAlt(alt);
    }

    @Override
    public UpdateDeviceInfo setFields(java.lang.String fields) {
      return (UpdateDeviceInfo) super.setFields(fields);
    }

    @Override
    public UpdateDeviceInfo setKey(java.lang.String key) {
      return (UpdateDeviceInfo) super.setKey(key);
    }

    @Override
    public UpdateDeviceInfo setOauthToken(java.lang.String oauthToken) {
      return (UpdateDeviceInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDeviceInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDeviceInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDeviceInfo setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDeviceInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDeviceInfo setUserIp(java.lang.String userIp) {
      return (UpdateDeviceInfo) super.setUserIp(userIp);
    }

    @Override
    public UpdateDeviceInfo set(String parameterName, Object value) {
      return (UpdateDeviceInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDirectivo_Proyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateDirectivoProyecto#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.DirectivoProyecto}
   * @return the request
   */
  public UpdateDirectivoProyecto updateDirectivoProyecto(com.csgit.cao.model.communicationchannel.model.DirectivoProyecto content) throws java.io.IOException {
    UpdateDirectivoProyecto result = new UpdateDirectivoProyecto(content);
    initialize(result);
    return result;
  }

  public class UpdateDirectivoProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.DirectivoProyecto> {

    private static final String REST_PATH = "directivo_proyecto";

    /**
     * Create a request for the method "updateDirectivo_Proyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateDirectivoProyecto#execute()} method to invoke
     * the remote operation. <p> {@link UpdateDirectivoProyecto#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.DirectivoProyecto}
     * @since 1.13
     */
    protected UpdateDirectivoProyecto(com.csgit.cao.model.communicationchannel.model.DirectivoProyecto content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.DirectivoProyecto.class);
    }

    @Override
    public UpdateDirectivoProyecto setAlt(java.lang.String alt) {
      return (UpdateDirectivoProyecto) super.setAlt(alt);
    }

    @Override
    public UpdateDirectivoProyecto setFields(java.lang.String fields) {
      return (UpdateDirectivoProyecto) super.setFields(fields);
    }

    @Override
    public UpdateDirectivoProyecto setKey(java.lang.String key) {
      return (UpdateDirectivoProyecto) super.setKey(key);
    }

    @Override
    public UpdateDirectivoProyecto setOauthToken(java.lang.String oauthToken) {
      return (UpdateDirectivoProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDirectivoProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDirectivoProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDirectivoProyecto setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDirectivoProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDirectivoProyecto setUserIp(java.lang.String userIp) {
      return (UpdateDirectivoProyecto) super.setUserIp(userIp);
    }

    @Override
    public UpdateDirectivoProyecto set(String parameterName, Object value) {
      return (UpdateDirectivoProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDirectorio".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateDirectorio#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Directorio}
   * @return the request
   */
  public UpdateDirectorio updateDirectorio(com.csgit.cao.model.communicationchannel.model.Directorio content) throws java.io.IOException {
    UpdateDirectorio result = new UpdateDirectorio(content);
    initialize(result);
    return result;
  }

  public class UpdateDirectorio extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Directorio> {

    private static final String REST_PATH = "directorio";

    /**
     * Create a request for the method "updateDirectorio".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateDirectorio#execute()} method to invoke the
     * remote operation. <p> {@link UpdateDirectorio#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Directorio}
     * @since 1.13
     */
    protected UpdateDirectorio(com.csgit.cao.model.communicationchannel.model.Directorio content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Directorio.class);
    }

    @Override
    public UpdateDirectorio setAlt(java.lang.String alt) {
      return (UpdateDirectorio) super.setAlt(alt);
    }

    @Override
    public UpdateDirectorio setFields(java.lang.String fields) {
      return (UpdateDirectorio) super.setFields(fields);
    }

    @Override
    public UpdateDirectorio setKey(java.lang.String key) {
      return (UpdateDirectorio) super.setKey(key);
    }

    @Override
    public UpdateDirectorio setOauthToken(java.lang.String oauthToken) {
      return (UpdateDirectorio) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDirectorio setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDirectorio) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDirectorio setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDirectorio) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDirectorio setUserIp(java.lang.String userIp) {
      return (UpdateDirectorio) super.setUserIp(userIp);
    }

    @Override
    public UpdateDirectorio set(String parameterName, Object value) {
      return (UpdateDirectorio) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateEmpresa".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateEmpresa#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Empresa}
   * @return the request
   */
  public UpdateEmpresa updateEmpresa(com.csgit.cao.model.communicationchannel.model.Empresa content) throws java.io.IOException {
    UpdateEmpresa result = new UpdateEmpresa(content);
    initialize(result);
    return result;
  }

  public class UpdateEmpresa extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Empresa> {

    private static final String REST_PATH = "empresa";

    /**
     * Create a request for the method "updateEmpresa".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateEmpresa#execute()} method to invoke the remote
     * operation. <p> {@link UpdateEmpresa#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Empresa}
     * @since 1.13
     */
    protected UpdateEmpresa(com.csgit.cao.model.communicationchannel.model.Empresa content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Empresa.class);
    }

    @Override
    public UpdateEmpresa setAlt(java.lang.String alt) {
      return (UpdateEmpresa) super.setAlt(alt);
    }

    @Override
    public UpdateEmpresa setFields(java.lang.String fields) {
      return (UpdateEmpresa) super.setFields(fields);
    }

    @Override
    public UpdateEmpresa setKey(java.lang.String key) {
      return (UpdateEmpresa) super.setKey(key);
    }

    @Override
    public UpdateEmpresa setOauthToken(java.lang.String oauthToken) {
      return (UpdateEmpresa) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateEmpresa setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateEmpresa) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateEmpresa setQuotaUser(java.lang.String quotaUser) {
      return (UpdateEmpresa) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateEmpresa setUserIp(java.lang.String userIp) {
      return (UpdateEmpresa) super.setUserIp(userIp);
    }

    @Override
    public UpdateEmpresa set(String parameterName, Object value) {
      return (UpdateEmpresa) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateEstimacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateEstimacion#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Estimacion}
   * @return the request
   */
  public UpdateEstimacion updateEstimacion(com.csgit.cao.model.communicationchannel.model.Estimacion content) throws java.io.IOException {
    UpdateEstimacion result = new UpdateEstimacion(content);
    initialize(result);
    return result;
  }

  public class UpdateEstimacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Estimacion> {

    private static final String REST_PATH = "estimacion";

    /**
     * Create a request for the method "updateEstimacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateEstimacion#execute()} method to invoke the
     * remote operation. <p> {@link UpdateEstimacion#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Estimacion}
     * @since 1.13
     */
    protected UpdateEstimacion(com.csgit.cao.model.communicationchannel.model.Estimacion content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Estimacion.class);
    }

    @Override
    public UpdateEstimacion setAlt(java.lang.String alt) {
      return (UpdateEstimacion) super.setAlt(alt);
    }

    @Override
    public UpdateEstimacion setFields(java.lang.String fields) {
      return (UpdateEstimacion) super.setFields(fields);
    }

    @Override
    public UpdateEstimacion setKey(java.lang.String key) {
      return (UpdateEstimacion) super.setKey(key);
    }

    @Override
    public UpdateEstimacion setOauthToken(java.lang.String oauthToken) {
      return (UpdateEstimacion) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateEstimacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateEstimacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateEstimacion setQuotaUser(java.lang.String quotaUser) {
      return (UpdateEstimacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateEstimacion setUserIp(java.lang.String userIp) {
      return (UpdateEstimacion) super.setUserIp(userIp);
    }

    @Override
    public UpdateEstimacion set(String parameterName, Object value) {
      return (UpdateEstimacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateMaquinaria#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Maquinaria}
   * @return the request
   */
  public UpdateMaquinaria updateMaquinaria(com.csgit.cao.model.communicationchannel.model.Maquinaria content) throws java.io.IOException {
    UpdateMaquinaria result = new UpdateMaquinaria(content);
    initialize(result);
    return result;
  }

  public class UpdateMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Maquinaria> {

    private static final String REST_PATH = "maquinaria";

    /**
     * Create a request for the method "updateMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateMaquinaria#execute()} method to invoke the
     * remote operation. <p> {@link UpdateMaquinaria#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Maquinaria}
     * @since 1.13
     */
    protected UpdateMaquinaria(com.csgit.cao.model.communicationchannel.model.Maquinaria content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Maquinaria.class);
    }

    @Override
    public UpdateMaquinaria setAlt(java.lang.String alt) {
      return (UpdateMaquinaria) super.setAlt(alt);
    }

    @Override
    public UpdateMaquinaria setFields(java.lang.String fields) {
      return (UpdateMaquinaria) super.setFields(fields);
    }

    @Override
    public UpdateMaquinaria setKey(java.lang.String key) {
      return (UpdateMaquinaria) super.setKey(key);
    }

    @Override
    public UpdateMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (UpdateMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (UpdateMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateMaquinaria setUserIp(java.lang.String userIp) {
      return (UpdateMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public UpdateMaquinaria set(String parameterName, Object value) {
      return (UpdateMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateMultimedia".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateMultimedia#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Multimedia}
   * @return the request
   */
  public UpdateMultimedia updateMultimedia(com.csgit.cao.model.communicationchannel.model.Multimedia content) throws java.io.IOException {
    UpdateMultimedia result = new UpdateMultimedia(content);
    initialize(result);
    return result;
  }

  public class UpdateMultimedia extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Multimedia> {

    private static final String REST_PATH = "multimedia";

    /**
     * Create a request for the method "updateMultimedia".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateMultimedia#execute()} method to invoke the
     * remote operation. <p> {@link UpdateMultimedia#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Multimedia}
     * @since 1.13
     */
    protected UpdateMultimedia(com.csgit.cao.model.communicationchannel.model.Multimedia content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Multimedia.class);
    }

    @Override
    public UpdateMultimedia setAlt(java.lang.String alt) {
      return (UpdateMultimedia) super.setAlt(alt);
    }

    @Override
    public UpdateMultimedia setFields(java.lang.String fields) {
      return (UpdateMultimedia) super.setFields(fields);
    }

    @Override
    public UpdateMultimedia setKey(java.lang.String key) {
      return (UpdateMultimedia) super.setKey(key);
    }

    @Override
    public UpdateMultimedia setOauthToken(java.lang.String oauthToken) {
      return (UpdateMultimedia) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateMultimedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateMultimedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateMultimedia setQuotaUser(java.lang.String quotaUser) {
      return (UpdateMultimedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateMultimedia setUserIp(java.lang.String userIp) {
      return (UpdateMultimedia) super.setUserIp(userIp);
    }

    @Override
    public UpdateMultimedia set(String parameterName, Object value) {
      return (UpdateMultimedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateNotas".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateNotas#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Notas}
   * @return the request
   */
  public UpdateNotas updateNotas(com.csgit.cao.model.communicationchannel.model.Notas content) throws java.io.IOException {
    UpdateNotas result = new UpdateNotas(content);
    initialize(result);
    return result;
  }

  public class UpdateNotas extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Notas> {

    private static final String REST_PATH = "notas";

    /**
     * Create a request for the method "updateNotas".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateNotas#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateNotas#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Notas}
     * @since 1.13
     */
    protected UpdateNotas(com.csgit.cao.model.communicationchannel.model.Notas content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Notas.class);
    }

    @Override
    public UpdateNotas setAlt(java.lang.String alt) {
      return (UpdateNotas) super.setAlt(alt);
    }

    @Override
    public UpdateNotas setFields(java.lang.String fields) {
      return (UpdateNotas) super.setFields(fields);
    }

    @Override
    public UpdateNotas setKey(java.lang.String key) {
      return (UpdateNotas) super.setKey(key);
    }

    @Override
    public UpdateNotas setOauthToken(java.lang.String oauthToken) {
      return (UpdateNotas) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateNotas setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateNotas) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateNotas setQuotaUser(java.lang.String quotaUser) {
      return (UpdateNotas) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateNotas setUserIp(java.lang.String userIp) {
      return (UpdateNotas) super.setUserIp(userIp);
    }

    @Override
    public UpdateNotas set(String parameterName, Object value) {
      return (UpdateNotas) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateObra".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateObra#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Obra}
   * @return the request
   */
  public UpdateObra updateObra(com.csgit.cao.model.communicationchannel.model.Obra content) throws java.io.IOException {
    UpdateObra result = new UpdateObra(content);
    initialize(result);
    return result;
  }

  public class UpdateObra extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Obra> {

    private static final String REST_PATH = "obra";

    /**
     * Create a request for the method "updateObra".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateObra#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateObra#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Obra}
     * @since 1.13
     */
    protected UpdateObra(com.csgit.cao.model.communicationchannel.model.Obra content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Obra.class);
    }

    @Override
    public UpdateObra setAlt(java.lang.String alt) {
      return (UpdateObra) super.setAlt(alt);
    }

    @Override
    public UpdateObra setFields(java.lang.String fields) {
      return (UpdateObra) super.setFields(fields);
    }

    @Override
    public UpdateObra setKey(java.lang.String key) {
      return (UpdateObra) super.setKey(key);
    }

    @Override
    public UpdateObra setOauthToken(java.lang.String oauthToken) {
      return (UpdateObra) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateObra setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateObra) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateObra setQuotaUser(java.lang.String quotaUser) {
      return (UpdateObra) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateObra setUserIp(java.lang.String userIp) {
      return (UpdateObra) super.setUserIp(userIp);
    }

    @Override
    public UpdateObra set(String parameterName, Object value) {
      return (UpdateObra) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateOrg_Goubernamental".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateOrgGoubernamental#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.OrgGoubernamental}
   * @return the request
   */
  public UpdateOrgGoubernamental updateOrgGoubernamental(com.csgit.cao.model.communicationchannel.model.OrgGoubernamental content) throws java.io.IOException {
    UpdateOrgGoubernamental result = new UpdateOrgGoubernamental(content);
    initialize(result);
    return result;
  }

  public class UpdateOrgGoubernamental extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.OrgGoubernamental> {

    private static final String REST_PATH = "org_goubernamental";

    /**
     * Create a request for the method "updateOrg_Goubernamental".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateOrgGoubernamental#execute()} method to invoke
     * the remote operation. <p> {@link UpdateOrgGoubernamental#initialize(com.google.api.client.googl
     * eapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.OrgGoubernamental}
     * @since 1.13
     */
    protected UpdateOrgGoubernamental(com.csgit.cao.model.communicationchannel.model.OrgGoubernamental content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.OrgGoubernamental.class);
    }

    @Override
    public UpdateOrgGoubernamental setAlt(java.lang.String alt) {
      return (UpdateOrgGoubernamental) super.setAlt(alt);
    }

    @Override
    public UpdateOrgGoubernamental setFields(java.lang.String fields) {
      return (UpdateOrgGoubernamental) super.setFields(fields);
    }

    @Override
    public UpdateOrgGoubernamental setKey(java.lang.String key) {
      return (UpdateOrgGoubernamental) super.setKey(key);
    }

    @Override
    public UpdateOrgGoubernamental setOauthToken(java.lang.String oauthToken) {
      return (UpdateOrgGoubernamental) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateOrgGoubernamental setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateOrgGoubernamental) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateOrgGoubernamental setQuotaUser(java.lang.String quotaUser) {
      return (UpdateOrgGoubernamental) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateOrgGoubernamental setUserIp(java.lang.String userIp) {
      return (UpdateOrgGoubernamental) super.setUserIp(userIp);
    }

    @Override
    public UpdateOrgGoubernamental set(String parameterName, Object value) {
      return (UpdateOrgGoubernamental) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePersona".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdatePersona#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Persona}
   * @return the request
   */
  public UpdatePersona updatePersona(com.csgit.cao.model.communicationchannel.model.Persona content) throws java.io.IOException {
    UpdatePersona result = new UpdatePersona(content);
    initialize(result);
    return result;
  }

  public class UpdatePersona extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Persona> {

    private static final String REST_PATH = "persona";

    /**
     * Create a request for the method "updatePersona".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdatePersona#execute()} method to invoke the remote
     * operation. <p> {@link UpdatePersona#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Persona}
     * @since 1.13
     */
    protected UpdatePersona(com.csgit.cao.model.communicationchannel.model.Persona content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Persona.class);
    }

    @Override
    public UpdatePersona setAlt(java.lang.String alt) {
      return (UpdatePersona) super.setAlt(alt);
    }

    @Override
    public UpdatePersona setFields(java.lang.String fields) {
      return (UpdatePersona) super.setFields(fields);
    }

    @Override
    public UpdatePersona setKey(java.lang.String key) {
      return (UpdatePersona) super.setKey(key);
    }

    @Override
    public UpdatePersona setOauthToken(java.lang.String oauthToken) {
      return (UpdatePersona) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePersona setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePersona) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePersona setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePersona) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePersona setUserIp(java.lang.String userIp) {
      return (UpdatePersona) super.setUserIp(userIp);
    }

    @Override
    public UpdatePersona set(String parameterName, Object value) {
      return (UpdatePersona) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePrograma".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdatePrograma#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Programa}
   * @return the request
   */
  public UpdatePrograma updatePrograma(com.csgit.cao.model.communicationchannel.model.Programa content) throws java.io.IOException {
    UpdatePrograma result = new UpdatePrograma(content);
    initialize(result);
    return result;
  }

  public class UpdatePrograma extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Programa> {

    private static final String REST_PATH = "programa";

    /**
     * Create a request for the method "updatePrograma".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdatePrograma#execute()} method to invoke the remote
     * operation. <p> {@link UpdatePrograma#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Programa}
     * @since 1.13
     */
    protected UpdatePrograma(com.csgit.cao.model.communicationchannel.model.Programa content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Programa.class);
    }

    @Override
    public UpdatePrograma setAlt(java.lang.String alt) {
      return (UpdatePrograma) super.setAlt(alt);
    }

    @Override
    public UpdatePrograma setFields(java.lang.String fields) {
      return (UpdatePrograma) super.setFields(fields);
    }

    @Override
    public UpdatePrograma setKey(java.lang.String key) {
      return (UpdatePrograma) super.setKey(key);
    }

    @Override
    public UpdatePrograma setOauthToken(java.lang.String oauthToken) {
      return (UpdatePrograma) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePrograma setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePrograma) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePrograma setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePrograma) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePrograma setUserIp(java.lang.String userIp) {
      return (UpdatePrograma) super.setUserIp(userIp);
    }

    @Override
    public UpdatePrograma set(String parameterName, Object value) {
      return (UpdatePrograma) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProyecto".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateProyecto#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Proyecto}
   * @return the request
   */
  public UpdateProyecto updateProyecto(com.csgit.cao.model.communicationchannel.model.Proyecto content) throws java.io.IOException {
    UpdateProyecto result = new UpdateProyecto(content);
    initialize(result);
    return result;
  }

  public class UpdateProyecto extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Proyecto> {

    private static final String REST_PATH = "proyecto";

    /**
     * Create a request for the method "updateProyecto".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateProyecto#execute()} method to invoke the remote
     * operation. <p> {@link UpdateProyecto#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Proyecto}
     * @since 1.13
     */
    protected UpdateProyecto(com.csgit.cao.model.communicationchannel.model.Proyecto content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Proyecto.class);
    }

    @Override
    public UpdateProyecto setAlt(java.lang.String alt) {
      return (UpdateProyecto) super.setAlt(alt);
    }

    @Override
    public UpdateProyecto setFields(java.lang.String fields) {
      return (UpdateProyecto) super.setFields(fields);
    }

    @Override
    public UpdateProyecto setKey(java.lang.String key) {
      return (UpdateProyecto) super.setKey(key);
    }

    @Override
    public UpdateProyecto setOauthToken(java.lang.String oauthToken) {
      return (UpdateProyecto) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProyecto setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateProyecto) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProyecto setQuotaUser(java.lang.String quotaUser) {
      return (UpdateProyecto) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProyecto setUserIp(java.lang.String userIp) {
      return (UpdateProyecto) super.setUserIp(userIp);
    }

    @Override
    public UpdateProyecto set(String parameterName, Object value) {
      return (UpdateProyecto) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updatePush".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdatePush#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Push}
   * @return the request
   */
  public UpdatePush updatePush(com.csgit.cao.model.communicationchannel.model.Push content) throws java.io.IOException {
    UpdatePush result = new UpdatePush(content);
    initialize(result);
    return result;
  }

  public class UpdatePush extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Push> {

    private static final String REST_PATH = "push";

    /**
     * Create a request for the method "updatePush".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdatePush#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdatePush#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Push}
     * @since 1.13
     */
    protected UpdatePush(com.csgit.cao.model.communicationchannel.model.Push content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Push.class);
    }

    @Override
    public UpdatePush setAlt(java.lang.String alt) {
      return (UpdatePush) super.setAlt(alt);
    }

    @Override
    public UpdatePush setFields(java.lang.String fields) {
      return (UpdatePush) super.setFields(fields);
    }

    @Override
    public UpdatePush setKey(java.lang.String key) {
      return (UpdatePush) super.setKey(key);
    }

    @Override
    public UpdatePush setOauthToken(java.lang.String oauthToken) {
      return (UpdatePush) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdatePush setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdatePush) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdatePush setQuotaUser(java.lang.String quotaUser) {
      return (UpdatePush) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdatePush setUserIp(java.lang.String userIp) {
      return (UpdatePush) super.setUserIp(userIp);
    }

    @Override
    public UpdatePush set(String parameterName, Object value) {
      return (UpdatePush) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRef_calendarizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateRefCalendarizacion#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RefCalendarizacion}
   * @return the request
   */
  public UpdateRefCalendarizacion updateRefCalendarizacion(com.csgit.cao.model.communicationchannel.model.RefCalendarizacion content) throws java.io.IOException {
    UpdateRefCalendarizacion result = new UpdateRefCalendarizacion(content);
    initialize(result);
    return result;
  }

  public class UpdateRefCalendarizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RefCalendarizacion> {

    private static final String REST_PATH = "ref_calendarizacion";

    /**
     * Create a request for the method "updateRef_calendarizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateRefCalendarizacion#execute()} method to invoke
     * the remote operation. <p> {@link UpdateRefCalendarizacion#initialize(com.google.api.client.goog
     * leapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RefCalendarizacion}
     * @since 1.13
     */
    protected UpdateRefCalendarizacion(com.csgit.cao.model.communicationchannel.model.RefCalendarizacion content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RefCalendarizacion.class);
    }

    @Override
    public UpdateRefCalendarizacion setAlt(java.lang.String alt) {
      return (UpdateRefCalendarizacion) super.setAlt(alt);
    }

    @Override
    public UpdateRefCalendarizacion setFields(java.lang.String fields) {
      return (UpdateRefCalendarizacion) super.setFields(fields);
    }

    @Override
    public UpdateRefCalendarizacion setKey(java.lang.String key) {
      return (UpdateRefCalendarizacion) super.setKey(key);
    }

    @Override
    public UpdateRefCalendarizacion setOauthToken(java.lang.String oauthToken) {
      return (UpdateRefCalendarizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRefCalendarizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRefCalendarizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRefCalendarizacion setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRefCalendarizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRefCalendarizacion setUserIp(java.lang.String userIp) {
      return (UpdateRefCalendarizacion) super.setUserIp(userIp);
    }

    @Override
    public UpdateRefCalendarizacion set(String parameterName, Object value) {
      return (UpdateRefCalendarizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRepMaquinariaCatMaquinaria".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateRepMaquinariaCatMaquinaria#execute()} method to invoke
   * the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria}
   * @return the request
   */
  public UpdateRepMaquinariaCatMaquinaria updateRepMaquinariaCatMaquinaria(com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria content) throws java.io.IOException {
    UpdateRepMaquinariaCatMaquinaria result = new UpdateRepMaquinariaCatMaquinaria(content);
    initialize(result);
    return result;
  }

  public class UpdateRepMaquinariaCatMaquinaria extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria> {

    private static final String REST_PATH = "repmaquinariacatmaquinaria";

    /**
     * Create a request for the method "updateRepMaquinariaCatMaquinaria".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateRepMaquinariaCatMaquinaria#execute()} method to
     * invoke the remote operation. <p> {@link UpdateRepMaquinariaCatMaquinaria#initialize(com.google.
     * api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria}
     * @since 1.13
     */
    protected UpdateRepMaquinariaCatMaquinaria(com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RepMaquinariaCatMaquinaria.class);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setAlt(java.lang.String alt) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setAlt(alt);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setFields(java.lang.String fields) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setFields(fields);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setKey(java.lang.String key) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setKey(key);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setOauthToken(java.lang.String oauthToken) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria setUserIp(java.lang.String userIp) {
      return (UpdateRepMaquinariaCatMaquinaria) super.setUserIp(userIp);
    }

    @Override
    public UpdateRepMaquinariaCatMaquinaria set(String parameterName, Object value) {
      return (UpdateRepMaquinariaCatMaquinaria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRepoPersonalCatPersonal".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateRepoPersonalCatPersonal#execute()} method to invoke
   * the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal}
   * @return the request
   */
  public UpdateRepoPersonalCatPersonal updateRepoPersonalCatPersonal(com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal content) throws java.io.IOException {
    UpdateRepoPersonalCatPersonal result = new UpdateRepoPersonalCatPersonal(content);
    initialize(result);
    return result;
  }

  public class UpdateRepoPersonalCatPersonal extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal> {

    private static final String REST_PATH = "repopersonalcatpersonal";

    /**
     * Create a request for the method "updateRepoPersonalCatPersonal".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateRepoPersonalCatPersonal#execute()} method to
     * invoke the remote operation. <p> {@link UpdateRepoPersonalCatPersonal#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal}
     * @since 1.13
     */
    protected UpdateRepoPersonalCatPersonal(com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.RepoPersonalCatPersonal.class);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setAlt(java.lang.String alt) {
      return (UpdateRepoPersonalCatPersonal) super.setAlt(alt);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setFields(java.lang.String fields) {
      return (UpdateRepoPersonalCatPersonal) super.setFields(fields);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setKey(java.lang.String key) {
      return (UpdateRepoPersonalCatPersonal) super.setKey(key);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setOauthToken(java.lang.String oauthToken) {
      return (UpdateRepoPersonalCatPersonal) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRepoPersonalCatPersonal) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRepoPersonalCatPersonal) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRepoPersonalCatPersonal setUserIp(java.lang.String userIp) {
      return (UpdateRepoPersonalCatPersonal) super.setUserIp(userIp);
    }

    @Override
    public UpdateRepoPersonalCatPersonal set(String parameterName, Object value) {
      return (UpdateRepoPersonalCatPersonal) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateReporteDiario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateReporteDiario#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.ReporteDiario}
   * @return the request
   */
  public UpdateReporteDiario updateReporteDiario(com.csgit.cao.model.communicationchannel.model.ReporteDiario content) throws java.io.IOException {
    UpdateReporteDiario result = new UpdateReporteDiario(content);
    initialize(result);
    return result;
  }

  public class UpdateReporteDiario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.ReporteDiario> {

    private static final String REST_PATH = "reportediario";

    /**
     * Create a request for the method "updateReporteDiario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateReporteDiario#execute()} method to invoke the
     * remote operation. <p> {@link UpdateReporteDiario#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.ReporteDiario}
     * @since 1.13
     */
    protected UpdateReporteDiario(com.csgit.cao.model.communicationchannel.model.ReporteDiario content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.ReporteDiario.class);
    }

    @Override
    public UpdateReporteDiario setAlt(java.lang.String alt) {
      return (UpdateReporteDiario) super.setAlt(alt);
    }

    @Override
    public UpdateReporteDiario setFields(java.lang.String fields) {
      return (UpdateReporteDiario) super.setFields(fields);
    }

    @Override
    public UpdateReporteDiario setKey(java.lang.String key) {
      return (UpdateReporteDiario) super.setKey(key);
    }

    @Override
    public UpdateReporteDiario setOauthToken(java.lang.String oauthToken) {
      return (UpdateReporteDiario) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateReporteDiario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateReporteDiario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateReporteDiario setQuotaUser(java.lang.String quotaUser) {
      return (UpdateReporteDiario) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateReporteDiario setUserIp(java.lang.String userIp) {
      return (UpdateReporteDiario) super.setUserIp(userIp);
    }

    @Override
    public UpdateReporteDiario set(String parameterName, Object value) {
      return (UpdateReporteDiario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateReportsmodel".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateReportsmodel#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Reportsmodel}
   * @return the request
   */
  public UpdateReportsmodel updateReportsmodel(com.csgit.cao.model.communicationchannel.model.Reportsmodel content) throws java.io.IOException {
    UpdateReportsmodel result = new UpdateReportsmodel(content);
    initialize(result);
    return result;
  }

  public class UpdateReportsmodel extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Reportsmodel> {

    private static final String REST_PATH = "reportsmodel";

    /**
     * Create a request for the method "updateReportsmodel".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateReportsmodel#execute()} method to invoke the
     * remote operation. <p> {@link UpdateReportsmodel#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Reportsmodel}
     * @since 1.13
     */
    protected UpdateReportsmodel(com.csgit.cao.model.communicationchannel.model.Reportsmodel content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Reportsmodel.class);
    }

    @Override
    public UpdateReportsmodel setAlt(java.lang.String alt) {
      return (UpdateReportsmodel) super.setAlt(alt);
    }

    @Override
    public UpdateReportsmodel setFields(java.lang.String fields) {
      return (UpdateReportsmodel) super.setFields(fields);
    }

    @Override
    public UpdateReportsmodel setKey(java.lang.String key) {
      return (UpdateReportsmodel) super.setKey(key);
    }

    @Override
    public UpdateReportsmodel setOauthToken(java.lang.String oauthToken) {
      return (UpdateReportsmodel) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateReportsmodel setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateReportsmodel) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateReportsmodel setQuotaUser(java.lang.String quotaUser) {
      return (UpdateReportsmodel) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateReportsmodel setUserIp(java.lang.String userIp) {
      return (UpdateReportsmodel) super.setUserIp(userIp);
    }

    @Override
    public UpdateReportsmodel set(String parameterName, Object value) {
      return (UpdateReportsmodel) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateSincronizacion".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateSincronizacion#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Sincronizacion}
   * @return the request
   */
  public UpdateSincronizacion updateSincronizacion(com.csgit.cao.model.communicationchannel.model.Sincronizacion content) throws java.io.IOException {
    UpdateSincronizacion result = new UpdateSincronizacion(content);
    initialize(result);
    return result;
  }

  public class UpdateSincronizacion extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Sincronizacion> {

    private static final String REST_PATH = "sincronizacion";

    /**
     * Create a request for the method "updateSincronizacion".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateSincronizacion#execute()} method to invoke the
     * remote operation. <p> {@link UpdateSincronizacion#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Sincronizacion}
     * @since 1.13
     */
    protected UpdateSincronizacion(com.csgit.cao.model.communicationchannel.model.Sincronizacion content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Sincronizacion.class);
    }

    @Override
    public UpdateSincronizacion setAlt(java.lang.String alt) {
      return (UpdateSincronizacion) super.setAlt(alt);
    }

    @Override
    public UpdateSincronizacion setFields(java.lang.String fields) {
      return (UpdateSincronizacion) super.setFields(fields);
    }

    @Override
    public UpdateSincronizacion setKey(java.lang.String key) {
      return (UpdateSincronizacion) super.setKey(key);
    }

    @Override
    public UpdateSincronizacion setOauthToken(java.lang.String oauthToken) {
      return (UpdateSincronizacion) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateSincronizacion setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateSincronizacion) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateSincronizacion setQuotaUser(java.lang.String quotaUser) {
      return (UpdateSincronizacion) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateSincronizacion setUserIp(java.lang.String userIp) {
      return (UpdateSincronizacion) super.setUserIp(userIp);
    }

    @Override
    public UpdateSincronizacion set(String parameterName, Object value) {
      return (UpdateSincronizacion) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUbicaciones".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateUbicaciones#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Ubicaciones}
   * @return the request
   */
  public UpdateUbicaciones updateUbicaciones(com.csgit.cao.model.communicationchannel.model.Ubicaciones content) throws java.io.IOException {
    UpdateUbicaciones result = new UpdateUbicaciones(content);
    initialize(result);
    return result;
  }

  public class UpdateUbicaciones extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Ubicaciones> {

    private static final String REST_PATH = "ubicaciones";

    /**
     * Create a request for the method "updateUbicaciones".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateUbicaciones#execute()} method to invoke the
     * remote operation. <p> {@link UpdateUbicaciones#initialize(com.google.api.client.googleapis.serv
     * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Ubicaciones}
     * @since 1.13
     */
    protected UpdateUbicaciones(com.csgit.cao.model.communicationchannel.model.Ubicaciones content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Ubicaciones.class);
    }

    @Override
    public UpdateUbicaciones setAlt(java.lang.String alt) {
      return (UpdateUbicaciones) super.setAlt(alt);
    }

    @Override
    public UpdateUbicaciones setFields(java.lang.String fields) {
      return (UpdateUbicaciones) super.setFields(fields);
    }

    @Override
    public UpdateUbicaciones setKey(java.lang.String key) {
      return (UpdateUbicaciones) super.setKey(key);
    }

    @Override
    public UpdateUbicaciones setOauthToken(java.lang.String oauthToken) {
      return (UpdateUbicaciones) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUbicaciones setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUbicaciones) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUbicaciones setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUbicaciones) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUbicaciones setUserIp(java.lang.String userIp) {
      return (UpdateUbicaciones) super.setUserIp(userIp);
    }

    @Override
    public UpdateUbicaciones set(String parameterName, Object value) {
      return (UpdateUbicaciones) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUsuario".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateUsuario#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Usuario}
   * @return the request
   */
  public UpdateUsuario updateUsuario(com.csgit.cao.model.communicationchannel.model.Usuario content) throws java.io.IOException {
    UpdateUsuario result = new UpdateUsuario(content);
    initialize(result);
    return result;
  }

  public class UpdateUsuario extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Usuario> {

    private static final String REST_PATH = "usuario";

    /**
     * Create a request for the method "updateUsuario".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateUsuario#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUsuario#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Usuario}
     * @since 1.13
     */
    protected UpdateUsuario(com.csgit.cao.model.communicationchannel.model.Usuario content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Usuario.class);
    }

    @Override
    public UpdateUsuario setAlt(java.lang.String alt) {
      return (UpdateUsuario) super.setAlt(alt);
    }

    @Override
    public UpdateUsuario setFields(java.lang.String fields) {
      return (UpdateUsuario) super.setFields(fields);
    }

    @Override
    public UpdateUsuario setKey(java.lang.String key) {
      return (UpdateUsuario) super.setKey(key);
    }

    @Override
    public UpdateUsuario setOauthToken(java.lang.String oauthToken) {
      return (UpdateUsuario) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUsuario setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUsuario) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUsuario setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUsuario) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUsuario setUserIp(java.lang.String userIp) {
      return (UpdateUsuario) super.setUserIp(userIp);
    }

    @Override
    public UpdateUsuario set(String parameterName, Object value) {
      return (UpdateUsuario) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateXmpp".
   *
   * This request holds the parameters needed by the communicationchannel server.  After setting any
   * optional parameters, call the {@link UpdateXmpp#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.csgit.cao.model.communicationchannel.model.Xmpp}
   * @return the request
   */
  public UpdateXmpp updateXmpp(com.csgit.cao.model.communicationchannel.model.Xmpp content) throws java.io.IOException {
    UpdateXmpp result = new UpdateXmpp(content);
    initialize(result);
    return result;
  }

  public class UpdateXmpp extends CommunicationchannelRequest<com.csgit.cao.model.communicationchannel.model.Xmpp> {

    private static final String REST_PATH = "xmpp";

    /**
     * Create a request for the method "updateXmpp".
     *
     * This request holds the parameters needed by the the communicationchannel server.  After setting
     * any optional parameters, call the {@link UpdateXmpp#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateXmpp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.csgit.cao.model.communicationchannel.model.Xmpp}
     * @since 1.13
     */
    protected UpdateXmpp(com.csgit.cao.model.communicationchannel.model.Xmpp content) {
      super(Communicationchannel.this, "PUT", REST_PATH, content, com.csgit.cao.model.communicationchannel.model.Xmpp.class);
    }

    @Override
    public UpdateXmpp setAlt(java.lang.String alt) {
      return (UpdateXmpp) super.setAlt(alt);
    }

    @Override
    public UpdateXmpp setFields(java.lang.String fields) {
      return (UpdateXmpp) super.setFields(fields);
    }

    @Override
    public UpdateXmpp setKey(java.lang.String key) {
      return (UpdateXmpp) super.setKey(key);
    }

    @Override
    public UpdateXmpp setOauthToken(java.lang.String oauthToken) {
      return (UpdateXmpp) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateXmpp setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateXmpp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateXmpp setQuotaUser(java.lang.String quotaUser) {
      return (UpdateXmpp) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateXmpp setUserIp(java.lang.String userIp) {
      return (UpdateXmpp) super.setUserIp(userIp);
    }

    @Override
    public UpdateXmpp set(String parameterName, Object value) {
      return (UpdateXmpp) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Communicationchannel}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Communicationchannel}. */
    @Override
    public Communicationchannel build() {
      return new Communicationchannel(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CommunicationchannelRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCommunicationchannelRequestInitializer(
        CommunicationchannelRequestInitializer communicationchannelRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(communicationchannelRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
